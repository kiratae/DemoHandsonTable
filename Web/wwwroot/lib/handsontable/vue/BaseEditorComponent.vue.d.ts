import Vue from 'vue';
import Handsontable from 'handsontable';
declare class BaseEditorComponent extends Vue implements Handsontable._editors.Base {
    name: string;
    instance: any;
    row: any;
    col: any;
    prop: any;
    TD: any;
    originalValue: any;
    cellProperties: any;
    state: any;
    hot: any;
    mounted(): void;
    private _fireCallbacks;
    beginEditing(...args: any[]): any;
    cancelChanges(...args: any[]): any;
    checkEditorSection(...args: any[]): any;
    close(...args: any[]): any;
    discardEditor(...args: any[]): any;
    enableFullEditMode(...args: any[]): any;
    extend(...args: any[]): any;
    finishEditing(...args: any[]): any;
    focus(...args: any[]): any;
    getValue(...args: any[]): any;
    init(...args: any[]): any;
    isInFullEditMode(...args: any[]): any;
    isOpened(...args: any[]): any;
    isWaiting(...args: any[]): any;
    open(...args: any[]): any;
    prepare(row: any, col: any, prop: any, TD: any, originalValue: any, cellProperties: any): any;
    saveValue(...args: any[]): any;
    setValue(...args: any[]): any;
    addHook(...args: any[]): any;
    removeHooksByKey(...args: any[]): any;
    clearHooks(...args: any[]): any;
    getEditedCell(...args: any[]): any;
    getEditedCellsZIndex(...args: any[]): any;
    getEditedCellsLayerClass(...args: any[]): any;
}
export default BaseEditorComponent;
export { BaseEditorComponent };
