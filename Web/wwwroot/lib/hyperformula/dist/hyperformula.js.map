{"version":3,"sources":["webpack://HyperFormula/webpack/universalModuleDefinition","webpack://HyperFormula/webpack/bootstrap","webpack://HyperFormula/./lib/index.js","webpack://HyperFormula/./node_modules/core-js/modules/es.symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/export.js","webpack://HyperFormula/./node_modules/core-js/internals/global.js","webpack://HyperFormula/(webpack)/buildin/global.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/internals/descriptors.js","webpack://HyperFormula/./node_modules/core-js/internals/fails.js","webpack://HyperFormula/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://HyperFormula/./node_modules/core-js/internals/create-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/internals/to-indexed-object.js","webpack://HyperFormula/./node_modules/core-js/internals/indexed-object.js","webpack://HyperFormula/./node_modules/core-js/internals/classof-raw.js","webpack://HyperFormula/./node_modules/core-js/internals/require-object-coercible.js","webpack://HyperFormula/./node_modules/core-js/internals/to-primitive.js","webpack://HyperFormula/./node_modules/core-js/internals/is-object.js","webpack://HyperFormula/./node_modules/core-js/internals/has.js","webpack://HyperFormula/./node_modules/core-js/internals/ie8-dom-define.js","webpack://HyperFormula/./node_modules/core-js/internals/document-create-element.js","webpack://HyperFormula/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://HyperFormula/./node_modules/core-js/internals/object-define-property.js","webpack://HyperFormula/./node_modules/core-js/internals/an-object.js","webpack://HyperFormula/./node_modules/core-js/internals/redefine.js","webpack://HyperFormula/./node_modules/core-js/internals/set-global.js","webpack://HyperFormula/./node_modules/core-js/internals/inspect-source.js","webpack://HyperFormula/./node_modules/core-js/internals/shared-store.js","webpack://HyperFormula/./node_modules/core-js/internals/internal-state.js","webpack://HyperFormula/./node_modules/core-js/internals/native-weak-map.js","webpack://HyperFormula/./node_modules/core-js/internals/shared-key.js","webpack://HyperFormula/./node_modules/core-js/internals/shared.js","webpack://HyperFormula/./node_modules/core-js/internals/is-pure.js","webpack://HyperFormula/./node_modules/core-js/internals/uid.js","webpack://HyperFormula/./node_modules/core-js/internals/hidden-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://HyperFormula/./node_modules/core-js/internals/own-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/get-built-in.js","webpack://HyperFormula/./node_modules/core-js/internals/path.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://HyperFormula/./node_modules/core-js/internals/object-keys-internal.js","webpack://HyperFormula/./node_modules/core-js/internals/array-includes.js","webpack://HyperFormula/./node_modules/core-js/internals/to-length.js","webpack://HyperFormula/./node_modules/core-js/internals/to-integer.js","webpack://HyperFormula/./node_modules/core-js/internals/to-absolute-index.js","webpack://HyperFormula/./node_modules/core-js/internals/enum-bug-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://HyperFormula/./node_modules/core-js/internals/is-forced.js","webpack://HyperFormula/./node_modules/core-js/internals/native-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://HyperFormula/./node_modules/core-js/internals/is-array.js","webpack://HyperFormula/./node_modules/core-js/internals/to-object.js","webpack://HyperFormula/./node_modules/core-js/internals/object-create.js","webpack://HyperFormula/./node_modules/core-js/internals/object-define-properties.js","webpack://HyperFormula/./node_modules/core-js/internals/object-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/html.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack://HyperFormula/./node_modules/core-js/internals/well-known-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack://HyperFormula/./node_modules/core-js/internals/define-well-known-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/set-to-string-tag.js","webpack://HyperFormula/./node_modules/core-js/internals/array-iteration.js","webpack://HyperFormula/./node_modules/core-js/internals/function-bind-context.js","webpack://HyperFormula/./node_modules/core-js/internals/a-function.js","webpack://HyperFormula/./node_modules/core-js/internals/array-species-create.js","webpack://HyperFormula/./node_modules/core-js/modules/es.symbol.description.js","webpack://HyperFormula/./node_modules/core-js/modules/es.symbol.iterator.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.from.js","webpack://HyperFormula/./node_modules/core-js/internals/array-from.js","webpack://HyperFormula/./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack://HyperFormula/./node_modules/core-js/internals/is-array-iterator-method.js","webpack://HyperFormula/./node_modules/core-js/internals/iterators.js","webpack://HyperFormula/./node_modules/core-js/internals/create-property.js","webpack://HyperFormula/./node_modules/core-js/internals/get-iterator-method.js","webpack://HyperFormula/./node_modules/core-js/internals/classof.js","webpack://HyperFormula/./node_modules/core-js/internals/to-string-tag-support.js","webpack://HyperFormula/./node_modules/core-js/internals/check-correctness-of-iteration.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.iterator.js","webpack://HyperFormula/./node_modules/core-js/internals/add-to-unscopables.js","webpack://HyperFormula/./node_modules/core-js/internals/define-iterator.js","webpack://HyperFormula/./node_modules/core-js/internals/create-iterator-constructor.js","webpack://HyperFormula/./node_modules/core-js/internals/iterators-core.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://HyperFormula/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://HyperFormula/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://HyperFormula/./node_modules/core-js/internals/a-possible-prototype.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.slice.js","webpack://HyperFormula/./node_modules/core-js/internals/array-method-has-species-support.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-v8-version.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-user-agent.js","webpack://HyperFormula/./node_modules/core-js/internals/array-method-uses-to-length.js","webpack://HyperFormula/./node_modules/core-js/modules/es.function.name.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.get-own-property-names.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.get-prototype-of.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.to-string.js","webpack://HyperFormula/./node_modules/core-js/internals/object-to-string.js","webpack://HyperFormula/./node_modules/core-js/modules/es.reflect.construct.js","webpack://HyperFormula/./node_modules/core-js/internals/function-bind.js","webpack://HyperFormula/./node_modules/core-js/modules/es.regexp.to-string.js","webpack://HyperFormula/./node_modules/core-js/internals/regexp-flags.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.iterator.js","webpack://HyperFormula/./node_modules/core-js/internals/string-multibyte.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.starts-with.js","webpack://HyperFormula/./node_modules/core-js/internals/not-a-regexp.js","webpack://HyperFormula/./node_modules/core-js/internals/is-regexp.js","webpack://HyperFormula/./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack://HyperFormula/./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack://HyperFormula/./node_modules/core-js/internals/dom-iterables.js","webpack://HyperFormula/./lib/Cell.js","webpack://HyperFormula/./lib/DependencyGraph/index.js","webpack://HyperFormula/./lib/DependencyGraph/DependencyGraph.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.concat.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.for-each.js","webpack://HyperFormula/./node_modules/core-js/internals/array-for-each.js","webpack://HyperFormula/./node_modules/core-js/internals/array-method-is-strict.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.map.js","webpack://HyperFormula/./node_modules/core-js/modules/es.set.js","webpack://HyperFormula/./node_modules/core-js/internals/collection.js","webpack://HyperFormula/./node_modules/core-js/internals/internal-metadata.js","webpack://HyperFormula/./node_modules/core-js/internals/freezing.js","webpack://HyperFormula/./node_modules/core-js/internals/iterate.js","webpack://HyperFormula/./node_modules/core-js/internals/an-instance.js","webpack://HyperFormula/./node_modules/core-js/internals/inherit-if-required.js","webpack://HyperFormula/./node_modules/core-js/internals/collection-strong.js","webpack://HyperFormula/./node_modules/core-js/internals/redefine-all.js","webpack://HyperFormula/./node_modules/core-js/internals/set-species.js","webpack://HyperFormula/./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack://HyperFormula/./node_modules/regenerator-runtime/runtime.js","webpack://HyperFormula/./node_modules/assert/assert.js","webpack://HyperFormula/./node_modules/object-assign/index.js","webpack://HyperFormula/./node_modules/util/util.js","webpack://HyperFormula/./node_modules/process/browser.js","webpack://HyperFormula/./node_modules/util/support/isBufferBrowser.js","webpack://HyperFormula/./node_modules/util/node_modules/inherits/inherits_browser.js","webpack://HyperFormula/./lib/AbsoluteCellRange.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.constructor.js","webpack://HyperFormula/./node_modules/core-js/internals/string-trim.js","webpack://HyperFormula/./node_modules/core-js/internals/whitespaces.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.is-finite.js","webpack://HyperFormula/./node_modules/core-js/internals/number-is-finite.js","webpack://HyperFormula/./lib/parser/index.js","webpack://HyperFormula/./lib/parser/addressRepresentationConverters.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.reduce.js","webpack://HyperFormula/./node_modules/core-js/internals/array-reduce.js","webpack://HyperFormula/./node_modules/core-js/modules/es.regexp.constructor.js","webpack://HyperFormula/./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack://HyperFormula/./node_modules/core-js/modules/es.regexp.exec.js","webpack://HyperFormula/./node_modules/core-js/internals/regexp-exec.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.split.js","webpack://HyperFormula/./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack://HyperFormula/./node_modules/core-js/internals/species-constructor.js","webpack://HyperFormula/./node_modules/core-js/internals/advance-string-index.js","webpack://HyperFormula/./node_modules/core-js/internals/regexp-exec-abstract.js","webpack://HyperFormula/./lib/parser/CellAddress.js","webpack://HyperFormula/./lib/parser/ColumnAddress.js","webpack://HyperFormula/./lib/parser/LexerConfig.js","webpack://HyperFormula/external {\"root\":\"chevrotain\",\"commonjs2\":\"chevrotain\",\"commonjs\":\"chevrotain\",\"amd\":\"chevrotain\"}","webpack://HyperFormula/./lib/parser/RowAddress.js","webpack://HyperFormula/./lib/parser/ParserWithCaching.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.join.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.assign.js","webpack://HyperFormula/./node_modules/core-js/internals/object-assign.js","webpack://HyperFormula/./lib/parser/Ast.js","webpack://HyperFormula/./lib/parser/binaryOpTokenMap.js","webpack://HyperFormula/./lib/parser/Cache.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.some.js","webpack://HyperFormula/./node_modules/core-js/modules/es.map.js","webpack://HyperFormula/./lib/parser/FormulaParser.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.is-integer.js","webpack://HyperFormula/./node_modules/core-js/internals/is-integer.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/modules/es.reflect.get.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.replace.js","webpack://HyperFormula/./lib/parser/Unparser.js","webpack://HyperFormula/./lib/parser/collectDependencies.js","webpack://HyperFormula/./lib/parser/RelativeDependency.js","webpack://HyperFormula/./lib/Span.js","webpack://HyperFormula/./lib/absolutizeDependencies.js","webpack://HyperFormula/./lib/statistics/index.js","webpack://HyperFormula/./lib/statistics/EmptyStatistics.js","webpack://HyperFormula/./lib/statistics/Statistics.js","webpack://HyperFormula/./lib/statistics/StatType.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/AddressMapping.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.fill.js","webpack://HyperFormula/./node_modules/core-js/internals/array-fill.js","webpack://HyperFormula/./lib/errors.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.index-of.js","webpack://HyperFormula/./lib/DependencyGraph/collectAddressesDependentToMatrix.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.filter.js","webpack://HyperFormula/./lib/DependencyGraph/FormulaCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/MatrixVertex.js","webpack://HyperFormula/./lib/Matrix.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.splice.js","webpack://HyperFormula/./lib/DependencyGraph/RangeVertex.js","webpack://HyperFormula/./lib/DependencyGraph/Graph.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.reverse.js","webpack://HyperFormula/./lib/DependencyGraph/MatrixMapping.js","webpack://HyperFormula/./lib/DependencyGraph/RangeMapping.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.sort.js","webpack://HyperFormula/./lib/DependencyGraph/SheetMapping.js","webpack://HyperFormula/./lib/i18n/index.js","webpack://HyperFormula/./lib/i18n/TranslationPackage.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.keys.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.values.js","webpack://HyperFormula/./node_modules/core-js/internals/object-to-array.js","webpack://HyperFormula/./lib/interpreter/InterpreterValue.js","webpack://HyperFormula/./lib/DependencyGraph/EmptyCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ValueCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ParsingErrorVertex.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/SparseStrategy.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/DenseStrategy.js","webpack://HyperFormula/./lib/CellValue.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.log10.js","webpack://HyperFormula/./lib/NamedExpressions.js","webpack://HyperFormula/./lib/HyperFormula.js","webpack://HyperFormula/./lib/CellContentParser.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.ends-with.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.trim.js","webpack://HyperFormula/./node_modules/core-js/internals/string-trim-forced.js","webpack://HyperFormula/./lib/interpreter/ArithmeticHelper.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.includes.js","webpack://HyperFormula/./lib/StringHelper.js","webpack://HyperFormula/./lib/Operations.js","webpack://HyperFormula/./lib/ClipboardOperations.js","webpack://HyperFormula/./lib/ContentChanges.js","webpack://HyperFormula/./lib/GraphBuilder.js","webpack://HyperFormula/./lib/GraphBuilderMatrixHeuristic.js","webpack://HyperFormula/./lib/dependencyTransformers/AddRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/Transformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/AddColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/MoveCellsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveSheetTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveColumnsTransformer.js","webpack://HyperFormula/./lib/Sheet.js","webpack://HyperFormula/./lib/Emitter.js","webpack://HyperFormula/./node_modules/tiny-emitter/index.js","webpack://HyperFormula/./lib/BuildEngineFactory.js","webpack://HyperFormula/./lib/LazilyTransformingAstService.js","webpack://HyperFormula/./lib/ColumnSearch/ColumnSearchStrategy.js","webpack://HyperFormula/./lib/ColumnSearch/ColumnBinarySearch.js","webpack://HyperFormula/./lib/interpreter/binarySearch.js","webpack://HyperFormula/./lib/ColumnSearch/ColumnIndex.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.find.js","webpack://HyperFormula/./lib/Config.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.includes.js","webpack://HyperFormula/./node_modules/core-js/modules/es.weak-map.js","webpack://HyperFormula/./node_modules/core-js/internals/collection-weak.js","webpack://HyperFormula/./lib/DateTimeDefault.js","webpack://HyperFormula/./lib/DateTimeHelper.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/ChooseAddressMappingPolicy.js","webpack://HyperFormula/./lib/format/format.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.to-fixed.js","webpack://HyperFormula/./node_modules/core-js/internals/this-number-value.js","webpack://HyperFormula/./node_modules/core-js/internals/string-repeat.js","webpack://HyperFormula/./lib/format/parser.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.every.js","webpack://HyperFormula/./lib/helpers/licenseKeyValidator.js","webpack://HyperFormula/./lib/helpers/licenseKeyHelper.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.code-point-at.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.pad-start.js","webpack://HyperFormula/./node_modules/core-js/internals/string-pad.js","webpack://HyperFormula/./node_modules/core-js/internals/string-pad-webkit-bug.js","webpack://HyperFormula/./lib/CrudOperations.js","webpack://HyperFormula/./lib/UndoRedo.js","webpack://HyperFormula/./lib/Evaluator.js","webpack://HyperFormula/./lib/interpreter/Interpreter.js","webpack://HyperFormula/external {\"root\":\"GPU\",\"commonjs2\":\"gpu.js\",\"commonjs\":\"gpu.js\",\"amd\":\"gpu.js\"}","webpack://HyperFormula/./lib/interpreter/Criterion.js","webpack://HyperFormula/./lib/interpreter/text.js","webpack://HyperFormula/./lib/NumberLiteralHelper.js","webpack://HyperFormula/./lib/Serialization.js","webpack://HyperFormula/./lib/interpreter/FunctionRegistry.js","webpack://HyperFormula/./lib/interpreter/plugin/VersionPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FunctionPlugin.js","webpack://HyperFormula/./lib/i18n/languages/enGB.js","webpack://HyperFormula/./lib/interpreter/plugin/index.js","webpack://HyperFormula/./lib/interpreter/plugin/SumifPlugin.js","webpack://HyperFormula/./lib/interpreter/CriterionFunctionCompute.js","webpack://HyperFormula/./lib/generatorUtils.js","webpack://HyperFormula/./lib/interpreter/plugin/TextPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/NumericAggregationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MedianPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DatePlugin.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.trunc.js","webpack://HyperFormula/./lib/interpreter/plugin/BooleanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/InformationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/TrigonometryPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountUniquePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SumprodPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MatrixPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ExpPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/AbsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DegreesPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadiansPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RandomPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/VlookupPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsEvenPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsOddPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RoundingPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadixConversionPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/LogarithmPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitwiseLogicOperationsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitShiftPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/PowerPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MathConstantsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SqrtPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ModuloPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DeltaPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CharPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CodePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ErrorFunctionPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CorrelPlugin.js","webpack://HyperFormula/./lib/interpreter/index.js"],"names":["HyperFormulaNS","HyperFormula","ErrorType","CellType","CellValueType","DetailedCellError","ExportedCellChange","ExportedNamedExpressionChange","ConfigValueTooBigError","ConfigValueTooSmallError","EvaluationSuspendedError","ExpectedOneOfValuesError","ExpectedValueOfTypeError","FunctionPlugin","FunctionPluginValidationError","InvalidAddressError","InvalidArgumentsError","LanguageNotRegisteredError","LanguageAlreadyRegisteredError","MatrixFormulasNotSupportedError","MissingTranslationError","NamedExpressionDoesNotExistError","NamedExpressionNameIsAlreadyTakenError","NamedExpressionNameIsInvalidError","NoOperationToRedoError","NoOperationToUndoError","NoRelativeAddressesAllowedError","NoSheetWithIdError","NoSheetWithNameError","NotAFormulaError","NothingToPasteError","ProtectedFunctionTranslationError","SheetNameAlreadyTakenError","SheetSizeLimitExceededError","SourceLocationHasMatrixError","TargetLocationHasMatrixError","UnableToParseError","defaultLanguage","Config","defaultConfig","language","registerLanguage","enGB","languages","langCode","Object","getOwnPropertyNames","plugins","pluginName","startsWith","registerFunctionPlugin","EmptyValue","Symbol","getCellType","vertex","FormulaCellVertex","ParsingErrorVertex","FORMULA","ValueCellVertex","MatrixVertex","isNumeric","VALUE","isFormula","MATRIX","EMPTY","CellValueTypeOrd","arg","NUMBER","STRING","BOOLEAN","ERROR","getCellValueType","cellValue","CellError","SimpleRangeValue","Error","type","message","simpleRowAddress","sheet","row","simpleColumnAddress","col","simpleCellAddress","invalidSimpleCellAddress","address","movedSimpleCellAddress","toSheet","toRight","toBottom","absoluteSheetReference","baseAddress","DependencyGraph","addressMapping","rangeMapping","sheetMapping","matrixMapping","stats","lazilyTransformingAstService","functionRegistry","namedExpressions","dependencyQuery","formula","getAddress","getFormula","RangeVertex","allDeps","Set","findSmallerRange","range","smallerRangeVertex","restRange","graph","adjacentNodes","has","add","addresses","cell","getCell","EmptyCellVertex","deps","absoluteDeps","map","dep","AbsoluteCellRange","fetchRange","start","end","NamedExpressionDependency","namedExpression","namedExpressionOrPlaceholder","name","fetchCell","Graph","ast","dependencies","hasVolatileFunction","hasStructuralChangeFunction","ensureThatVertexIsNonMatrixCellVertex","newVertex","version","exchangeOrAddGraphNode","setCell","processCellDependencies","markNodeAsSpecialRecentlyChanged","markAsVolatile","markAsDependentOnStructureChange","correctInfiniteRangesDependency","errorVertex","newValue","oldValue","getCellValue","setCellValue","size","emptyVertex","exchangeGraphNode","adjacentNodesCount","removeVertex","removeCell","assert","ok","clearSpecialNodesRecentlyChanged","specialNodesRecentlyChanged","volatileVertices","cellDependencies","endVertex","forEach","rangeVertex","getRange","undefined","setRange","addNode","isFinite","markNodeAsInfiniteRange","addEdge","bruteForce","cellFromRange","removeEdge","matrix","getMatrix","fetchCellOrCreateEmpty","correctInfiniteRangesDependenciesByRangeVertex","sheetOfVertex","namedExpressionVertex","fetchNamedExpressionVertex","expressionName","sheetId","addressFrom","addressTo","vertexFrom","vertexTo","infiniteRanges","infiniteRangeVertex","intersection","intersectionWith","addressInRange","removedRows","isFormulaMatrixInRows","measure","StatType","ADJUSTING_GRAPH","verticesFromRowsSpan","adjacentNode","ADJUSTING_MATRIX_MAPPING","truncateMatricesAfterRemovingRows","ADJUSTING_ADDRESS_MAPPING","removeRows","ADJUSTING_RANGES","truncateRanges","addStructuralNodesToChangeSet","removedSheetId","matrices","sheetEntries","adr","values","removeMatrix","rangesToRemove","removeRangesInSheet","removeSheet","setCellEmpty","setMatrixEmpty","removedColumns","isFormulaMatrixInColumns","verticesFromColumnsSpan","truncateMatricesAfterRemovingColumns","removeColumns","addedRows","addRows","rowStart","numberOfRows","expandMatricesAfterAddingRows","moveAllRangesInSheetAfterRowByRows","fixRangesWhenAddingRows","addedColumns","addColumns","columnStart","numberOfColumns","expandMatricesAfterAddingColumns","moveAllRangesInSheetAfterColumnByColumns","fixRangesWhenAddingColumns","isFormulaMatrixInRange","sourceRange","addressesWithDirection","sourceAddress","targetAddress","sourceVertex","targetVertex","containsRange","rangeVerticesContainedInRange","newEmptyVertex","moveRangesInsideSourceRange","numericMatrices","_","matrixVertex","breakNumericMatrix","numericMatricesInRange","matrixRange","spanFrom","width","height","value","valueVertex","addVertex","nodeDependencies","length","setVertexAddress","setAddressMappingForMatrixVertex","verticesFromRange","setMatrix","entriesFromRange","nodes","rowsSpan","entriesFromRowsSpan","columnsSpan","entriesFromColumnsSpan","fromNode","toNode","existsEdge","sheetName","fetch","fetchDisplayName","getHeight","getWidth","topSortWithScc","markNodeAsSpecial","markNodeAsChangingWithStructure","ensureRecentData","specialNodes","destroy","getScalarValue","oldNode","newNode","adjNodesStored","hasNode","specialNodesStructuralChanges","originalValues","Array","from","rangesInSheet","includesRow","addedSubrangeInThatRange","rangeWithSameWidth","currentRangeVertex","find","newRangeVertex","addAllFromRange","column","includesColumn","subrange","rangeWithSameHeight","formulaAddress","verticesToRemove","truncateMatricesByRows","span","coordinate","verticesToMerge","existingVertex","mergedVertex","mergeRangeVertices","removeVertexAndCleanupDependencies","truncateMatricesByColumns","numericMatricesInRows","RowsSpan","fromRowStartAndEnd","addedRange","numericMatricesInColumns","ColumnsSpan","fromColumnStartAndEnd","removeRange","softRemoveEdge","removeNode","next","delete","candidate","config","AddressMapping","chooseAddressMappingPolicy","RangeMapping","SheetMapping","translationPackage","MatrixMapping","DIFFERENT_SHEETS_ERROR","WRONG_RANGE_SIZE","Number","other","startRow","Math","max","endRow","min","startCol","endCol","byCols","byRows","rowEnd","shiftByRows","columnEnd","shiftByColumns","startColumn","result","y","x","push","newStart","dependencyGraph","currentRow","effectiveEndRow","currentColumn","effectiveEndColumn","right","bottom","maxColumns","maxRows","_dependencyGraph","AstNodeType","CELL_RANGE","fromCellRange","COLUMN_RANGE","AbsoluteColumnRange","fromColumnRange","AbsoluteRowRange","fromRowRange","CellAddress","toSimpleCellAddress","topLeftCorner","x1","y1","x2","y2","cellAddress","toSimpleColumnAddress","POSITIVE_INFINITY","_numberOfRows","_byRows","_rowStart","_rowEnd","_maxRows","getSheetHeight","toSimpleRowAddress","_numberOfColumns","_columnStart","_columnEnd","_maxColumns","getSheetWidth","addressRegex","RegExp","additionalCharactersAllowedInQuotes","columnRegex","rowRegex","cellAddressFromString","stringAddress","exec","columnLabelToIndex","maybeSheetName","absolute","absoluteCol","absoluteRow","relative","columnAddressFromString","extractSheetNumber","ColumnAddress","rowAddressFromString","RowAddress","simpleCellAddressFromString","sheetContext","simpleCellAddressToString","sheetIndexMapping","sheetIndex","columnIndexToLabel","columnStringRepresentation","toUpperCase","charCodeAt","split","reduce","nextLetter","String","fromCharCode","floor","regexResult","CellReferenceType","CELL_REFERENCE_ABSOLUTE","CELL_REFERENCE_ABSOLUTE_ROW","CELL_REFERENCE_ABSOLUTE_COL","isColumnRelative","isRowRelative","CELL_REFERENCE_RELATIVE","newSheet","isColumnAbsolute","isRowAbsolute","withSheet","sheetPart","simpleAddress","rowDollar","colDollar","ReferenceType","ABSOLUTE","RELATIVE","_toBottom","dollar","AdditionOp","pattern","Lexer","NA","PlusOp","categories","MinusOp","MultiplicationOp","TimesOp","DivOp","PowerOp","PercentOp","BooleanOp","EqualsOp","NotEqualOp","GreaterThanOp","LessThanOp","GreaterThanOrEqualOp","LessThanOrEqualOp","ConcatenateOp","sheetNameRegexp","CellReference","ColumnRange","RowRange","RangeSeparator","LParen","RParen","ProcedureName","NamedExpression","StringLiteral","ErrorLiteral","WhiteSpace","buildLexerConfig","offsetProcedureNameLiteral","getFunctionTranslation","errorMapping","functionMapping","buildFunctionMapping","ArgSeparator","functionArgSeparator","NumberLiteral","decimalSeparator","OffsetProcedureName","allTokens","ParserWithCaching","statsCacheUsed","lexerConfig","lexer","FormulaLexer","formulaParser","FormulaParser","cache","Cache","text","lexerResult","tokenizeFormula","errors","e","ParsingErrorType","LexingError","hash","computeHashFromTokens","tokens","cacheResult","get","processedTokens","bindWhitespacesToTokens","parsingResult","parseFromTokens","assign","set","relativeDependencies","computeHashFromAst","fetchCachedResult","_a","idx","token","image","concat","procedureName","slice","canonicalProcedureName","startAddress","endAddress","maybeSetAndThenGet","computeHashOfAstNode","leadingWhitespace","NAMED_EXPRESSION","FUNCTION_CALL","args","join","rightPart","internalWhitespace","CELL_REFERENCE","reference","ROW_RANGE","sheetReferenceType","RangeSheetReferenceType","BOTH_ABSOLUTE","MINUS_UNARY_OP","PLUS_UNARY_OP","PERCENT_OP","getErrorTranslation","error","ERROR_WITH_RAW_INPUT","rawInput","PARENTHESIS","expression","left","binaryOpTokenMap","first","i","current","previous","parsingError","buildEmptyArgAst","buildNumberAst","buildStringAst","buildCellReferenceAst","buildCellRangeAst","assertRangeConsistency","buildColumnRangeAst","buildRowRangeAst","buildConcatenateOpAst","CONCATENATE_OP","buildEqualsOpAst","EQUALS_OP","buildNotEqualOpAst","NOT_EQUAL_OP","buildGreaterThanOpAst","GREATER_THAN_OP","buildLessThanOpAst","LESS_THAN_OP","buildGreaterThanOrEqualOpAst","GREATER_THAN_OR_EQUAL_OP","buildLessThanOrEqualOpAst","LESS_THAN_OR_EQUAL_OP","buildPlusOpAst","PLUS_OP","buildMinusOpAst","MINUS_OP","buildTimesOpAst","TIMES_OP","buildDivOpAst","DIV_OP","buildPowerOpAst","POWER_OP","buildMinusUnaryOpAst","buildPlusUnaryOpAst","buildPercentOpAst","buildProcedureAst","buildNamedExpressionAst","buildParenthesisAst","buildCellErrorAst","buildErrorWithRawInputAst","buildParsingErrorAst","imageWithWhitespace","buildCacheEntry","Map","astRelativeDependencies","cacheEntry","doesContainFunctions","isFunctionVolatile","isFunctionDependentOnSheetStructureChange","entryFromCache","clear","functionCriterion","some","outputCst","maxLookahead","RULE","CONSUME","SUBRULE","booleanExpression","lhs","concatenateExpression","MANY","op","rhs","SUBRULE2","ACTION","booleanExpressionOrEmpty","OR","ALT","additionExpression","multiplicationExpression","powerExpression","atomicExpression","customParsingError","ParserError","rightUnaryOpAtomicExpression","positiveAtomicExpression","percentage","OPTION","atomicExpCache","parenthesisExpression","cellRangeExpression","columnRangeExpression","rowRangeExpression","offsetExpression","cellReference","procedureExpression","namedExpressionExpression","number","numericStringToNumber","str","errString","errorType","procedureNameToken","argument","separator","rParenToken","offsetProcedure","offsetProcedureExpression","RangeOffsetNotAllowed","endOfRangeWithOffsetStartExpression","ARGS","MANY_SEP","SEP","DEF","handleOffsetHeuristic","CONSUME2","endOfRangeExpression","startImage","endImage","REF","exceedsSheetSizeLimits","NAME","rangeSheetReferenceType","withAbsoluteSheet","endRangeReference","START_ABSOLUTE","endRangeWithOffsetStartReference","buildCellRange","lParenToken","input","normalized","replace","performSelfAnalysis","formulaWithContext","cellArg","StaticOffsetError","rowsArg","rowShift","isInteger","columnsArg","colShift","heightArg","widthArg","bottomRightCorner","EmbeddedActionsParser","ensureOptimizations","lexingResult","tokenize","trimTrailingWhitespaces","skipWhitespacesInsideRanges","skipWhitespacesBeforeArgSeparators","filterTokensByNeighbors","shouldBeSkipped","filteredTokens","pop","Unparser","sheetMappingFn","unparseAst","formatNumber","isFunctionTranslated","originalNamedExpressionName","nearestNamedExpression","displayName","unparseSheetName","unparse","formatRange","unparsedExpr","startSheeet","endSheet","numericString","toString","collectDependenciesFn","dependenciesSet","AddressDependency","CellRangeDependency","ColumnRangeDependency","RowRangeDependency","doesFunctionNeedArgumentToBeComputed","argAst","collectDependencies","dependency","_baseAddress","otherSpan","absolutizeDependencies","absolutize","EmptyStatistics","_name","Statistics","CRITERION_FUNCTION_FULL_CACHE_USED","CRITERION_FUNCTION_PARTIAL_CACHE_USED","startTimes","Date","now","startTime","func","policy","mapping","strategy","sheetBoundaries","fill","strategyConstructor","call","addSheet","getMatrixCellValue","entries","getEntries","expectedArguments","replacer","key","val","JSON","stringify","expectedType","paramName","minimum","maximum","functionId","functionName","ProtectedFunctionError","collectAddressesDependentToMatrix","funcitonRegistry","filter","d","cachedCellValue","updatingService","applyTransformations","newAst","newAddress","newVersion","NotComputedMatrix","MatrixSize","ErroredMatrix","Matrix","newFormula","removedRowsFromMatrix","rowsFromMatrix","intersect","removedColumnsFromMatrix","columnsFromMatrix","fromNumberOfColumns","fromNumberOfRows","matrixSizeForTranspose","inputSize","matrixSizeForMultiplication","leftMatrixSize","rightMatrixSize","matrixSizeForPoolFunction","inputMatrix","windowSize","stride","checkMatrixSize","NUM","windowArg","window","strideArg","aboveRow","splice","zeroArrays","aboveColumn","outOfBound","leftmostColumn","rightmostColumn","count","leftCorner","functionCache","criterionFunctionCache","dependentCacheRanges","cacheKey","criterionString","getCriterionFunctionValues","dependentRange","NodeVisitStatus","edges","node","nodeEdges","edgesForNode","removeDependencies","_b","getTopSortedWithSccSubgraphFrom","_node","modifiedNodes","operatingFunction","onCycle","entranceTime","low","parent","nodeStatus","order","time","reverse","v","DFSstack","ON_STACK","u","PROCESSED","t","POPPED","pu","sccMap","sccNonSingletons","targets","uRepr","vRepr","shouldBeUpdatedMapping","sorted","cycled","s","sourceNode","mtx","spansThroughSheetRows","rows","isFormulaMatrixInRow","spansThroughSheetColumn","columns","isFormulaMatrixInColumn","doesOverlap","mtxKey","sheetMap","getStart","keyFromAddresses","getEnd","maybeRange","updated","entriesFromSheet","removeSpan","shouldBeRemoved","removeByKey","sort","compareBy","oldKey","newKey","keyFromRange","getByKey","updateVerticesFromSheet","expandByRows","expandByColumns","moveToSheet","ranges","iterator","valuesRangeEndRowLess","rowLessVertex","fn","leftStart","rightStart","leftEnd","rightEnd","canonicalize","sheetDisplayName","toLowerCase","Sheet","id","mappingFromCanonicalName","mappingFromId","lastSheetId","fetchSheetById","sheetNamePrefix","getUITranslation","UIElement","NEW_SHEET_PREFIX","newSheetDisplayName","newSheetCanonicalName","store","canonicalName","newDisplayName","currentDisplayName","sheetWithThisCanonicalName","currentCanonicalName","TranslationPackage","functions","ui","_protectedTranslations","checkUI","checkErrors","checkFunctionTranslations","additionalFunctionTranslations","keys","ret","functionIds","translations","functionNames","protectedTranslation","buildTranslationPackage","rawTranslationPackage","ArrayData","data","_hasOnlyNumbers","j","hasOnlyNumbers","OnlyRangeData","_range","ensureThatComputed","valuesFromTopLeftCorner","computeDataFromDependencyGraph","raw","rawNumbers","scalar","SparseStrategy","colMapping","rowMapping","tmpMapping","rowNumber","colNumber","rightmostRowRemoved","numberOfRowsRemoved","rightmostColumnRemoved","numberOfColumnsRemoved","rowVertex","DenseStrategy","getCellVertex","newRows","Exporter","change","NamedExpressions","SHEET_FOR_WORKBOOK_EXPRESSIONS","namedExpressionInAddress","exportValue","detailedError","smartRounding","cellValueRounding","magnitudeMultiplierExponent","log10","abs","placesMultiplier","pow","precisionRounding","round","InternalNamedExpression","added","options","WorkbookStore","normalizeExpressionName","normalizedExpressionName","ne","WorksheetStore","nextNamedExpressionRow","workbookStore","worksheetStores","addressCache","isNameAvailable","worksheetStore","getExisting","test","nextAddress","remove","getAllNamedExpressions","doesContainRelativeReferences","isAbsolute","_config","_stats","_columnSearch","_parser","_unparser","_cellContentParser","_evaluator","_lazilyTransformingAstService","_crudOperations","_exporter","_namedExpressions","_serialization","_functionRegistry","_emitter","Emitter","_evaluationSuspended","ensureEvaluationIsNotSuspended","getCellFormula","getCellSerialized","getSheetValues","getSheetFormulas","getSheetSerialized","genericAllSheetsGetter","getSheetDimensions","getAllSheetsValues","getAllSheetsFormulas","getAllSheetsSerialized","newParams","newConfig","mergeConfig","configNewLanguage","serializedSheets","withNewConfig","newEngine","BuildEngineFactory","rebuildWithConfig","columnSearch","parser","unparser","cellContentParser","evaluator","crudOperations","exporter","serialization","getConfig","updateConfig","snapshot","undo","recomputeIfDependencyGraphNeedsIt","redo","isThereSomethingToUndo","isThereSomethingToRedo","topLeftCornerAddress","ensureRangeInSizeLimits","ensureItIsPossibleToChangeContent","cellContents","setCellContents","indexes","normalizedIndexes","ensureItIsPossibleToAddRows","ensureItIsPossibleToRemoveRows","ensureItIsPossibleToAddColumns","ensureItIsPossibleToRemoveColumns","sourceLeftCorner","destinationLeftCorner","operations","ensureItIsPossibleToMoveCells","moveCells","targetRow","ensureItIsPossibleToMoveRows","moveRows","targetColumn","ensureItIsPossibleToMoveColumns","moveColumns","copy","getRangeValues","cut","targetLeftCorner","paste","isClipboardEmpty","clearClipboard","undoRedo","clearRedoStack","clearUndoStack","cellRange","arrayOfAddressesInRange","subarray","ensureItIsPossibleToAddSheet","addedSheetName","emit","Events","SheetAdded","ensureSheetExists","getDisplayNameByName","changes","SheetRemoved","clearSheet","ensureItIsPossibleToChangeSheetContents","setSheetContent","getDisplayName","sheetNames","hasSheetWithName","numberOfSheets","newName","ensureItIsPossibleToRenameSheet","oldName","renameSheet","SheetRenamed","batchOperations","suspendEvaluation","beginUndoRedoBatchMode","commitUndoRedoBatchMode","resumeEvaluation","scope","ensureItIsPossibleToAddNamedExpression","addNamedExpression","NamedExpressionAdded","scopeId","namedExpressionForScope","newExpression","ensureItIsPossibleToChangeNamedExpression","changeNamedExpressionExpression","isItPossibleToRemoveNamedExpression","removedNamedExpression","removeNamedExpression","NamedExpressionRemoved","getAllNamedExpressionsNames","formulaString","extractTemporaryFormula","internalCellValue","runAndForget","getLanguage","getFunctionTranslations","getRegisteredFunctionIds","getFunctionPlugin","getPlugins","dateHelper","numberToSimpleDateTime","numberToSimpleDate","numberToSimpleTime","parsedCellContent","parse","exampleTemporaryFormulaAddress","CellContent","Formula","event","listener","on","once","off","getAndClearContentChanges","verticesToRecomputeFrom","verticesToRecompute","clearRecentlyChangedVertices","addAll","partialRun","exportedChanges","exportChanges","isEmpty","ValuesUpdated","licenseKeyValidityState","engine","configInput","buildFromEngineState","buildFromSheet","sheets","buildFromSheets","buildEmpty","languageCode","registeredLanguages","languagePackage","plugin","FunctionRegistry","unregisterFunctionPlugin","registerFunction","unregisterFunction","unregisterAll","code","buildDate","releaseDate","Boolean","Empty","instance","MatrixFormula","isBoolean","tl","isMatrix","endsWith","isError","upperCased","errorRegex","prototype","hasOwnProperty","CellContentParser","numberLiteralsHelper","content","getSingletonInstance","dateToNumber","day","getDate","month","getMonth","year","getFullYear","substr","trimmedContent","trim","isNumber","parsedDateNumber","dateStringToDateNumber","ArithmeticHelper","dateTimeHelper","nonstrictadd","addWithEpsilon","collator","actualEps","precisionEpsilon","regexp","buildRegex","normalizeString","useRegularExpressions","useWildcards","matchWholeCell","c","charAt","isWildcard","needsEscape","regexpStr","escapeNoCharacters","caseSensitive","escapeNonWildcards","escapeAllCharacters","accentSensitive","normalize","leftTmp","rightTmp","floatCmp","coerceEmptyToValue","stringCmp","numberCmp","coerceBooleanToNumber","mod","compare","coerceToMaybeNumber","coerceNonDateScalarToMaybeNumber","coercedNumber","isNaN","coerceToRange","fromScalar","coerceToRangeNumbersOrError","coerceScalarToBoolean","argUppered","coerceScalarToString","multiply","power","divide","DIV_BY_ZERO","unaryminus","percent","NEGATIVE_INFINITY","maxa","mina","isNumberOverflow","Infinity","fixNegativeZero","includes","escapedCharacters","collatorFromConfig","sensitivity","caseFirst","ignorePunctuation","Intl","Collator","localeLang","RemoveRowsCommand","normalizeRemovedIndexes","normalizedIndex","AddRowsCommand","normalizeAddedIndexes","AddColumnsCommand","RemoveColumnsCommand","Operations","ContentChanges","empty","allocateNamedExpressionAddressSpace","cmd","rowsRemovals","rowsSpans","rowsToRemove","rowsRemoval","doRemoveRows","doAddRows","columnsSpans","doAddColumns","columnsRemovals","columnsToRemove","columnsRemoval","doRemoveColumns","TRANSFORM_ASTS","transformation","RemoveSheetTransformer","performEagerTransformations","addTransformation","autoAddSheet","rowsToAdd","columnsToAdd","targetRange","breakNumericMatricesInRange","currentDataAtTarget","getRangeClipboardCells","valuesToRemove","valuesFromRange","removeValues","valuesToMove","moveValues","MoveCellsTransformer","addedGlobalNamedExpressions","updateNamedExpressionsForMovedCells","overwrittenCellsData","storeNamedExpressionInCell","lookupNextAddress","adjustNamedExpressionEdges","restoreCell","restoredNamedExpression","oldNamedExpression","getClipboardCell","globalNamedExpression","workbookNamedExpressionOrPlaceholder","exchangeNode","isPositiveInteger","isRowOrColumnRange","hasSheetWithId","sourceSheetId","cells","addedNamedExpressions","clipboardCell","ClipboardCellType","updateNamedExpressionsForTargetAddress","setValueToCell","setFormulaToCellFromCache","PARSING_ERROR","setParsingErrorToCell","rowEffectivelyNotInSheet","removedCells","cellType","RemoveRowsTransformer","rowFrom","rowCount","columnEffectivelyNotInSheet","RemoveColumnsTransformer","columnFrom","columnCount","AddRowsTransformer","AddColumnsTransformer","sheetHeight","sheetWidth","arr","newCellContent","setMatrixCellValue","addChange","formulaWithBraces","addNewMatrixVertex","setFormulaToCell","newSheetContent","setCellContent","formulaHash","forceApplyPostponedTransformations","localVertex","globalVertex","fetchCachedResultForAst","sourceSheet","namedExpressionDependency","namedExpressionInTargetScope","isExpressionInScope","targetScopeExpressionVertex","copyOrFetchGlobalNamedExpressionVertex","a","b","merged","acc","startIndex","amount","lastIndex","shift","ClipboardOperationType","Clipboard","ClipboardOperations","clipboard","CUT","COPY","generateValues","matrixValue","addSingleCellValue","exportChange","GraphBuilder","matrixDetection","buildStrategy","MatrixDetectionStrategy","matrixDetectionThreshold","SimpleStrategy","run","processDependencies","columnIndex","getSheetId","cellContent","existsVertex","parseResult","PARSER","buildMatrixVertex","addMatrixVertex","threshold","matrixHeuristic","GraphBuilderMatrixHeuristic","MATRIX_DETECTION","notMatrices","elem","getSheetName","Array2d","_size","array","scanResult","findMatrices","possibleMatrix","fromRange","matrixFromPlainValues","m","colours","colour","rightColour","bottomColour","diag","diagColour","fromCoordinates","old","withStart","_formulaAddress","transformRange","_start","_end","dependencyAddress","absoluteDependencySheet","absolutizedDependencyAddress","shiftedByRows","transformCellAddress","newEnd","Transformer","matrixFormulaNodes","transformSingleAst","cachedAst","rememberNewAst","setFormula","setAddress","transformAst","fixNodeAddress","transformCellReferenceAst","transformCellRangeAst","transformColumnRangeAst","transformRowRangeAst","newCellAddress","newRange","transformCellRange","isArray","transformColumnRange","transformRowRange","absoluteDependencyAddress","startSheet","actualStart","actualEnd","startSCA","endSCA","shiftedByColumns","dependentFormulaTransformer","DependentFormulaTransformer","transformAddress","shifted","shiftAbsoluteDimensions","shiftRelativeDimensions","shouldMove","moved","rowInRange","columnInRange","validateAsSheet","findBoundaries","cellsCount","currentRowWidth","currentCol","currentValue","sheetSize","TinyEmitter","useStats","BUILD_ENGINE_TOTAL","LazilyTransformingAstService","boundaries","DateTimeHelper","numberLiteralHelper","NumberLiteralHelper","CrudOperations","GRAPH_BUILD","graphBuilder","buildGraph","Evaluator","Serialization","buildEngine","newsheetprefix","transformations","TRANSFORM_ASTS_POSTPONED","isIrreversible","storeDataForVersion","buildColumnSearchStrategy","statistics","useColumnIndex","ColumnIndex","ColumnBinarySearch","vlookupThreshold","computeListOfValuesInRange","index","indexOf","keyMatcher","rangeLowerBound","center","cmp","lowerBound","transformingService","binarySearchStrategy","removeSingleValue","columnMap","getColumnMap","valueIndex","upperBound","advancedFind","getValueIndex","actualVersion","relevantTransformations","getTransformationsFrom","BUILD_COLUMN_INDEX","addValue","shiftRows","removeRowsFromValues","rowIndex","afterRow","__classPrivateFieldSet","receiver","privateMap","TypeError","__classPrivateFieldGet","_licenseKeyValidityState","PossibleGPUModeString","dateFormats","timeFormats","thousandSeparator","licenseKey","functionPlugins","gpuMode","leapYear1900","nullYear","parseDateTime","stringifyDateTime","stringifyDuration","nullDate","undoLimit","valueFromParam","valueFromParamCheck","validateNumberToBeAtLeast","validateNumberToBeAtMost","buildErrorMapping","instanceOfSimpleDate","checkIfParametersNotInConflict","init","mergedConfig","inputValue","typeCheck","valuesMap","params","param","names","duplicates","entry","paramNames","WeakMap","AlwaysDense","defaultParseToDateTime","defaultStringifyDateTime","defaultStringifyDuration","dateTimeString","dateFormat","timeFormat","ampmtoken","substring","dateItems","timeItems","defaultParseToTime","defaultParseToDate","parsedDate","parsedTime","secondsExtendedRegexp","formatItems","ampm","fractionOfSecondPrecision","hourIndex","minuteIndex","secondIndex","hourString","hours","minuteString","minutes","secondString","seconds","monthIndex","dayIndex","yearIndexLong","yearIndexShort","yearString","monthString","dayString","numDays","prefSumDays","obj","instanceOfSimpleTime","maxDate","minDateAboluteValue","dateToNumberFromZero","maxDateValue","epochYearZero","dayNumber","dateTime","parseDateTimeFromFormats","timeToNumber","dateString","getNullYear","isValidDate","parseSingleFormat","date","isLeapYear","dateNumber","dayOfYear","dayToMonth","leapYearsCount","endOfMonth","offsetMonth","offset","totalM","DenseSparseChooseBasedOnThreshold","AlwaysSparse","format","formatArg","tryDateTime","tryDuration","numberFormat","padLeft","padRight","countChars","char","TokenType","FREE_TEXT","tokenParts","integerFormat","decimalFormat","valueParts","toFixed","integerPart","decimalPart","padSize","FORMAT","am","pm","dateFormatRegex","numberFormatRegex","formatToken","FormatExpressionType","matchDateFormat","matchNumberFormat","numberFormatToken","createTokens","regexTokens","beforeToken","lastToken","afterLastToken","parseForDateTimeFormat","dateFormatTokens","every","isEscapeToken","DATE","parseForNumberFormat","numberFormatTokens","consoleMessages","invalid","expired","keyValidityDate","missing","_notified","checkLicenseKeyValidity","messageDescriptor","template","vars","releaseDays","getTime","keyValidityDays","formatDate","console","warn","monthNames","_rl","_hd","parseInt","_pi","_nm","_ss","l","_cp","extractTime","checkKeySchema","sp","padStart","clipboardOperations","UndoRedo","addRowsCommand","abortCut","saveOperation","AddRowsUndoEntry","removeRowsCommand","RemoveRowsUndoEntry","addColumnsCommand","AddColumnsUndoEntry","removeColumnsCommand","RemoveColumnsUndoEntry","MoveCellsUndoEntry","MoveRowsUndoEntry","MoveColumnsUndoEntry","ensureItIsPossibleToCopy","isCutClipboard","isCopyClipboard","ensureItIsPossibleToCopyPaste","oldContent","restoreClipboardCells","getContent","PasteUndoEntry","beginBatchMode","commitBatchMode","AddSheetUndoEntry","originalName","oldSheetContent","getSheetClipboardCells","RemoveSheetUndoEntry","RenameSheetUndoEntry","ClearSheetUndoEntry","ensureItIsPossibleToChangeCellContents","modifiedCellContents","newContent","SetCellContentsUndoEntry","SetSheetContentUndoEntry","isUndoStackEmpty","isRedoStackEmpty","sheetScope","ensureNamedExpressionNameIsValid","AddNamedExpressionUndoEntry","ChangeNamedExpressionUndoEntry","RemoveNamedExpressionUndoEntry","ensureNamedExpressionIsValid","newRowsCount","numberOfRowsToAdd","isNonnegativeInteger","newColumnsCount","numberOfColumnsToAdd","sourceStart","targetStart","existingSheetId","isFormulaMatrixAtAddress","isNameValid","parsedExpression","command","BatchUndoEntry","operation","undoStack","redoStack","oldData","batchUndoEntry","addUndoEntry","astHash","currentOldData","undoEntry","undoRemoveRows","undoAddRows","undoSetCellContents","undoMoveRows","undoAddSheet","undoRemoveSheet","undoRenameSheet","undoClearSheet","undoAddColumns","undoRemoveColumns","undoMoveColumns","undoMoveCells","undoSetSheetContent","undoPaste","undoBatch","undoAddNamedExpression","undoRemoveNamedExpression","undoChangeNamedExpression","batchOperation","reversedOperations","restoreOldDataFromVersion","addedRowsSpans","addedColumnsSpans","cellContentData","restoreNamedExpression","redoEntry","redoRemoveRows","redoAddRows","redoSetCellContents","redoMoveRows","redoAddSheet","redoRemoveSheet","redoRenameSheet","redoClearSheet","redoAddColumns","redoRemoveColumns","redoMoveColumns","redoMoveCells","redoSetSheetContent","redoPaste","redoBatch","redoAddNamedExpression","redoRemoveNamedExpression","redoChangeNamedExpression","oldDataToRestore","entryToRestore","interpreter","Interpreter","TOP_SORT","EVALUATION","recomputeFormulas","vertices","isComputed","newCellValue","evaluateAstToCellValue","evaluateAstToRangeValue","newCellMatrix","addMatrixChange","setErrorValue","clearCache","CYCLE","tmpRanges","interpreterValue","evaluateAst","initializePlugins","arithmeticHelper","criterionBuilder","CriterionBuilder","_c","_d","_e","_f","_g","_h","_j","_k","_l","leftResult","rightResult","passErrors","coerceScalarToNumberOrError","subtract","pluginEntry","getFunction","pluginFunction","pluginInstance","rangeSpansOneSheet","onlyNumbersDataWithRange","onlyRange","gpu","GPUConstructor","GPU","mode","CriterionType","buildCriterion","operator","trueString","getMaybeFunctionTranslation","falseString","criterion","parseCriterion","lambda","buildCriterionLambda","EQUAL","ANY_CRITERION_REGEX","criterionValue","criterionType","StrToCriterionType","boolvalue","NOT_EQUAL","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","_cellValue","eqMatcherFunction","neqMatcherFunction","concatenate","numberPattern","allThousandSeparatorsRegex","match","formulaVertex","genericSheetGetter","getter","sheetGetter","displayNames","newUnparser","volatileFunctions","structuralChangeFunctions","functionsWhichDoesNotNeedArgumentsToBeComputed","instancePlugins","loadPluginFunctions","protectedFunctions","loadFunctionUnprotected","categorizeFunction","implementedFunctions","instances","methodName","method","functionIsProtected","functionMetadata","isVolatile","doesNotNeedArgumentsToBeComputed","isDependentOnSheetStructureChange","loadTranslations","loadPluginFunction","functionNotDeclaredInPlugin","cannotUnregisterFunctionWithId","protectedPlugins","protectedPlugin","cannotUnregisterProtectedPlugin","registeredPlugin","_protectedPlugins","getRegisteredLanguagesCodes","extendFunctions","registry","cannotRegisterFunctionWithId","functionMethodNotFound","VersionPlugin","LICENSE_STATUS_MAP","validityState","status","asts","scalarValue","templateWithOneArgumentCoercion","coercedLeft","coercedRight","position","coerceFunction","coercedArg","dictionary","ABS","ACOS","AND","ASIN","ATAN","ATAN2","AVERAGE","AVERAGEA","AVERAGEIF","BASE","BIN2DEC","BIN2HEX","BIN2OCT","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","CEILING","CHAR","CHOOSE","CODE","COLUMNS","CONCATENATE","CORREL","COS","COT","COUNT","COUNTA","COUNTBLANK","COUNTIF","COUNTIFS","COUNTUNIQUE","DAY","DAYS","DEC2BIN","DEC2HEX","DEC2OCT","DECIMAL","DEGREES","DELTA","E","EOMONTH","ERF","ERFC","EVEN","EXP","FALSE","IF","IFERROR","IFNA","INDEX","INT","ISBLANK","ISERROR","ISEVEN","ISLOGICAL","ISNONTEXT","ISNUMBER","ISODD","ISTEXT","LN","LOG","LOG10","MATCH","MAX","MAXA","MAXPOOL","MEDIAN","MEDIANPOOL","MIN","MINA","MMULT","MOD","MONTH","NOT","ODD","OFFSET","PI","POWER","RADIANS","RAND","ROUND","ROUNDDOWN","ROUNDUP","ROWS","SIN","SPLIT","SQRT","SUM","SUMIF","SUMIFS","SUMPRODUCT","SUMSQ","SWITCH","TAN","TEXT","TRANSPOSE","TRUE","TRUNC","VLOOKUP","XOR","YEAR","AverageResult","sum","sumifCacheKey","conditions","conditionsStrings","conditionRange","averageifCacheKey","countifsCacheKey","SumifPlugin","conditionArgValue","conditionArg","fromCellValue","valuesArg","valuesArgValue","CriterionFunctionCompute","compute","Condition","valueArgValue","criterionPackage","averageResult","compose","single","averageValue","ifFilter","findSmallerRangeForMany","conditionRanges","valuesRange","restValuesRange","restConditionRanges","reduceInitialValue","composeFunction","mapFunction","simpleValuesRange","condition","sameDimensionsAs","valuesRangeVertex","tryToGetRangeVertexForRangeValue","conditionsVertices","fullCriterionString","cachedResult","findAlreadyComputedValueInCache","incrementCriterionFunctionFullCacheUsed","buildNewCriterionCache","evaluateRangeValue","setCriterionFunctionValues","addDependentCacheRange","rangeValue","iterable","getCriterionFunctionValue","criterionLambdas","conditionsIterators","filteredValues","reduceFunction","simpleConditionRanges","smallerCache","newCache","rcr","newCacheValue","incrementCriterionFunctionPartialCacheUsed","conditionalIterables","computableIterable","computable","conditionalSplits","conditionalIterable","cs","conditionalFirsts","zip","conditionalFirst","criterionLambda","rest","arr1","arr2","done","TextPlugin","iterateOverScalarValues","coercedValue","stringArg","indexArg","stringToSplit","indexToUse","splittedString","idMap","square","zeroForInfinite","NumericAggregationPlugin","counter","initialAccValue","reducingFunction","evaluateRange","reduceRange","rangeValues","fromAst","err","rangeStart","rangeEnd","getFunctionValue","setFunctionValue","rangeResult","actualRange","cachedValue","MedianPlugin","DatePlugin","coercedYear","coercedMonth","coercedDay","trunc","getEpochYearZero","delta","getWithinBounds","numberOfMonthsToShiftValue","numberOfMonthsToShift","endDate","endDateNumber","startDate","startDateNumber","dateArg","numberRepresentation","BooleanPlugin","conditionValue","anyReasonableValue","argValue","truesCount","anyFalseValue","vals","n","selector","InformationPlugin","rangeAst","rangeArg","rowArg","rowValue","columnArg","columnValue","TrigonometryPlugin","templateWithOneCoercedToNumberArgument","acos","asin","cos","sin","tan","atan","arg1","arg2","coercedArg1","coercedArg2","atan2","CountUniquePlugin","valuesSet","errorsSet","SumprodPlugin","leftArgValue","rightArgValue","numberOfElements","reduceSumprod","lit","rit","r","lval","rval","MatrixPlugin","leftMatrix","rightMatrix","outputSize","getGpuInstance","kernel","createKernel","thread","setPrecision","setOutput","onlyNumbersDataWithoutRange","sizeArg","rangeMatrix","leftCornerX","leftCornerY","currentMax","currentMin","i2","j2","iter","medianGuess","medianGuessCount","i3","j3","ExpPlugin","exp","AbsPlugin","DegreesPlugin","RadiansPlugin","RandomPlugin","random","VlookupPlugin","computedSorted","doVlookup","searchedRange","searchInRange","requiresRegex","IsEvenPlugin","IsOddPlugin","findNextOddNumber","ceiled","ceil","findNextEvenNumber","RoundingPlugin","commonArgumentsHandling2","numberToRound","places","rounddown","coercedNumberToRound","getNumericArgument","significance","roundingFunction","coercedPlaces","NUMBER_OF_BITS","DECIMAL_NUMBER_OF_BITS","MIN_BASE","MAX_BASE","ALPHABET","RadixConversionPlugin","dec2base","binaryWithSign","getFirstArgumentAsNumberInBase","twoComplementToDecimal","bin2base","base","padding","decimalToBaseWithMinimumPadding","decimal","decimalToBaseWithExactPadding","maxLength","baseAlphabet","regex","decimalToRadixComplement","LogarithmPlugin","coercedLogarithmicBase","logarithmicBase","log","BitwiseLogicOperationsPlugin","templateWithTwoPositiveIntegerArguments","validationResult","validateTwoNumericArguments","MAX_48BIT_INTEGER","SHIFT_MIN_POSITIONS","SHIFT_MAX_POSITIONS","BitShiftPlugin","bitshiftTemplate","shiftLeft","shiftRight","coercedPositions","positions","PowerPlugin","coercedBase","coercedExponent","parseFloat","MathConstantsPlugin","SqrtPlugin","sqrt","ModuloPlugin","dividend","divisor","DeltaPlugin","CharPlugin","CodePlugin","templateWithOneCoercedToStringArgument","ErrorFunctionPlugin","erf2","erf","erfc","erfApprox","polyExponent","coefficients","poly","coefficient","CorrelPlugin","dataX","dataY","computePearson","xit","yit","sumX","sumY","sumXsquares","sumYsquares","sumOfProducts","xval","yval"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD,sBAAsB,yCAAyC,WAAW,IAAI;AAC9E,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA,KAAK;AACL;AACA,mDAAmD,iDAAiD;AACpG,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,kCAAkC;AAChH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gFAAgF,eAAe;AAC/F;AACA;AACA;;AAEA,GAAG,yEAAyE;AAC5E;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED,GAAG,qDAAqD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,mBAAmB,EAAE;AAC/C,0BAA0B,oBAAoB;AAC9C,CAAC;;AAED,GAAG,2EAA2E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,GAAG,uDAAuD;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,GAAG,0DAA0D,kCAAkC,EAAE,GAAG;AACpG;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY,QAAQ;AACzC;AACA,0CAA0C;AAC1C,GAAG;;AAEH,KAAK,4DAA4D;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtTA,aAAa,mBAAO,CAAC,CAAqB;AAC1C,+BAA+B,mBAAO,CAAC,CAAiD;AACxF,kCAAkC,mBAAO,CAAC,EAA6C;AACvF,eAAe,mBAAO,CAAC,EAAuB;AAC9C,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,gCAAgC,mBAAO,CAAC,EAA0C;AAClF,eAAe,mBAAO,CAAC,EAAwB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mDAAmD;AACnD,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACnBA,kBAAkB,mBAAO,CAAC,CAA0B;AACpD,iCAAiC,mBAAO,CAAC,CAA4C;AACrF,+BAA+B,mBAAO,CAAC,CAAyC;AAChF,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,kBAAkB,mBAAO,CAAC,E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;AACnD,kBAAkB,mBAAO,CAAC,CAA0B;AACpD,cAAc,mBAAO,CAAC,GAAgC;AACtD,0BAA0B,mBAAO,CAAC,EAA6B;;AAE/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kCAAkC;AAClC,oCAAoC;AACpC,cAAc;AACd,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;ACzLA,eAAe,mBAAO,CAAC,EAAuB;;AAE9C;AACA;AACA;AACA;;;;;;;;ACLa;AACb,iBAAiB,mBAAO,CAAC,EAA2B;AACpD,2BAA2B,mBAAO,CAAC,EAAqC;AACxE,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,kBAAkB,mBAAO,CAAC,CAA0B;;AAEpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC,KAAK;AACL;AACA;;;;;;;AClBA,aAAa,mBAAO,CAAC,CAAqB;AAC1C,mBAAmB,mBAAO,CAAC,GAA4B;AACvD,cAAc,mBAAO,CAAC,GAA6B;AACnD,kCAAkC,mBAAO,CAAC,EAA6C;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,SAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxtBA,8CAAa;;AAEb,mBAAmB,mBAAO,CAAC,GAAe;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,GAAO;AAC1B;AACA;AACA;AACA,0BAA0B;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B;AAC9B;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC,oBAAoB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzfA;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,GAAoB;;AAE/C;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA,mBAAmB,mBAAO,CAAC,GAAU;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D,2BAA2B,mDAAmD;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9rBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAE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C;AAC9E,eAAe,mBAAO,CAAC,GAAwB;AAC/C,eAAe,mBAAO,CAAC,EAA2B;AAClD,oBAAoB,mBAAO,CAAC,GAAoC;AAChE,eAAe,mBAAO,CAAC,EAAuB;AAC9C,YAAY,mBAAO,CAAC,CAAoB;AACxC,uBAAuB,mBAAO,CAAC,EAA6B;AAC5D,iBAAiB,mBAAO,CAAC,GAA0B;AACnD,sBAAsB,mBAAO,CAAC,EAAgC;;AAE9D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2DAA2D,iBAAiB;;AAE5E;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B,EAAE;AACpD,0BAA0B,wBAAwB;AAClD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACnFa;;AAEb,YAAY,mBAAO,CAAC,CAAS;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACtBY;AACb,QAAQ,mBAAO,CAAC,CAAqB;AACrC,WAAW,mBAAO,CAAC,GAA0B;;AAE7C,GAAG,2DAA2D;AAC9D;AACA,CAAC;;;;;;;;ACNY;AACb,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,oBAAoB,mBAAO,CAAC,GAAyB;;AAErD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACtFa;AACb,oCAAoC,mBAAO,CAAC,GAAiD;AAC7F,eAAe,mBAAO,CAAC,GAAwB;AAC/C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,6BAA6B,mBAAO,CAAC,EAAuC;AAC5E,yBAAyB,mBAAO,CAAC,GAAkC;AACnE,yBAAyB,mBAAO,CAAC,GAAmC;AACpE,eAAe,mBAAO,CAAC,EAAwB;AAC/C,qBAAqB,mBAAO,CAAC,GAAmC;AAChE,iBAAiB,mBAAO,CAAC,GAA0B;AACnD,YAAY,mBAAO,CAAC,CAAoB;;AAExC;AACA;AACA;;AAEA;AACA,qCAAqC,iCAAiC,EAAE;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACrIY;AACb;AACA,mBAAO,CAAC,GAA2B;AACnC,eAAe,mBAAO,CAAC,EAAuB;AAC9C,YAAY,mBAAO,CAAC,CAAoB;AACxC,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,iBAAiB,mBAAO,CAAC,GAA0B;AACnD,kCAAkC,mBAAO,CAAC,EAA6C;;AAEvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,yBAAyB,4CAA4C;AACrE;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;;AAEA,2BAA2B,mBAAmB,aAAa;;AAE3D;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,gBAAgB;AAChB;AACA,cAAc;AACd,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,4CAA4C;AAC5E;AACA;AACA,2BAA2B,uCAAuC;AAClE;AACA;;AAEA;AACA;;;;;;;AC5HA,eAAe,mBAAO,CAAC,EAAwB;AAC/C,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,sBAAsB,mBAAO,CAAC,EAAgC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZa;AACb,aAAa,mBAAO,CAAC,EAA+B;;AAEpD;AACA;AACA;AACA;AACA;;;;;;;ACPA,cAAc,mBAAO,CAAC,EAAe;AACrC,iBAAiB,mBAAO,CAAC,GAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AChBA;;AACA;;;;;;;;AACA;AACO,IAAIwW,iBAAJ;;;AACP,CAAC,UAAUA,iBAAV,EAA6B;AAC1B;AAC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,GAAyB;AAClD,qBAAqB,mBAAO,CAAC,GAA8B;AAC3D,eAAe,mBAAO,CAAC,EAAwB;AAC/C,0BAA0B,mBAAO,CAAC,EAA6B;AAC/D,sBAAsB,mBAAO,CAAC,EAA8B;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;;;;;;;AClEa;AACb,kBAAkB,mBAAO,CAAC,GAA2B;AACrD,kBAAkB,mBAAO,CAAC,GAAgC;AAC1D,eAAe,mBAAO,CAAC,EAAwB;AAC/C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,iBAAiB,mBAAO,CAAC,GAA0B;AACnD,cAAc,mBAAO,CAAC,GAAsB;AAC5C,2BAA2B,mBAAO,CAAC,EAA8B;AACjE,WAAW,mBAAO,CAAC,EAAkB;AACrC,0BAA0B,mBAAO,CAAC,EAA6B;;AAE/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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F,gBAAM,IAAI6vC,QAAQ,CAACta,IAAnB;AACA;AACH;;AACD;;AACA,WAAK,OAAL;AACA,WAAK,KAAL;AAAY;AAAA,mCACSvqB,KAAK,CAACnR,KAAN,CAAY4K,KAAZ,CAAkB,GAAlB,CADT;AAAA;AAAA,cACD2tC,EADC;AAAA,cACGC,EADH;;AAERryC,gBAAM,IAAI6vC,QAAQ,CAACtB,KAAT,GAAiB,EAAjB,GAAsB6D,EAAtB,GAA2BC,EAArC;AACA;AACH;;AACD;AAAS;AACL,iBAAOn+C,SAAP;AACH;AArDL;AAuDH;;AACD,SAAO8L,MAAP;AACH,C;;;;;;;ACpMY;AACb,QAAQ,mBAAO,CAAC,CAAqB;AACrC,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,sBAAsB,mBAAO,CAAC,GAAgC;AAC9D,aAAa,mBAAO,CAAC,GAA4B;AACjD,YAAY,mBAAO,CAAC,CAAoB;;AAExC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,CAAC;;AAED;AACA;AACA,GAAG,gDAAgD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,CAAC;;;;;;;AC7HD,cAAc,mBAAO,CAAC,EAA0B;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;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","file":"hyperformula.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"chevrotain\"), require(\"gpu.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"HyperFormula\", [\"chevrotain\", \"gpu.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HyperFormula\"] = factory(require(\"chevrotain\"), require(\"gpu.js\"));\n\telse\n\t\troot[\"HyperFormula\"] = factory(root[\"chevrotain\"], root[\"GPU\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__154__, __WEBPACK_EXTERNAL_MODULE__265__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellType, CellValueType, ErrorType } from './Cell';\nimport { DetailedCellError, ExportedCellChange, ExportedNamedExpressionChange } from './CellValue';\nimport { HyperFormula } from './HyperFormula';\nimport { Config } from './Config';\nimport enGB from './i18n/languages/enGB';\nimport { ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MatrixFormulasNotSupportedError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasMatrixError, TargetLocationHasMatrixError, UnableToParseError } from './errors';\nimport * as plugins from './interpreter/plugin';\nimport { FunctionPlugin } from './interpreter';\n/** @internal */\nclass HyperFormulaNS extends HyperFormula {\n}\nHyperFormulaNS.HyperFormula = HyperFormula;\nHyperFormulaNS.ErrorType = ErrorType;\nHyperFormulaNS.CellType = CellType;\nHyperFormulaNS.CellValueType = CellValueType;\nHyperFormulaNS.DetailedCellError = DetailedCellError;\nHyperFormulaNS.ExportedCellChange = ExportedCellChange;\nHyperFormulaNS.ExportedNamedExpressionChange = ExportedNamedExpressionChange;\nHyperFormulaNS.ConfigValueTooBigError = ConfigValueTooBigError;\nHyperFormulaNS.ConfigValueTooSmallError = ConfigValueTooSmallError;\nHyperFormulaNS.EvaluationSuspendedError = EvaluationSuspendedError;\nHyperFormulaNS.ExpectedOneOfValuesError = ExpectedOneOfValuesError;\nHyperFormulaNS.ExpectedValueOfTypeError = ExpectedValueOfTypeError;\nHyperFormulaNS.FunctionPlugin = FunctionPlugin;\nHyperFormulaNS.FunctionPluginValidationError = FunctionPluginValidationError;\nHyperFormulaNS.InvalidAddressError = InvalidAddressError;\nHyperFormulaNS.InvalidArgumentsError = InvalidArgumentsError;\nHyperFormulaNS.LanguageNotRegisteredError = LanguageNotRegisteredError;\nHyperFormulaNS.LanguageAlreadyRegisteredError = LanguageAlreadyRegisteredError;\nHyperFormulaNS.MatrixFormulasNotSupportedError = MatrixFormulasNotSupportedError;\nHyperFormulaNS.MissingTranslationError = MissingTranslationError;\nHyperFormulaNS.NamedExpressionDoesNotExistError = NamedExpressionDoesNotExistError;\nHyperFormulaNS.NamedExpressionNameIsAlreadyTakenError = NamedExpressionNameIsAlreadyTakenError;\nHyperFormulaNS.NamedExpressionNameIsInvalidError = NamedExpressionNameIsInvalidError;\nHyperFormulaNS.NoOperationToRedoError = NoOperationToRedoError;\nHyperFormulaNS.NoOperationToUndoError = NoOperationToUndoError;\nHyperFormulaNS.NoRelativeAddressesAllowedError = NoRelativeAddressesAllowedError;\nHyperFormulaNS.NoSheetWithIdError = NoSheetWithIdError;\nHyperFormulaNS.NoSheetWithNameError = NoSheetWithNameError;\nHyperFormulaNS.NotAFormulaError = NotAFormulaError;\nHyperFormulaNS.NothingToPasteError = NothingToPasteError;\nHyperFormulaNS.ProtectedFunctionTranslationError = ProtectedFunctionTranslationError;\nHyperFormulaNS.SheetNameAlreadyTakenError = SheetNameAlreadyTakenError;\nHyperFormulaNS.SheetSizeLimitExceededError = SheetSizeLimitExceededError;\nHyperFormulaNS.SourceLocationHasMatrixError = SourceLocationHasMatrixError;\nHyperFormulaNS.TargetLocationHasMatrixError = TargetLocationHasMatrixError;\nHyperFormulaNS.UnableToParseError = UnableToParseError;\nconst defaultLanguage = Config.defaultConfig.language;\nHyperFormula.registerLanguage(defaultLanguage, enGB);\nHyperFormula.languages[enGB.langCode] = enGB;\nfor (const pluginName of Object.getOwnPropertyNames(plugins)) {\n    if (!pluginName.startsWith('_')) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        HyperFormula.registerFunctionPlugin(plugins[pluginName]);\n    }\n}\nexport default HyperFormulaNS;\nexport { HyperFormula, CellType, CellValueType, ErrorType, ExportedCellChange, ExportedNamedExpressionChange, DetailedCellError, ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPlugin, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MatrixFormulasNotSupportedError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasMatrixError, TargetLocationHasMatrixError, UnableToParseError, };\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.6.5',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = false;\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","module.exports = {};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","exports.f = Object.getOwnPropertySymbols;\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","module.exports = {};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names-external').f;\n\nvar FAILS_ON_PRIMITIVES = fails(function () { return !Object.getOwnPropertyNames(1); });\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  getOwnPropertyNames: nativeGetOwnPropertyNames\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toObject = require('../internals/to-object');\nvar nativeGetPrototypeOf = require('../internals/object-get-prototype-of');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {\n  getPrototypeOf: function getPrototypeOf(it) {\n    return nativeGetPrototypeOf(toObject(it));\n  }\n});\n\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar bind = require('../internals/function-bind');\nvar fails = require('../internals/fails');\n\nvar nativeConstruct = getBuiltIn('Reflect', 'construct');\n\n// `Reflect.construct` method\n// https://tc39.github.io/ecma262/#sec-reflect.construct\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  nativeConstruct(function () { /* empty */ });\n});\nvar FORCED = NEW_TARGET_BUG || ARGS_BUG;\n\n$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","'use strict';\nvar aFunction = require('../internals/a-function');\nvar isObject = require('../internals/is-object');\n\nvar slice = [].slice;\nvar factories = {};\n\nvar construct = function (C, argsLength, args) {\n  if (!(argsLength in factories)) {\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');\n  } return factories[argsLength](C, args);\n};\n\n// `Function.prototype.bind` method implementation\n// https://tc39.github.io/ecma262/#sec-function.prototype.bind\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = slice.call(arguments, 1);\n  var boundFunction = function bound(/* args... */) {\n    var args = partArgs.concat(slice.call(arguments));\n    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);\n  };\n  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;\n  return boundFunction;\n};\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeStartsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return nativeStartsWith\n      ? nativeStartsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { FormulaCellVertex, MatrixVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\nimport { SimpleRangeValue } from './interpreter/InterpreterValue';\n/**\n * Possible errors returned by our interpreter.\n */\nexport var ErrorType;\n(function (ErrorType) {\n    /** Division by zero. */\n    ErrorType[\"DIV_BY_ZERO\"] = \"DIV_BY_ZERO\";\n    /** Unknown function name. */\n    ErrorType[\"NAME\"] = \"NAME\";\n    ErrorType[\"VALUE\"] = \"VALUE\";\n    ErrorType[\"NUM\"] = \"NUM\";\n    ErrorType[\"NA\"] = \"NA\";\n    /** Cyclic dependency. */\n    ErrorType[\"CYCLE\"] = \"CYCLE\";\n    /* Wrong address reference. */\n    ErrorType[\"REF\"] = \"REF\";\n    /* Generic error */\n    ErrorType[\"ERROR\"] = \"ERROR\";\n})(ErrorType || (ErrorType = {}));\nexport const EmptyValue = Symbol('Empty value');\nexport var CellType;\n(function (CellType) {\n    CellType[\"FORMULA\"] = \"FORMULA\";\n    CellType[\"VALUE\"] = \"VALUE\";\n    CellType[\"MATRIX\"] = \"MATRIX\";\n    CellType[\"EMPTY\"] = \"EMPTY\";\n})(CellType || (CellType = {}));\nexport const getCellType = (vertex) => {\n    if (vertex instanceof FormulaCellVertex || vertex instanceof ParsingErrorVertex) {\n        return CellType.FORMULA;\n    }\n    if (vertex instanceof ValueCellVertex\n        || (vertex instanceof MatrixVertex && vertex.isNumeric())) {\n        return CellType.VALUE;\n    }\n    if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n        return CellType.MATRIX;\n    }\n    return CellType.EMPTY;\n};\nexport var CellValueType;\n(function (CellValueType) {\n    CellValueType[\"EMPTY\"] = \"EMPTY\";\n    CellValueType[\"NUMBER\"] = \"NUMBER\";\n    CellValueType[\"STRING\"] = \"STRING\";\n    CellValueType[\"BOOLEAN\"] = \"BOOLEAN\";\n    CellValueType[\"ERROR\"] = \"ERROR\";\n})(CellValueType || (CellValueType = {}));\nexport const CellValueTypeOrd = (arg) => {\n    switch (arg) {\n        case CellValueType.EMPTY:\n            return 0;\n        case CellValueType.NUMBER:\n            return 1;\n        case CellValueType.STRING:\n            return 2;\n        case CellValueType.BOOLEAN:\n            return 3;\n        case CellValueType.ERROR:\n            return 4;\n    }\n};\nexport const getCellValueType = (cellValue) => {\n    if (cellValue === EmptyValue) {\n        return CellValueType.EMPTY;\n    }\n    if (cellValue instanceof CellError || cellValue instanceof SimpleRangeValue) {\n        return CellValueType.ERROR;\n    }\n    switch (typeof cellValue) {\n        case 'string':\n            return CellValueType.STRING;\n        case 'number':\n            return CellValueType.NUMBER;\n        case 'boolean':\n            return CellValueType.BOOLEAN;\n    }\n    throw new Error('Cell value not computed');\n};\nexport class CellError {\n    constructor(type, message) {\n        this.type = type;\n        this.message = message;\n    }\n    static parsingError() {\n        return new CellError(ErrorType.ERROR, 'Parsing error');\n    }\n}\nexport const simpleRowAddress = (sheet, row) => ({ sheet, row });\nexport const simpleColumnAddress = (sheet, col) => ({ sheet, col });\nexport const simpleCellAddress = (sheet, col, row) => ({ sheet, col, row });\nexport const invalidSimpleCellAddress = (address) => (address.col < 0 || address.row < 0);\nexport const movedSimpleCellAddress = (address, toSheet, toRight, toBottom) => {\n    return simpleCellAddress(toSheet, address.col + toRight, address.row + toBottom);\n};\nexport const absoluteSheetReference = (address, baseAddress) => {\n    return address.sheet === null ? baseAddress.sheet : address.sheet;\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport { DependencyGraph } from './DependencyGraph';\nexport { AddressMapping } from './AddressMapping/AddressMapping';\nexport { Graph } from './Graph';\nexport { RangeMapping } from './RangeMapping';\nexport { SheetMapping } from './SheetMapping';\nexport { MatrixMapping } from './MatrixMapping';\nexport { MatrixVertex } from './MatrixVertex';\nexport { FormulaCellVertex } from './FormulaCellVertex';\nexport { EmptyCellVertex } from './EmptyCellVertex';\nexport { ValueCellVertex } from './ValueCellVertex';\nexport { ParsingErrorVertex } from './ParsingErrorVertex';\nexport { RangeVertex } from './RangeVertex';\nexport { SparseStrategy } from './AddressMapping/SparseStrategy';\nexport { DenseStrategy } from './AddressMapping/DenseStrategy';\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport assert from 'assert';\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { absolutizeDependencies } from '../absolutizeDependencies';\nimport { CellError, EmptyValue, ErrorType, simpleCellAddress } from '../Cell';\nimport { collectDependencies, NamedExpressionDependency } from '../parser';\nimport { ColumnsSpan, RowsSpan } from '../Span';\nimport { StatType } from '../statistics';\nimport { EmptyCellVertex, FormulaCellVertex, MatrixVertex, RangeVertex, ValueCellVertex, } from './';\nimport { AddressMapping } from './AddressMapping/AddressMapping';\nimport { collectAddressesDependentToMatrix } from './collectAddressesDependentToMatrix';\nimport { Graph } from './Graph';\nimport { MatrixMapping } from './MatrixMapping';\nimport { RangeMapping } from './RangeMapping';\nimport { SheetMapping } from './SheetMapping';\nimport { SimpleRangeValue } from '../interpreter/InterpreterValue';\nexport class DependencyGraph {\n    constructor(addressMapping, rangeMapping, sheetMapping, matrixMapping, stats, lazilyTransformingAstService, functionRegistry, namedExpressions) {\n        this.addressMapping = addressMapping;\n        this.rangeMapping = rangeMapping;\n        this.sheetMapping = sheetMapping;\n        this.matrixMapping = matrixMapping;\n        this.stats = stats;\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\n        this.functionRegistry = functionRegistry;\n        this.namedExpressions = namedExpressions;\n        this.dependencyQuery = (vertex) => {\n            let formula;\n            let address;\n            if (vertex instanceof FormulaCellVertex) {\n                address = vertex.getAddress(this.lazilyTransformingAstService);\n                formula = vertex.getFormula(this.lazilyTransformingAstService);\n            }\n            else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n                address = vertex.getAddress();\n                formula = vertex.getFormula();\n            }\n            else if (vertex instanceof RangeVertex) {\n                const allDeps = new Set();\n                const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(vertex.range); //checking whether this range was splitted by bruteForce or not\n                let range;\n                if (smallerRangeVertex !== null && this.graph.adjacentNodes(smallerRangeVertex).has(vertex)) {\n                    range = restRange;\n                    allDeps.add(smallerRangeVertex);\n                }\n                else { //did we ever need to use full range\n                    range = vertex.range;\n                }\n                for (const address of range.addresses(this)) {\n                    const cell = this.addressMapping.getCell(address);\n                    if (cell instanceof EmptyCellVertex) {\n                        cell.address = address;\n                    }\n                    if (cell !== null) {\n                        allDeps.add(cell);\n                    }\n                }\n                return allDeps;\n            }\n            else {\n                return null;\n            }\n            const deps = collectDependencies(formula, this.functionRegistry);\n            const absoluteDeps = absolutizeDependencies(deps, address);\n            return new Set(absoluteDeps.map((dep) => {\n                if (dep instanceof AbsoluteCellRange) {\n                    return this.rangeMapping.fetchRange(dep.start, dep.end);\n                }\n                else if (dep instanceof NamedExpressionDependency) {\n                    const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(dep.name, address.sheet);\n                    return this.addressMapping.fetchCell(namedExpression.address);\n                }\n                else {\n                    return this.addressMapping.fetchCell(dep);\n                }\n            }));\n        };\n        this.graph = new Graph(this.dependencyQuery);\n    }\n    /*\n     * Invariants:\n     * - empty cell has associated EmptyCellVertex if and only if it is a dependency (possibly indirect, through range) to some formula\n     */\n    static buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats) {\n        const addressMapping = new AddressMapping(config.chooseAddressMappingPolicy);\n        const rangeMapping = new RangeMapping();\n        return new DependencyGraph(addressMapping, rangeMapping, new SheetMapping(config.translationPackage), new MatrixMapping(), stats, lazilyTransformingAstService, functionRegistry, namedExpressions);\n    }\n    setFormulaToCell(address, ast, dependencies, hasVolatileFunction, hasStructuralChangeFunction) {\n        const vertex = this.addressMapping.getCell(address);\n        this.ensureThatVertexIsNonMatrixCellVertex(vertex);\n        const newVertex = new FormulaCellVertex(ast, address, this.lazilyTransformingAstService.version());\n        this.exchangeOrAddGraphNode(vertex, newVertex);\n        this.addressMapping.setCell(address, newVertex);\n        this.processCellDependencies(dependencies, newVertex);\n        this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\n        if (hasVolatileFunction) {\n            this.markAsVolatile(newVertex);\n        }\n        if (hasStructuralChangeFunction) {\n            this.markAsDependentOnStructureChange(newVertex);\n        }\n        this.correctInfiniteRangesDependency(address);\n    }\n    setParsingErrorToCell(address, errorVertex) {\n        const vertex = this.addressMapping.getCell(address);\n        this.ensureThatVertexIsNonMatrixCellVertex(vertex);\n        this.exchangeOrAddGraphNode(vertex, errorVertex);\n        this.addressMapping.setCell(address, errorVertex);\n        this.graph.markNodeAsSpecialRecentlyChanged(errorVertex);\n        this.correctInfiniteRangesDependency(address);\n    }\n    setValueToCell(address, newValue) {\n        const vertex = this.addressMapping.getCell(address);\n        this.ensureThatVertexIsNonMatrixCellVertex(vertex);\n        if (vertex instanceof ValueCellVertex) {\n            const oldValue = vertex.getCellValue();\n            if (oldValue !== newValue) {\n                vertex.setCellValue(newValue);\n                this.graph.markNodeAsSpecialRecentlyChanged(vertex);\n            }\n        }\n        else {\n            const newVertex = new ValueCellVertex(newValue);\n            this.exchangeOrAddGraphNode(vertex, newVertex);\n            this.addressMapping.setCell(address, newVertex);\n            this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\n        }\n        this.correctInfiniteRangesDependency(address);\n    }\n    setCellEmpty(address) {\n        const vertex = this.addressMapping.getCell(address);\n        if (vertex === null) {\n            return;\n        }\n        this.ensureThatVertexIsNonMatrixCellVertex(vertex);\n        if (this.graph.adjacentNodes(vertex).size > 0) {\n            const emptyVertex = new EmptyCellVertex(address);\n            this.exchangeGraphNode(vertex, emptyVertex);\n            if (this.graph.adjacentNodesCount(emptyVertex) === 0) {\n                this.removeVertex(emptyVertex);\n                this.addressMapping.removeCell(address);\n            }\n            else {\n                this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\n                this.addressMapping.setCell(address, emptyVertex);\n            }\n        }\n        else {\n            this.removeVertex(vertex);\n            this.addressMapping.removeCell(address);\n        }\n    }\n    ensureThatVertexIsNonMatrixCellVertex(vertex) {\n        assert.ok(!(vertex instanceof MatrixVertex), 'Illegal operation');\n    }\n    clearRecentlyChangedVertices() {\n        this.graph.clearSpecialNodesRecentlyChanged();\n    }\n    verticesToRecompute() {\n        return new Set([...this.graph.specialNodesRecentlyChanged, ...this.volatileVertices()]);\n    }\n    processCellDependencies(cellDependencies, endVertex) {\n        cellDependencies.forEach((dep) => {\n            if (dep instanceof AbsoluteCellRange) {\n                const range = dep;\n                let rangeVertex = this.getRange(range.start, range.end);\n                if (rangeVertex === undefined) {\n                    rangeVertex = new RangeVertex(range);\n                    this.rangeMapping.setRange(rangeVertex);\n                }\n                this.graph.addNode(rangeVertex);\n                if (!range.isFinite()) {\n                    this.graph.markNodeAsInfiniteRange(rangeVertex);\n                }\n                const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(range);\n                if (smallerRangeVertex) {\n                    this.graph.addEdge(smallerRangeVertex, rangeVertex);\n                    if (rangeVertex.bruteForce) {\n                        rangeVertex.bruteForce = false;\n                        for (const cellFromRange of range.addresses(this)) { //if we ever switch heuristic to processing by sorted sizes, this would be unnecessary\n                            this.graph.removeEdge(this.fetchCell(cellFromRange), rangeVertex);\n                        }\n                    }\n                }\n                else {\n                    rangeVertex.bruteForce = true;\n                }\n                const matrix = this.matrixMapping.getMatrix(restRange);\n                if (matrix !== undefined) {\n                    this.graph.addEdge(matrix, rangeVertex);\n                }\n                else {\n                    for (const cellFromRange of restRange.addresses(this)) {\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(cellFromRange), rangeVertex);\n                    }\n                }\n                this.graph.addEdge(rangeVertex, endVertex);\n                if (range.isFinite()) {\n                    this.correctInfiniteRangesDependenciesByRangeVertex(rangeVertex);\n                }\n            }\n            else if (dep instanceof NamedExpressionDependency) {\n                const sheetOfVertex = endVertex.getAddress(this.lazilyTransformingAstService).sheet;\n                const namedExpressionVertex = this.fetchNamedExpressionVertex(dep.name, sheetOfVertex);\n                this.graph.addEdge(namedExpressionVertex, endVertex);\n            }\n            else {\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(dep), endVertex);\n            }\n        });\n    }\n    fetchNamedExpressionVertex(expressionName, sheetId) {\n        const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(expressionName, sheetId);\n        return this.fetchCellOrCreateEmpty(namedExpression.address);\n    }\n    exchangeNode(addressFrom, addressTo) {\n        const vertexFrom = this.fetchCellOrCreateEmpty(addressFrom);\n        const vertexTo = this.fetchCellOrCreateEmpty(addressTo);\n        this.addressMapping.removeCell(addressFrom);\n        this.exchangeGraphNode(vertexFrom, vertexTo);\n    }\n    correctInfiniteRangesDependenciesByRangeVertex(vertex) {\n        for (const range of this.graph.infiniteRanges) {\n            const infiniteRangeVertex = range;\n            const intersection = vertex.range.intersectionWith(infiniteRangeVertex.range);\n            if (intersection === null) {\n                continue;\n            }\n            for (const address of intersection.addresses(this)) {\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(address), range);\n            }\n        }\n    }\n    correctInfiniteRangesDependency(address) {\n        let vertex = null;\n        for (const range of this.graph.infiniteRanges) {\n            const infiniteRangeVertex = range;\n            if (infiniteRangeVertex.range.addressInRange(address)) {\n                vertex = vertex || this.fetchCellOrCreateEmpty(address);\n                this.graph.addEdge(vertex, infiniteRangeVertex);\n            }\n        }\n    }\n    fetchCellOrCreateEmpty(address) {\n        let vertex = this.addressMapping.getCell(address);\n        if (!vertex) {\n            vertex = new EmptyCellVertex(address);\n            this.graph.addNode(vertex);\n            this.addressMapping.setCell(address, vertex);\n        }\n        return vertex;\n    }\n    removeRows(removedRows) {\n        if (this.matrixMapping.isFormulaMatrixInRows(removedRows)) {\n            throw Error('It is not possible to remove row with matrix');\n        }\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\n            for (const vertex of this.addressMapping.verticesFromRowsSpan(removedRows)) {\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\n                }\n                if (vertex instanceof MatrixVertex) {\n                    continue;\n                }\n                this.removeVertex(vertex);\n            }\n        });\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            this.truncateMatricesAfterRemovingRows(removedRows);\n        });\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n            this.addressMapping.removeRows(removedRows);\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            this.truncateRanges(removedRows, address => address.row);\n        });\n        this.addStructuralNodesToChangeSet();\n    }\n    removeSheet(removedSheetId) {\n        const matrices = new Set();\n        for (const [adr, vertex] of this.addressMapping.sheetEntries(removedSheetId)) {\n            if (vertex instanceof MatrixVertex) {\n                if (matrices.has(vertex)) {\n                    continue;\n                }\n                else {\n                    matrices.add(vertex);\n                }\n            }\n            for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\n            }\n            this.removeVertex(vertex);\n            this.addressMapping.removeCell(adr);\n        }\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            for (const matrix of matrices.values()) {\n                this.matrixMapping.removeMatrix(matrix.getRange());\n            }\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            const rangesToRemove = this.rangeMapping.removeRangesInSheet(removedSheetId);\n            for (const range of rangesToRemove) {\n                this.removeVertex(range);\n            }\n            this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n                this.addressMapping.removeSheet(removedSheetId);\n            });\n        });\n        this.addStructuralNodesToChangeSet();\n    }\n    clearSheet(sheetId) {\n        const matrices = new Set();\n        for (const [address, vertex] of this.addressMapping.sheetEntries(sheetId)) {\n            if (vertex instanceof MatrixVertex) {\n                matrices.add(vertex);\n            }\n            else {\n                this.setCellEmpty(address);\n            }\n        }\n        for (const matrix of matrices.values()) {\n            this.setMatrixEmpty(matrix);\n        }\n        this.addStructuralNodesToChangeSet();\n    }\n    removeColumns(removedColumns) {\n        if (this.matrixMapping.isFormulaMatrixInColumns(removedColumns)) {\n            throw Error('It is not possible to remove column within matrix');\n        }\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\n            for (const vertex of this.addressMapping.verticesFromColumnsSpan(removedColumns)) {\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\n                }\n                if (vertex instanceof MatrixVertex) {\n                    continue;\n                }\n                this.removeVertex(vertex);\n            }\n        });\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            this.truncateMatricesAfterRemovingColumns(removedColumns);\n        });\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n            this.addressMapping.removeColumns(removedColumns);\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            this.truncateRanges(removedColumns, address => address.col);\n        });\n        this.addStructuralNodesToChangeSet();\n    }\n    addRows(addedRows) {\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n            this.addressMapping.addRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\n        });\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            this.expandMatricesAfterAddingRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            this.rangeMapping.moveAllRangesInSheetAfterRowByRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\n            this.fixRangesWhenAddingRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\n        });\n        for (const vertex of this.addressMapping.verticesFromRowsSpan(addedRows)) {\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\n        }\n        this.addStructuralNodesToChangeSet();\n    }\n    addColumns(addedColumns) {\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n            this.addressMapping.addColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\n        });\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            this.expandMatricesAfterAddingColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            this.rangeMapping.moveAllRangesInSheetAfterColumnByColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\n            this.fixRangesWhenAddingColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\n        });\n        for (const vertex of this.addressMapping.verticesFromColumnsSpan(addedColumns)) {\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\n        }\n        this.addStructuralNodesToChangeSet();\n    }\n    ensureNoMatrixInRange(range) {\n        if (this.matrixMapping.isFormulaMatrixInRange(range)) {\n            throw Error('It is not possible to move / replace cells with matrix');\n        }\n    }\n    moveCells(sourceRange, toRight, toBottom, toSheet) {\n        for (const sourceAddress of sourceRange.addressesWithDirection(toRight, toBottom, this)) {\n            const targetAddress = simpleCellAddress(toSheet, sourceAddress.col + toRight, sourceAddress.row + toBottom);\n            let sourceVertex = this.addressMapping.getCell(sourceAddress);\n            const targetVertex = this.addressMapping.getCell(targetAddress);\n            this.addressMapping.removeCell(sourceAddress);\n            if (sourceVertex !== null) {\n                this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\n                this.addressMapping.setCell(targetAddress, sourceVertex);\n                let emptyVertex = null;\n                for (const adjacentNode of this.graph.adjacentNodes(sourceVertex)) {\n                    if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\n                        emptyVertex = emptyVertex || this.fetchCellOrCreateEmpty(sourceAddress);\n                        this.graph.addEdge(emptyVertex, adjacentNode);\n                        this.graph.removeEdge(sourceVertex, adjacentNode);\n                    }\n                }\n                if (emptyVertex) {\n                    this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\n                    this.addressMapping.setCell(sourceAddress, emptyVertex);\n                }\n            }\n            if (targetVertex !== null) {\n                if (sourceVertex === null) {\n                    this.addressMapping.removeCell(targetAddress);\n                }\n                for (const adjacentNode of this.graph.adjacentNodes(targetVertex)) {\n                    if (adjacentNode !== sourceVertex) {\n                        sourceVertex = sourceVertex || this.fetchCellOrCreateEmpty(targetAddress);\n                        this.graph.addEdge(sourceVertex, adjacentNode);\n                        this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\n                    }\n                }\n                this.removeVertex(targetVertex);\n            }\n        }\n        for (const rangeVertex of this.rangeMapping.rangeVerticesContainedInRange(sourceRange)) {\n            for (const adjacentNode of this.graph.adjacentNodes(rangeVertex)) {\n                if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\n                    this.graph.removeEdge(rangeVertex, adjacentNode);\n                    for (const address of rangeVertex.range.addresses(this)) {\n                        const newEmptyVertex = this.fetchCellOrCreateEmpty(address);\n                        this.graph.addEdge(newEmptyVertex, adjacentNode);\n                        this.addressMapping.setCell(address, newEmptyVertex);\n                        this.graph.markNodeAsSpecialRecentlyChanged(newEmptyVertex);\n                    }\n                }\n            }\n        }\n        this.rangeMapping.moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet);\n    }\n    disableNumericMatrices() {\n        for (const [_, matrixVertex] of this.matrixMapping.numericMatrices()) {\n            this.breakNumericMatrix(matrixVertex);\n        }\n    }\n    breakNumericMatricesInRange(range) {\n        for (const [_, matrix] of this.matrixMapping.numericMatricesInRange(range)) {\n            this.breakNumericMatrix(matrix);\n        }\n    }\n    breakNumericMatrix(matrixVertex) {\n        const matrixRange = AbsoluteCellRange.spanFrom(matrixVertex.getAddress(), matrixVertex.width, matrixVertex.height);\n        const adjacentNodes = this.graph.adjacentNodes(matrixVertex);\n        for (const address of matrixRange.addresses(this)) {\n            const value = this.getCellValue(address); // We wouldn't need that typecast if we would take values from Matrix\n            const valueVertex = new ValueCellVertex(value);\n            this.addVertex(address, valueVertex);\n        }\n        for (const adjacentNode of adjacentNodes.values()) {\n            const nodeDependencies = collectAddressesDependentToMatrix(this.functionRegistry, adjacentNode, matrixVertex, this.lazilyTransformingAstService, this);\n            for (const address of nodeDependencies) {\n                const vertex = this.fetchCell(address);\n                this.graph.addEdge(vertex, adjacentNode);\n            }\n        }\n        this.removeVertex(matrixVertex);\n        this.matrixMapping.removeMatrix(matrixVertex.getRange());\n    }\n    setMatrixEmpty(matrixVertex) {\n        const matrixRange = AbsoluteCellRange.spanFrom(matrixVertex.getAddress(), matrixVertex.width, matrixVertex.height);\n        const adjacentNodes = this.graph.adjacentNodes(matrixVertex);\n        for (const address of matrixRange.addresses(this)) {\n            this.addressMapping.removeCell(address);\n        }\n        for (const adjacentNode of adjacentNodes.values()) {\n            const nodeDependencies = collectAddressesDependentToMatrix(this.functionRegistry, adjacentNode, matrixVertex, this.lazilyTransformingAstService, this);\n            for (const address of nodeDependencies) {\n                const vertex = this.fetchCellOrCreateEmpty(address);\n                this.graph.addEdge(vertex, adjacentNode);\n            }\n            if (nodeDependencies.length > 0) {\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\n            }\n        }\n        this.removeVertex(matrixVertex);\n        this.matrixMapping.removeMatrix(matrixVertex.getRange());\n    }\n    addVertex(address, vertex) {\n        this.graph.addNode(vertex);\n        this.setVertexAddress(address, vertex);\n    }\n    addMatrixVertex(address, vertex) {\n        this.graph.addNode(vertex);\n        this.setAddressMappingForMatrixVertex(vertex, address);\n    }\n    addNewMatrixVertex(matrixVertex) {\n        const range = AbsoluteCellRange.spanFrom(matrixVertex.getAddress(), matrixVertex.width, matrixVertex.height);\n        for (const vertex of this.verticesFromRange(range)) {\n            if (vertex instanceof MatrixVertex) {\n                throw Error('You cannot modify only part of an array');\n            }\n        }\n        this.setMatrix(range, matrixVertex);\n        for (const [address, vertex] of this.entriesFromRange(range)) {\n            if (vertex) {\n                this.exchangeGraphNode(vertex, matrixVertex);\n            }\n            this.setVertexAddress(address, matrixVertex);\n        }\n    }\n    *matrixFormulaNodes() {\n        for (const vertex of this.graph.nodes) {\n            if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n                yield vertex;\n            }\n        }\n    }\n    *entriesFromRowsSpan(rowsSpan) {\n        yield* this.addressMapping.entriesFromRowsSpan(rowsSpan);\n    }\n    *entriesFromColumnsSpan(columnsSpan) {\n        yield* this.addressMapping.entriesFromColumnsSpan(columnsSpan);\n    }\n    existsVertex(address) {\n        return this.addressMapping.has(address);\n    }\n    fetchCell(address) {\n        return this.addressMapping.fetchCell(address);\n    }\n    getCell(address) {\n        return this.addressMapping.getCell(address);\n    }\n    getCellValue(address) {\n        return this.addressMapping.getCellValue(address);\n    }\n    getScalarValue(address) {\n        const value = this.addressMapping.getCellValue(address);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return value;\n    }\n    setVertexAddress(address, vertex) {\n        this.addressMapping.setCell(address, vertex);\n    }\n    existsEdge(fromNode, toNode) {\n        return this.graph.existsEdge(fromNode, toNode);\n    }\n    getSheetId(sheetName) {\n        return this.sheetMapping.fetch(sheetName);\n    }\n    getSheetName(sheetId) {\n        return this.sheetMapping.fetchDisplayName(sheetId);\n    }\n    getSheetHeight(sheet) {\n        return this.addressMapping.getHeight(sheet);\n    }\n    getSheetWidth(sheet) {\n        return this.addressMapping.getWidth(sheet);\n    }\n    getMatrix(range) {\n        return this.matrixMapping.getMatrix(range);\n    }\n    setMatrix(range, vertex) {\n        this.matrixMapping.setMatrix(range, vertex);\n    }\n    getRange(start, end) {\n        return this.rangeMapping.getRange(start, end);\n    }\n    topSortWithScc() {\n        return this.graph.topSortWithScc();\n    }\n    markAsVolatile(vertex) {\n        this.graph.markNodeAsSpecial(vertex);\n    }\n    markAsDependentOnStructureChange(vertex) {\n        this.graph.markNodeAsChangingWithStructure(vertex);\n    }\n    forceApplyPostponedTransformations() {\n        for (const vertex of this.graph.nodes.values()) {\n            if (vertex instanceof FormulaCellVertex) {\n                vertex.ensureRecentData(this.lazilyTransformingAstService);\n            }\n        }\n    }\n    volatileVertices() {\n        return this.graph.specialNodes;\n    }\n    destroy() {\n        this.graph.destroy();\n        this.addressMapping.destroy();\n        this.rangeMapping.destroy();\n        this.sheetMapping.destroy();\n        this.matrixMapping.destroy();\n    }\n    *verticesFromRange(range) {\n        for (const address of range.addresses(this)) {\n            const vertex = this.getCell(address);\n            if (vertex) {\n                yield vertex;\n            }\n        }\n    }\n    *valuesFromRange(range) {\n        for (const address of range.addresses(this)) {\n            const value = this.getScalarValue(address);\n            if (value !== EmptyValue) {\n                yield [value, address];\n            }\n        }\n    }\n    *entriesFromRange(range) {\n        for (const address of range.addresses(this)) {\n            yield [address, this.getCell(address)];\n        }\n    }\n    exchangeGraphNode(oldNode, newNode) {\n        this.graph.addNode(newNode);\n        const adjNodesStored = this.graph.adjacentNodes(oldNode);\n        this.removeVertex(oldNode);\n        adjNodesStored.forEach((adjacentNode) => {\n            if (this.graph.hasNode(adjacentNode)) {\n                this.graph.addEdge(newNode, adjacentNode);\n            }\n        });\n    }\n    exchangeOrAddGraphNode(oldNode, newNode) {\n        if (oldNode) {\n            this.exchangeGraphNode(oldNode, newNode);\n        }\n        else {\n            this.graph.addNode(newNode);\n        }\n    }\n    addStructuralNodesToChangeSet() {\n        for (const vertex of this.graph.specialNodesStructuralChanges) {\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\n        }\n    }\n    fixRangesWhenAddingRows(sheet, row, numberOfRows) {\n        const originalValues = Array.from(this.rangeMapping.rangesInSheet(sheet));\n        for (const rangeVertex of originalValues) {\n            if (rangeVertex.range.includesRow(row + numberOfRows)) {\n                if (rangeVertex.bruteForce) {\n                    const addedSubrangeInThatRange = rangeVertex.range.rangeWithSameWidth(row, numberOfRows);\n                    for (const address of addedSubrangeInThatRange.addresses(this)) {\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\n                    }\n                }\n                else {\n                    let currentRangeVertex = rangeVertex;\n                    let find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\n                    if (find.smallerRangeVertex !== null) {\n                        continue;\n                    }\n                    while (find.smallerRangeVertex === null) {\n                        const newRangeVertex = new RangeVertex(AbsoluteCellRange.spanFrom(currentRangeVertex.range.start, currentRangeVertex.range.width(), currentRangeVertex.range.height() - 1));\n                        this.rangeMapping.setRange(newRangeVertex);\n                        this.graph.addNode(newRangeVertex);\n                        const restRange = new AbsoluteCellRange(simpleCellAddress(currentRangeVertex.range.start.sheet, currentRangeVertex.range.start.col, currentRangeVertex.range.end.row), currentRangeVertex.range.end);\n                        this.addAllFromRange(restRange, currentRangeVertex);\n                        this.graph.addEdge(newRangeVertex, currentRangeVertex);\n                        currentRangeVertex = newRangeVertex;\n                        find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\n                    }\n                    this.graph.addEdge(find.smallerRangeVertex, currentRangeVertex);\n                    this.addAllFromRange(find.restRange, currentRangeVertex);\n                    this.graph.removeEdge(find.smallerRangeVertex, rangeVertex);\n                }\n            }\n        }\n    }\n    addAllFromRange(range, vertex) {\n        for (const address of range.addresses(this)) {\n            this.graph.addEdge(this.fetchCellOrCreateEmpty(address), vertex);\n        }\n    }\n    fixRangesWhenAddingColumns(sheet, column, numberOfColumns) {\n        for (const rangeVertex of this.rangeMapping.rangesInSheet(sheet)) {\n            if (rangeVertex.range.includesColumn(column + numberOfColumns)) {\n                let subrange;\n                if (rangeVertex.bruteForce) {\n                    subrange = rangeVertex.range.rangeWithSameHeight(column, numberOfColumns);\n                }\n                else {\n                    subrange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, column, rangeVertex.range.end.row), numberOfColumns, 1);\n                }\n                for (const address of subrange.addresses(this)) {\n                    this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\n                }\n            }\n        }\n    }\n    setAddressMappingForMatrixVertex(vertex, formulaAddress) {\n        this.setVertexAddress(formulaAddress, vertex);\n        if (!(vertex instanceof MatrixVertex)) {\n            return;\n        }\n        const range = AbsoluteCellRange.spanFrom(formulaAddress, vertex.width, vertex.height);\n        this.setMatrix(range, vertex);\n        for (const address of range.addresses(this)) {\n            this.setVertexAddress(address, vertex);\n        }\n    }\n    truncateMatricesAfterRemovingRows(removedRows) {\n        const verticesToRemove = this.matrixMapping.truncateMatricesByRows(removedRows);\n        verticesToRemove.forEach((vertex) => {\n            this.removeVertex(vertex);\n        });\n    }\n    truncateRanges(span, coordinate) {\n        const { verticesToRemove, verticesToMerge } = this.rangeMapping.truncateRanges(span, coordinate);\n        for (const [existingVertex, mergedVertex] of verticesToMerge) {\n            this.mergeRangeVertices(existingVertex, mergedVertex);\n        }\n        for (const rangeVertex of verticesToRemove) {\n            this.removeVertexAndCleanupDependencies(rangeVertex);\n        }\n    }\n    truncateMatricesAfterRemovingColumns(removedColumns) {\n        const verticesToRemove = this.matrixMapping.truncateMatricesByColumns(removedColumns);\n        verticesToRemove.forEach((vertex) => {\n            this.removeVertex(vertex);\n        });\n    }\n    expandMatricesAfterAddingRows(sheet, rowStart, numberOfRows) {\n        for (const [, matrix] of this.matrixMapping.numericMatricesInRows(RowsSpan.fromRowStartAndEnd(sheet, rowStart, rowStart))) {\n            matrix.addRows(sheet, rowStart, numberOfRows);\n            const addedRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, matrix.getAddress().col, rowStart), matrix.width, numberOfRows);\n            for (const address of addedRange.addresses(this)) {\n                this.addressMapping.setCell(address, matrix);\n            }\n        }\n    }\n    expandMatricesAfterAddingColumns(sheet, columnStart, numberOfColumns) {\n        for (const [, matrix] of this.matrixMapping.numericMatricesInColumns(ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart, columnStart))) {\n            matrix.addColumns(sheet, columnStart, numberOfColumns);\n            const addedRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, columnStart, matrix.getAddress().row), numberOfColumns, matrix.height);\n            for (const address of addedRange.addresses(this)) {\n                this.addressMapping.setCell(address, matrix);\n            }\n        }\n    }\n    removeVertex(vertex) {\n        this.removeVertexAndCleanupDependencies(vertex);\n        if (vertex instanceof RangeVertex) {\n            this.rangeMapping.removeRange(vertex);\n        }\n    }\n    mergeRangeVertices(existingVertex, newVertex) {\n        const adjNodesStored = this.graph.adjacentNodes(newVertex);\n        this.removeVertexAndCleanupDependencies(newVertex);\n        this.graph.softRemoveEdge(existingVertex, newVertex);\n        adjNodesStored.forEach((adjacentNode) => {\n            if (this.graph.hasNode(adjacentNode)) {\n                this.graph.addEdge(existingVertex, adjacentNode);\n            }\n        });\n    }\n    removeVertexAndCleanupDependencies(vertex) {\n        const dependencies = this.graph.removeNode(vertex);\n        while (dependencies.size > 0) {\n            const vertex = dependencies.values().next().value;\n            dependencies.delete(vertex);\n            if (this.graph.hasNode(vertex) && this.graph.adjacentNodesCount(vertex) === 0) {\n                if (vertex instanceof RangeVertex || vertex instanceof EmptyCellVertex) {\n                    this.graph.removeNode(vertex).forEach((candidate) => dependencies.add(candidate));\n                }\n                if (vertex instanceof RangeVertex) {\n                    this.rangeMapping.removeRange(vertex);\n                }\n                else if (vertex instanceof EmptyCellVertex) {\n                    this.addressMapping.removeCell(vertex.address);\n                }\n            }\n        }\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  // eslint-disable-next-line max-len\n  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n    new NativeConstructor().entries().next();\n  })))) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n  var iterator, iterFn, index, length, result, next, step;\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = AS_ENTRIES\n          ? boundFunction(anObject(step = iterable[index])[0], step[1])\n          : boundFunction(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n\niterate.stop = function (result) {\n  return new Result(true, result);\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/function-bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { AstNodeType, CellAddress } from './parser';\nimport { RowsSpan } from './Span';\nexport const DIFFERENT_SHEETS_ERROR = 'AbsoluteCellRange: Start and end are in different sheets';\nexport const WRONG_RANGE_SIZE = 'AbsoluteCellRange: Wrong range size';\nexport class AbsoluteCellRange {\n    constructor(start, end) {\n        if (start.sheet !== end.sheet) {\n            throw new Error(DIFFERENT_SHEETS_ERROR);\n        }\n        this.start = simpleCellAddress(start.sheet, start.col, start.row);\n        this.end = simpleCellAddress(end.sheet, end.col, end.row);\n    }\n    get sheet() {\n        return this.start.sheet;\n    }\n    static fromAst(ast, baseAddress) {\n        if (ast.type === AstNodeType.CELL_RANGE) {\n            return AbsoluteCellRange.fromCellRange(ast, baseAddress);\n        }\n        else if (ast.type === AstNodeType.COLUMN_RANGE) {\n            return AbsoluteColumnRange.fromColumnRange(ast, baseAddress);\n        }\n        else {\n            return AbsoluteRowRange.fromRowRange(ast, baseAddress);\n        }\n    }\n    static fromCellRange(x, baseAddress) {\n        return new AbsoluteCellRange(new CellAddress(x.start.sheet, x.start.col, x.start.row, x.start.type).toSimpleCellAddress(baseAddress), new CellAddress(x.end.sheet, x.end.col, x.end.row, x.end.type).toSimpleCellAddress(baseAddress));\n    }\n    static spanFrom(topLeftCorner, width, height) {\n        if (!Number.isFinite(width) && Number.isFinite(height)) {\n            return new AbsoluteRowRange(topLeftCorner.sheet, topLeftCorner.row, topLeftCorner.row + height - 1);\n        }\n        else if (!Number.isFinite(height) && Number.isFinite(width)) {\n            return new AbsoluteColumnRange(topLeftCorner.sheet, topLeftCorner.col, topLeftCorner.col + width - 1);\n        }\n        else if (Number.isFinite(height) && Number.isFinite(width)) {\n            return new AbsoluteCellRange(topLeftCorner, simpleCellAddress(topLeftCorner.sheet, topLeftCorner.col + width - 1, topLeftCorner.row + height - 1));\n        }\n        throw new Error(WRONG_RANGE_SIZE);\n    }\n    static fromCoordinates(sheet, x1, y1, x2, y2) {\n        return new AbsoluteCellRange(simpleCellAddress(sheet, x1, y1), simpleCellAddress(sheet, x2, y2));\n    }\n    static singleRangeFromCellAddress(cellAddress, baseAddress) {\n        const simpleCellAddress = cellAddress.toSimpleCellAddress(baseAddress);\n        return new AbsoluteCellRange(simpleCellAddress, simpleCellAddress);\n    }\n    isFinite() {\n        return Number.isFinite(this.size());\n    }\n    doesOverlap(other) {\n        if (this.start.sheet != other.start.sheet) {\n            return false;\n        }\n        if (this.end.row < other.start.row || this.start.row > other.end.row) {\n            return false;\n        }\n        if (this.end.col < other.start.col || this.start.col > other.end.col) {\n            return false;\n        }\n        return true;\n    }\n    addressInRange(address) {\n        if (this.sheet !== address.sheet) {\n            return false;\n        }\n        if (this.start.row <= address.row && this.end.row >= address.row\n            && this.start.col <= address.col && this.end.col >= address.col) {\n            return true;\n        }\n        return false;\n    }\n    columnInRange(address) {\n        if (this.sheet !== address.sheet) {\n            return false;\n        }\n        return this.start.col <= address.col && this.end.col >= address.col;\n    }\n    rowInRange(address) {\n        if (this.sheet !== address.sheet) {\n            return false;\n        }\n        return this.start.row <= address.row && this.end.row >= address.row;\n    }\n    containsRange(range) {\n        return this.addressInRange(range.start) && this.addressInRange(range.end);\n    }\n    intersectionWith(other) {\n        if (this.sheet !== other.start.sheet) {\n            return null;\n        }\n        const startRow = Math.max(this.start.row, other.start.row);\n        const endRow = Math.min(this.end.row, other.end.row);\n        const startCol = Math.max(this.start.col, other.start.col);\n        const endCol = Math.min(this.end.col, other.end.col);\n        if (startRow > endRow || startCol > endCol) {\n            return null;\n        }\n        return new AbsoluteCellRange(simpleCellAddress(this.sheet, startCol, startRow), simpleCellAddress(this.sheet, endCol, endRow));\n    }\n    includesRow(row) {\n        return this.start.row < row && this.end.row >= row;\n    }\n    includesColumn(column) {\n        return this.start.col < column && this.end.col >= column;\n    }\n    shiftByRows(numberOfRows) {\n        this.start.row += numberOfRows;\n        this.end.row += numberOfRows;\n    }\n    expandByRows(numberOfRows) {\n        this.end.row += numberOfRows;\n    }\n    shiftByColumns(numberOfColumns) {\n        this.start.col += numberOfColumns;\n        this.end.col += numberOfColumns;\n    }\n    shifted(byCols, byRows) {\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col + byCols, this.start.row + byRows), this.width(), this.height());\n    }\n    expandByColumns(numberOfColumns) {\n        this.end.col += numberOfColumns;\n    }\n    moveToSheet(toSheet) {\n        this.start.sheet = toSheet;\n        this.end.sheet = toSheet;\n    }\n    removeSpan(span) {\n        if (span instanceof RowsSpan) {\n            this.removeRows(span.start, span.end);\n        }\n        else {\n            this.removeColumns(span.start, span.end);\n        }\n    }\n    removeRows(rowStart, rowEnd) {\n        if (rowStart > this.end.row) {\n            return;\n        }\n        if (rowEnd < this.start.row) {\n            const numberOfRows = rowEnd - rowStart + 1;\n            return this.shiftByRows(-numberOfRows);\n        }\n        if (rowStart <= this.start.row) {\n            this.start.row = rowStart;\n        }\n        this.end.row -= Math.min(rowEnd, this.end.row) - rowStart + 1;\n    }\n    removeColumns(columnStart, columnEnd) {\n        if (columnStart > this.end.col) {\n            return;\n        }\n        if (columnEnd < this.start.col) {\n            const numberOfColumns = columnEnd - columnStart + 1;\n            return this.shiftByColumns(-numberOfColumns);\n        }\n        if (columnStart <= this.start.col) {\n            this.start.col = columnStart;\n        }\n        this.end.col -= Math.min(columnEnd, this.end.col) - columnStart + 1;\n    }\n    shouldBeRemoved() {\n        return this.width() <= 0 || this.height() <= 0;\n    }\n    rangeWithSameWidth(startRow, numberOfRows) {\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col, startRow), this.width(), numberOfRows);\n    }\n    rangeWithSameHeight(startColumn, numberOfColumns) {\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, startColumn, this.start.row), numberOfColumns, this.height());\n    }\n    toString() {\n        return `${this.start.sheet},${this.start.col},${this.start.row},${this.end.col},${this.end.row}`;\n    }\n    width() {\n        return this.end.col - this.start.col + 1;\n    }\n    height() {\n        return this.end.row - this.start.row + 1;\n    }\n    size() {\n        return this.height() * this.width();\n    }\n    arrayOfAddressesInRange() {\n        const result = [];\n        for (let y = 0; y < this.height(); ++y) {\n            result[y] = [];\n            for (let x = 0; x < this.width(); ++x) {\n                const value = simpleCellAddress(this.sheet, this.start.col + x, this.start.row + y);\n                result[y].push(value);\n            }\n        }\n        return result;\n    }\n    withStart(newStart) {\n        return new AbsoluteCellRange(newStart, this.end);\n    }\n    sameDimensionsAs(other) {\n        return this.width() === other.width() && this.height() === other.height();\n    }\n    *addresses(dependencyGraph) {\n        let currentRow = this.start.row;\n        while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\n            let currentColumn = this.start.col;\n            while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\n                yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                currentColumn++;\n            }\n            currentRow++;\n        }\n    }\n    *addressesWithDirection(right, bottom, dependencyGraph) {\n        if (right > 0) {\n            if (bottom > 0) {\n                let currentRow = this.effectiveEndRow(dependencyGraph);\n                while (currentRow >= this.start.row) {\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\n                    while (currentColumn >= this.start.col) {\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                        currentColumn -= 1;\n                    }\n                    currentRow -= 1;\n                }\n            }\n            else {\n                let currentRow = this.start.row;\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\n                    while (currentColumn >= this.start.col) {\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                        currentColumn -= 1;\n                    }\n                    currentRow += 1;\n                }\n            }\n        }\n        else {\n            if (bottom > 0) {\n                let currentRow = this.effectiveEndRow(dependencyGraph);\n                while (currentRow >= this.start.row) {\n                    let currentColumn = this.start.col;\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                        currentColumn += 1;\n                    }\n                    currentRow -= 1;\n                }\n            }\n            else {\n                let currentRow = this.start.row;\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\n                    let currentColumn = this.start.col;\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                        currentColumn += 1;\n                    }\n                    currentRow += 1;\n                }\n            }\n        }\n    }\n    getAddress(col, row) {\n        if (col < 0 || row < 0 || row > this.height() - 1 || col > this.width() - 1) {\n            throw Error('Index out of bound');\n        }\n        return simpleCellAddress(this.start.sheet, this.start.col + col, this.start.row + row);\n    }\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\n        return this.end.col >= maxColumns || this.end.row >= maxRows;\n    }\n    effectiveEndColumn(_dependencyGraph) {\n        return this.end.col;\n    }\n    effectiveEndRow(_dependencyGraph) {\n        return this.end.row;\n    }\n}\nexport class AbsoluteColumnRange extends AbsoluteCellRange {\n    static fromColumnRange(x, baseAddress) {\n        const start = x.start.toSimpleColumnAddress(baseAddress);\n        const end = x.end.toSimpleColumnAddress(baseAddress);\n        if (start.sheet !== end.sheet) {\n            throw new Error(DIFFERENT_SHEETS_ERROR);\n        }\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\n    }\n    constructor(sheet, columnStart, columnEnd) {\n        super(simpleCellAddress(sheet, columnStart, 0), simpleCellAddress(sheet, columnEnd, Number.POSITIVE_INFINITY));\n    }\n    shouldBeRemoved() {\n        return this.width() <= 0;\n    }\n    shiftByRows(_numberOfRows) {\n        return;\n    }\n    expandByRows(_numberOfRows) {\n        return;\n    }\n    shifted(byCols, _byRows) {\n        return new AbsoluteColumnRange(this.sheet, this.start.col + byCols, this.end.col + byCols);\n    }\n    removeRows(_rowStart, _rowEnd) {\n        return;\n    }\n    rangeWithSameHeight(startColumn, numberOfColumns) {\n        return new AbsoluteColumnRange(this.sheet, startColumn, startColumn + numberOfColumns - 1);\n    }\n    exceedsSheetSizeLimits(maxColumns, _maxRows) {\n        return this.end.col >= maxColumns;\n    }\n    effectiveEndRow(dependencyGraph) {\n        return dependencyGraph.getSheetHeight(this.sheet) - 1;\n    }\n}\nexport class AbsoluteRowRange extends AbsoluteCellRange {\n    static fromRowRange(x, baseAddress) {\n        const start = x.start.toSimpleRowAddress(baseAddress);\n        const end = x.end.toSimpleRowAddress(baseAddress);\n        if (start.sheet !== end.sheet) {\n            throw new Error(DIFFERENT_SHEETS_ERROR);\n        }\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\n    }\n    constructor(sheet, rowStart, rowEnd) {\n        super(simpleCellAddress(sheet, 0, rowStart), simpleCellAddress(sheet, Number.POSITIVE_INFINITY, rowEnd));\n    }\n    shouldBeRemoved() {\n        return this.height() <= 0;\n    }\n    shiftByColumns(_numberOfColumns) {\n        return;\n    }\n    expandByColumns(_numberOfColumns) {\n        return;\n    }\n    shifted(byCols, byRows) {\n        return new AbsoluteRowRange(this.sheet, this.start.row + byRows, this.end.row + byRows);\n    }\n    removeColumns(_columnStart, _columnEnd) {\n        return;\n    }\n    rangeWithSameWidth(startRow, numberOfRows) {\n        return new AbsoluteRowRange(this.sheet, startRow, startRow + numberOfRows - 1);\n    }\n    exceedsSheetSizeLimits(_maxColumns, maxRows) {\n        return this.end.row >= maxRows;\n    }\n    effectiveEndColumn(dependencyGraph) {\n        return dependencyGraph.getSheetWidth(this.sheet) - 1;\n    }\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $ = require('../internals/export');\nvar numberIsFinite = require('../internals/number-is-finite');\n\n// `Number.isFinite` method\n// https://tc39.github.io/ecma262/#sec-number.isfinite\n$({ target: 'Number', stat: true }, { isFinite: numberIsFinite });\n","var global = require('../internals/global');\n\nvar globalIsFinite = global.isFinite;\n\n// `Number.isFinite` method\n// https://tc39.github.io/ecma262/#sec-number.isfinite\nmodule.exports = Number.isFinite || function isFinite(it) {\n  return typeof it == 'number' && globalIsFinite(it);\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString, } from './addressRepresentationConverters';\nexport { CellAddress } from './CellAddress';\nexport { ParserWithCaching, } from './ParserWithCaching';\nexport { collectDependencies, } from './collectDependencies';\nexport { buildLexerConfig, } from './LexerConfig';\nexport { FormulaLexer, } from './FormulaParser';\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst, } from './Ast';\nexport { Unparser } from './Unparser';\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency, } from './RelativeDependency';\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from '../Cell';\nimport { CellAddress } from './CellAddress';\nimport { ColumnAddress } from './ColumnAddress';\nimport { additionalCharactersAllowedInQuotes } from './LexerConfig';\nimport { RowAddress } from './RowAddress';\nconst addressRegex = new RegExp(`^((([A-Za-z0-9_\\u00C0-\\u02AF]+)|'([A-Za-z0-9${additionalCharactersAllowedInQuotes}_\\u00C0-\\u02AF]+)')!)?(\\\\$?)([A-Za-z]+)(\\\\$?)([0-9]+)\\$`);\nconst columnRegex = new RegExp(`^((([A-Za-z0-9_\\u00C0-\\u02AF]+)|'([A-Za-z0-9${additionalCharactersAllowedInQuotes}_\\u00C0-\\u02AF]+)')!)?(\\\\$?)([A-Za-z]+)`);\nconst rowRegex = new RegExp(`^((([A-Za-z0-9_\\u00C0-\\u02AF]+)|'([A-Za-z0-9${additionalCharactersAllowedInQuotes}_\\u00C0-\\u02AF]+)')!)?(\\\\$?)([0-9]+)`);\n/**\n * Computes R0C0 representation of cell address based on it's string representation and base address.\n *\n * @param sheetMapping - mapping function needed to change name of a sheet to index\n * @param stringAddress - string representation of cell address, e.g. 'C64'\n * @param baseAddress - base address for R0C0 conversion\n * @returns object representation of address\n */\nexport const cellAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\n    const result = addressRegex.exec(stringAddress);\n    const col = columnLabelToIndex(result[6]);\n    const maybeSheetName = result[3] || result[4];\n    let sheet = null;\n    if (maybeSheetName) {\n        sheet = sheetMapping(maybeSheetName);\n        if (sheet === undefined) {\n            return undefined;\n        }\n    }\n    const row = Number(result[8]) - 1;\n    if (result[5] === '$' && result[7] === '$') {\n        return CellAddress.absolute(sheet, col, row);\n    }\n    else if (result[5] === '$') {\n        return CellAddress.absoluteCol(sheet, col, row - baseAddress.row);\n    }\n    else if (result[7] === '$') {\n        return CellAddress.absoluteRow(sheet, col - baseAddress.col, row);\n    }\n    else {\n        return CellAddress.relative(sheet, col - baseAddress.col, row - baseAddress.row);\n    }\n};\nexport const columnAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\n    const result = columnRegex.exec(stringAddress);\n    const sheet = extractSheetNumber(result, sheetMapping);\n    if (sheet === undefined) {\n        return undefined;\n    }\n    const col = columnLabelToIndex(result[6]);\n    if (result[5] === '$') {\n        return ColumnAddress.absolute(sheet, col);\n    }\n    else {\n        return ColumnAddress.relative(sheet, col - baseAddress.col);\n    }\n};\nexport const rowAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\n    const result = rowRegex.exec(stringAddress);\n    const sheet = extractSheetNumber(result, sheetMapping);\n    if (sheet === undefined) {\n        return undefined;\n    }\n    const row = Number(result[6]) - 1;\n    if (result[5] === '$') {\n        return RowAddress.absolute(sheet, row);\n    }\n    else {\n        return RowAddress.relative(sheet, row - baseAddress.row);\n    }\n};\n/**\n * Computes simple (absolute) address of a cell address based on its string representation.\n * If sheet name present in string representation but is not present in sheet mapping, returns undefined.\n * If sheet name is not present in string representation, returns {@param sheetContext} as sheet number\n *\n * @param sheetMapping - mapping function needed to change name of a sheet to index\n * @param stringAddress - string representation of cell address, e.g. 'C64'\n * @param sheetContext - sheet in context of which we should parse the address\n * @returns absolute representation of address, e.g. { sheet: 0, col: 1, row: 1 }\n */\nexport const simpleCellAddressFromString = (sheetMapping, stringAddress, sheetContext) => {\n    const result = addressRegex.exec(stringAddress);\n    const col = columnLabelToIndex(result[6]);\n    const maybeSheetName = result[3] || result[4];\n    let sheet;\n    if (maybeSheetName) {\n        sheet = sheetMapping(maybeSheetName);\n    }\n    else {\n        sheet = sheetContext;\n    }\n    if (sheet === undefined) {\n        return undefined;\n    }\n    const row = Number(result[8]) - 1;\n    return simpleCellAddress(sheet, col, row);\n};\n/**\n * Returns string representation of absolute address\n * If sheet index is not present in sheet mapping, returns undefined\n *\n * @param sheetIndexMapping - mapping function needed to change sheet index to sheet name\n * @param address - object representation of absolute address\n * @param sheetIndex - if is not equal with address sheet index, string representation will contain sheet name\n * */\nexport const simpleCellAddressToString = (sheetIndexMapping, address, sheetIndex) => {\n    const column = columnIndexToLabel(address.col);\n    const sheetName = sheetIndexMapping(address.sheet);\n    if (sheetName === undefined) {\n        return undefined;\n    }\n    if (sheetIndex !== address.sheet) {\n        return `${sheetName}!${column}${address.row + 1}`;\n    }\n    else {\n        return `${column}${address.row + 1}`;\n    }\n};\n/**\n* Convert column label to index\n*\n* @param columnStringRepresentation - column label (e.g. 'AAB')\n* @returns column index\n* */\nfunction columnLabelToIndex(columnStringRepresentation) {\n    if (columnStringRepresentation.length === 1) {\n        return columnStringRepresentation.toUpperCase().charCodeAt(0) - 65;\n    }\n    else {\n        return columnStringRepresentation.split('').reduce((currentColumn, nextLetter) => {\n            return currentColumn * 26 + (nextLetter.toUpperCase().charCodeAt(0) - 64);\n        }, 0) - 1;\n    }\n}\n/**\n * Converts column index to label\n *\n * @param column - address to convert\n * @returns string representation, e.g. 'AAB'\n */\nexport function columnIndexToLabel(column) {\n    let result = '';\n    while (column >= 0) {\n        result = String.fromCharCode((column % 26) + 97) + result;\n        column = Math.floor(column / 26) - 1;\n    }\n    return result.toUpperCase();\n}\nfunction extractSheetNumber(regexResult, sheetMapping) {\n    const maybeSheetName = regexResult[3] || regexResult[4];\n    let sheet = null;\n    if (maybeSheetName) {\n        sheet = sheetMapping(maybeSheetName);\n        if (sheet === undefined) {\n            return undefined;\n        }\n    }\n    return sheet;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });\n\n// `Array.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, simpleCellAddress, simpleColumnAddress, simpleRowAddress, } from '../Cell';\nimport { columnIndexToLabel } from './addressRepresentationConverters';\n/** Possible kinds of cell references */\nexport var CellReferenceType;\n(function (CellReferenceType) {\n    /** Cell reference with both row and column relative. */\n    CellReferenceType[\"CELL_REFERENCE_RELATIVE\"] = \"CELL_REFERENCE\";\n    /** Cell reference with both row and column absolute. */\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE\"] = \"CELL_REFERENCE_ABSOLUTE\";\n    /** Cell reference with absolute column and relative row. */\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_COL\"] = \"CELL_REFERENCE_ABSOLUTE_COL\";\n    /** Cell reference with relative column and absolute row. */\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_ROW\"] = \"CELL_REFERENCE_ABSOLUTE_ROW\";\n})(CellReferenceType || (CellReferenceType = {}));\nexport class CellAddress {\n    constructor(sheet, col, row, type) {\n        this.sheet = sheet;\n        this.col = col;\n        this.row = row;\n        this.type = type;\n    }\n    static relative(sheet, col, row) {\n        return new CellAddress(sheet, col, row, CellReferenceType.CELL_REFERENCE_RELATIVE);\n    }\n    static absolute(sheet, col, row) {\n        return new CellAddress(sheet, col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE);\n    }\n    static absoluteCol(sheet, col, row) {\n        return new CellAddress(sheet, col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\n    }\n    static absoluteRow(sheet, col, row) {\n        return new CellAddress(sheet, col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\n    }\n    /**\n     * Converts R0C0 representation of cell address to simple object representation.\n     *\n     * @param baseAddress - base address for R0C0 shifts\n     */\n    toSimpleCellAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE) {\n            return simpleCellAddress(sheet, this.col, this.row);\n        }\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\n            return simpleCellAddress(sheet, baseAddress.col + this.col, this.row);\n        }\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\n            return simpleCellAddress(sheet, this.col, baseAddress.row + this.row);\n        }\n        else {\n            return simpleCellAddress(sheet, baseAddress.col + this.col, baseAddress.row + this.row);\n        }\n    }\n    toSimpleColumnAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        let column = this.col;\n        if (this.isColumnRelative()) {\n            column += baseAddress.col;\n        }\n        return simpleColumnAddress(sheet, column);\n    }\n    toSimpleRowAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        let row = this.row;\n        if (this.isRowRelative()) {\n            row += baseAddress.row;\n        }\n        return simpleRowAddress(sheet, row);\n    }\n    isRowAbsolute() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\n    }\n    isColumnAbsolute() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\n    }\n    isColumnRelative() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\n    }\n    isRowRelative() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\n    }\n    isAbsolute() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE && this.sheet !== null);\n    }\n    shiftedByRows(numberOfRows) {\n        return new CellAddress(this.sheet, this.col, this.row + numberOfRows, this.type);\n    }\n    shiftedByColumns(numberOfColumns) {\n        return new CellAddress(this.sheet, this.col + numberOfColumns, this.row, this.type);\n    }\n    moved(toSheet, toRight, toBottom) {\n        const newSheet = this.sheet === null ? null : toSheet;\n        return new CellAddress(newSheet, this.col + toRight, this.row + toBottom, this.type);\n    }\n    withAbsoluteSheet(sheet) {\n        return new CellAddress(sheet, this.col, this.row, this.type);\n    }\n    shiftRelativeDimensions(toRight, toBottom) {\n        const col = this.isColumnAbsolute() ? this.col : this.col + toRight;\n        const row = this.isRowAbsolute() ? this.row : this.row + toBottom;\n        return new CellAddress(this.sheet, col, row, this.type);\n    }\n    shiftAbsoluteDimensions(toRight, toBottom) {\n        const col = this.isColumnRelative() ? this.col : this.col + toRight;\n        const row = this.isRowRelative() ? this.row : this.row + toBottom;\n        return new CellAddress(this.sheet, col, row, this.type);\n    }\n    hash(withSheet) {\n        const sheetPart = withSheet && this.sheet !== null ? `#${this.sheet}` : '';\n        switch (this.type) {\n            case CellReferenceType.CELL_REFERENCE_RELATIVE: {\n                return `${sheetPart}#${this.row}R${this.col}`;\n            }\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE: {\n                return `${sheetPart}#${this.row}A${this.col}`;\n            }\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL: {\n                return `${sheetPart}#${this.row}AC${this.col}`;\n            }\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW: {\n                return `${sheetPart}#${this.row}AR${this.col}`;\n            }\n        }\n    }\n    unparse(baseAddress) {\n        const simpleAddress = this.toSimpleCellAddress(baseAddress);\n        const column = columnIndexToLabel(simpleAddress.col);\n        const rowDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW ? '$' : '';\n        const colDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL ? '$' : '';\n        return `${colDollar}${column}${rowDollar}${simpleAddress.row + 1}`;\n    }\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\n        return this.row >= maxRows || this.col >= maxColumns;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, simpleColumnAddress } from '../Cell';\nimport { columnIndexToLabel } from './addressRepresentationConverters';\nexport var ReferenceType;\n(function (ReferenceType) {\n    ReferenceType[\"RELATIVE\"] = \"RELATIVE\";\n    ReferenceType[\"ABSOLUTE\"] = \"ABSOLUTE\";\n})(ReferenceType || (ReferenceType = {}));\nexport class ColumnAddress {\n    constructor(sheet, col, type) {\n        this.sheet = sheet;\n        this.col = col;\n        this.type = type;\n    }\n    static absolute(sheet, column) {\n        return new ColumnAddress(sheet, column, ReferenceType.ABSOLUTE);\n    }\n    static relative(sheet, column) {\n        return new ColumnAddress(sheet, column, ReferenceType.RELATIVE);\n    }\n    isColumnAbsolute() {\n        return (this.type === ReferenceType.ABSOLUTE);\n    }\n    isColumnRelative() {\n        return (this.type === ReferenceType.RELATIVE);\n    }\n    isAbsolute() {\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== null);\n    }\n    moved(toSheet, toRight, _toBottom) {\n        const newSheet = this.sheet === null ? null : toSheet;\n        return new ColumnAddress(newSheet, this.col + toRight, this.type);\n    }\n    shiftedByColumns(numberOfColumns) {\n        return new ColumnAddress(this.sheet, this.col + numberOfColumns, this.type);\n    }\n    toSimpleColumnAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        let column = this.col;\n        if (this.isColumnRelative()) {\n            column = baseAddress.col + this.col;\n        }\n        return simpleColumnAddress(sheet, column);\n    }\n    shiftRelativeDimensions(toRight, _toBottom) {\n        const col = this.isColumnRelative() ? this.col + toRight : this.col;\n        return new ColumnAddress(this.sheet, col, this.type);\n    }\n    shiftAbsoluteDimensions(toRight, _toBottom) {\n        const col = this.isColumnAbsolute() ? this.col + toRight : this.col;\n        return new ColumnAddress(this.sheet, col, this.type);\n    }\n    withAbsoluteSheet(sheet) {\n        return new ColumnAddress(sheet, this.col, this.type);\n    }\n    hash(withSheet) {\n        const sheetPart = withSheet && this.sheet !== null ? `#${this.sheet}` : '';\n        switch (this.type) {\n            case ReferenceType.RELATIVE: {\n                return `${sheetPart}#COLR${this.col}`;\n            }\n            case ReferenceType.ABSOLUTE: {\n                return `${sheetPart}#COLA${this.col}`;\n            }\n        }\n    }\n    unparse(baseAddress) {\n        const simpleAddress = this.toSimpleColumnAddress(baseAddress);\n        const column = columnIndexToLabel(simpleAddress.col);\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\n        return `${dollar}${column}`;\n    }\n    exceedsSheetSizeLimits(maxColumns) {\n        return this.col >= maxColumns;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { createToken, Lexer } from 'chevrotain';\n/* arithmetic */\n// abstract for + -\nexport const AdditionOp = createToken({\n    name: 'AdditionOp',\n    pattern: Lexer.NA,\n});\nexport const PlusOp = createToken({ name: 'PlusOp', pattern: /\\+/, categories: AdditionOp });\nexport const MinusOp = createToken({ name: 'MinusOp', pattern: /-/, categories: AdditionOp });\n// abstract for * /\nexport const MultiplicationOp = createToken({\n    name: 'MultiplicationOp',\n    pattern: Lexer.NA,\n});\nexport const TimesOp = createToken({ name: 'TimesOp', pattern: /\\*/, categories: MultiplicationOp });\nexport const DivOp = createToken({ name: 'DivOp', pattern: /\\//, categories: MultiplicationOp });\nexport const PowerOp = createToken({ name: 'PowerOp', pattern: /\\^/ });\nexport const PercentOp = createToken({ name: 'PercentOp', pattern: /%/ });\nexport const BooleanOp = createToken({\n    name: 'BooleanOp',\n    pattern: Lexer.NA,\n});\nexport const EqualsOp = createToken({ name: 'EqualsOp', pattern: /=/, categories: BooleanOp });\nexport const NotEqualOp = createToken({ name: 'NotEqualOp', pattern: /<>/, categories: BooleanOp });\nexport const GreaterThanOp = createToken({ name: 'GreaterThanOp', pattern: />/, categories: BooleanOp });\nexport const LessThanOp = createToken({ name: 'LessThanOp', pattern: /</, categories: BooleanOp });\nexport const GreaterThanOrEqualOp = createToken({ name: 'GreaterThanOrEqualOp', pattern: />=/, categories: BooleanOp });\nexport const LessThanOrEqualOp = createToken({ name: 'LessThanOrEqualOp', pattern: /<=/, categories: BooleanOp });\nexport const ConcatenateOp = createToken({ name: 'ConcatenateOp', pattern: /&/ });\n/* addresses */\nexport const additionalCharactersAllowedInQuotes = ' '; // It's included in regexps, so escape characters which have special regexp semantics\nexport const sheetNameRegexp = `([A-Za-z0-9_\\u00C0-\\u02AF]+|'[A-Za-z0-9${additionalCharactersAllowedInQuotes}_\\u00C0-\\u02AF]+')!`;\nexport const CellReference = createToken({\n    name: 'CellReference',\n    pattern: new RegExp(`\\(${sheetNameRegexp}\\)?\\\\$?[A-Za-z]+\\\\$?[0-9]+`),\n});\nexport const ColumnRange = createToken({\n    name: 'ColumnRange',\n    pattern: new RegExp(`\\(${sheetNameRegexp}\\)?\\\\$?[A-Za-z]+:\\(${sheetNameRegexp}\\)?\\\\$?[A-Za-z]+`),\n});\nexport const RowRange = createToken({\n    name: 'RowRange',\n    pattern: new RegExp(`\\(${sheetNameRegexp}\\)?\\\\$?[0-9]+:\\(${sheetNameRegexp}\\)?\\\\$?[0-9]+`),\n});\nexport const RangeSeparator = createToken({ name: 'RangeSeparator', pattern: /:/ });\n/* parenthesis */\nexport const LParen = createToken({ name: 'LParen', pattern: /\\(/ });\nexport const RParen = createToken({ name: 'RParen', pattern: /\\)/ });\n/* prcoedures */\nexport const ProcedureName = createToken({ name: 'ProcedureName', pattern: /(\\.?[0-9A-Za-z\\u00C0-\\u02AF]+)+\\(/ });\n/* named expressions */\nexport const NamedExpression = createToken({ name: 'NamedExpression', pattern: /[A-Za-z\\u00C0-\\u02AF_][0-9\\.A-Za-z_\\u00C0-\\u02AF_]+/ });\n/* string literal */\nexport const StringLiteral = createToken({ name: 'StringLiteral', pattern: /\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/ });\n/* error literal */\nexport const ErrorLiteral = createToken({ name: 'ErrorLiteral', pattern: /#[A-Za-z0-9\\/]+[?!]?/ });\n/* skipping whitespaces */\nexport const WhiteSpace = createToken({\n    name: 'WhiteSpace',\n    pattern: /[ \\t\\n\\r]+/,\n});\nexport const buildLexerConfig = (config) => {\n    const offsetProcedureNameLiteral = config.translationPackage.getFunctionTranslation('OFFSET');\n    const errorMapping = config.errorMapping;\n    const functionMapping = config.translationPackage.buildFunctionMapping();\n    /* configurable tokens */\n    const ArgSeparator = createToken({ name: 'ArgSeparator', pattern: config.functionArgSeparator });\n    const NumberLiteral = createToken({ name: 'NumberLiteral', pattern: new RegExp(`[\\\\d]*[${config.decimalSeparator}]?[\\\\d]+`) });\n    const OffsetProcedureName = createToken({ name: 'OffsetProcedureName', pattern: new RegExp(offsetProcedureNameLiteral, 'i') });\n    /* order is important, first pattern is used */\n    const allTokens = [\n        WhiteSpace,\n        PlusOp,\n        MinusOp,\n        TimesOp,\n        DivOp,\n        PowerOp,\n        EqualsOp,\n        NotEqualOp,\n        PercentOp,\n        GreaterThanOrEqualOp,\n        LessThanOrEqualOp,\n        GreaterThanOp,\n        LessThanOp,\n        LParen,\n        RParen,\n        OffsetProcedureName,\n        ProcedureName,\n        RangeSeparator,\n        ArgSeparator,\n        ColumnRange,\n        RowRange,\n        NumberLiteral,\n        StringLiteral,\n        ErrorLiteral,\n        ConcatenateOp,\n        BooleanOp,\n        AdditionOp,\n        MultiplicationOp,\n        CellReference,\n        NamedExpression,\n    ];\n    return {\n        ArgSeparator,\n        NumberLiteral,\n        OffsetProcedureName,\n        allTokens,\n        errorMapping,\n        functionMapping,\n        decimalSeparator: config.decimalSeparator,\n        maxColumns: config.maxColumns,\n        maxRows: config.maxRows\n    };\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__154__;","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, simpleRowAddress } from '../Cell';\nimport { ReferenceType } from './ColumnAddress';\nexport class RowAddress {\n    constructor(sheet, row, type) {\n        this.sheet = sheet;\n        this.row = row;\n        this.type = type;\n    }\n    static absolute(sheet, row) {\n        return new RowAddress(sheet, row, ReferenceType.ABSOLUTE);\n    }\n    static relative(sheet, row) {\n        return new RowAddress(sheet, row, ReferenceType.RELATIVE);\n    }\n    isRowAbsolute() {\n        return (this.type === ReferenceType.ABSOLUTE);\n    }\n    isRowRelative() {\n        return (this.type === ReferenceType.RELATIVE);\n    }\n    isAbsolute() {\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== null);\n    }\n    moved(toSheet, toRight, toBottom) {\n        const newSheet = this.sheet === null ? null : toSheet;\n        return new RowAddress(newSheet, this.row + toBottom, this.type);\n    }\n    shiftedByRows(numberOfColumns) {\n        return new RowAddress(this.sheet, this.row + numberOfColumns, this.type);\n    }\n    toSimpleRowAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        let row = this.row;\n        if (this.isRowRelative()) {\n            row = baseAddress.row + this.row;\n        }\n        return simpleRowAddress(sheet, row);\n    }\n    shiftRelativeDimensions(toRight, toBottom) {\n        const row = this.isRowRelative() ? this.row + toBottom : this.row;\n        return new RowAddress(this.sheet, row, this.type);\n    }\n    shiftAbsoluteDimensions(toRight, toBottom) {\n        const row = this.isRowAbsolute() ? this.row + toBottom : this.row;\n        return new RowAddress(this.sheet, row, this.type);\n    }\n    withAbsoluteSheet(sheet) {\n        return new RowAddress(sheet, this.row, this.type);\n    }\n    hash(withSheet) {\n        const sheetPart = withSheet && this.sheet !== null ? `#${this.sheet}` : '';\n        switch (this.type) {\n            case ReferenceType.RELATIVE: {\n                return `${sheetPart}#ROWR${this.row}`;\n            }\n            case ReferenceType.ABSOLUTE: {\n                return `${sheetPart}#ROWA${this.row}`;\n            }\n        }\n    }\n    unparse(baseAddress) {\n        const simpleAddress = this.toSimpleRowAddress(baseAddress);\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\n        return `${dollar}${simpleAddress.row + 1}`;\n    }\n    exceedsSheetSizeLimits(maxRows) {\n        return this.row >= maxRows;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { tokenMatcher } from 'chevrotain';\nimport { ErrorType } from '../Cell';\nimport { AstNodeType, buildParsingErrorAst } from './';\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\nimport { imageWithWhitespace, ParsingErrorType, RangeSheetReferenceType } from './Ast';\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\nimport { Cache } from './Cache';\nimport { FormulaLexer, FormulaParser } from './FormulaParser';\nimport { buildLexerConfig, CellReference, ColumnRange, ProcedureName, RowRange, WhiteSpace, } from './LexerConfig';\nimport { formatNumber } from './Unparser';\n/**\n * Parses formula using caching if feasible.\n */\nexport class ParserWithCaching {\n    constructor(config, functionRegistry, sheetMapping) {\n        this.config = config;\n        this.functionRegistry = functionRegistry;\n        this.sheetMapping = sheetMapping;\n        this.statsCacheUsed = 0;\n        this.lexerConfig = buildLexerConfig(config);\n        this.lexer = new FormulaLexer(this.lexerConfig);\n        this.formulaParser = new FormulaParser(this.lexerConfig, this.sheetMapping);\n        this.cache = new Cache(this.functionRegistry);\n    }\n    /**\n     * Parses a formula.\n     *\n     * @param text - formula to parse\n     * @param formulaAddress - address with regard to which formula should be parsed. Impacts computed addresses in R0C0 format.\n     */\n    parse(text, formulaAddress) {\n        const lexerResult = this.lexer.tokenizeFormula(text);\n        if (lexerResult.errors.length > 0) {\n            const errors = lexerResult.errors.map((e) => ({\n                type: ParsingErrorType.LexingError,\n                message: e.message,\n            }));\n            return { ast: buildParsingErrorAst(), errors, hasVolatileFunction: false, hasStructuralChangeFunction: false, dependencies: [] };\n        }\n        const hash = this.computeHashFromTokens(lexerResult.tokens, formulaAddress);\n        let cacheResult = this.cache.get(hash);\n        if (cacheResult) {\n            ++this.statsCacheUsed;\n        }\n        else {\n            const processedTokens = bindWhitespacesToTokens(lexerResult.tokens);\n            const parsingResult = this.formulaParser.parseFromTokens(processedTokens, formulaAddress);\n            if (parsingResult.errors.length > 0) {\n                return Object.assign(Object.assign({}, parsingResult), { hasVolatileFunction: false, hasStructuralChangeFunction: false, dependencies: [] });\n            }\n            else {\n                cacheResult = this.cache.set(hash, parsingResult.ast);\n            }\n        }\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\n        return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\n    }\n    fetchCachedResultForAst(ast) {\n        const hash = this.computeHashFromAst(ast);\n        return this.fetchCachedResult(hash);\n    }\n    fetchCachedResult(hash) {\n        const cacheResult = this.cache.get(hash);\n        if (cacheResult === null) {\n            throw new Error('There is no AST with such key in the cache');\n        }\n        else {\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\n            return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\n        }\n    }\n    computeHashFromTokens(tokens, baseAddress) {\n        var _a;\n        let hash = '';\n        let idx = 0;\n        while (idx < tokens.length) {\n            const token = tokens[idx];\n            if (tokenMatcher(token, CellReference)) {\n                const cellAddress = cellAddressFromString(this.sheetMapping, token.image, baseAddress);\n                if (cellAddress === undefined) {\n                    hash = hash.concat(token.image);\n                }\n                else {\n                    hash = hash.concat(cellAddress.hash(true));\n                }\n            }\n            else if (tokenMatcher(token, ProcedureName)) {\n                const procedureName = token.image.toUpperCase().slice(0, -1);\n                const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\n                hash = hash.concat(canonicalProcedureName, '(');\n            }\n            else if (tokenMatcher(token, ColumnRange)) {\n                const [start, end] = token.image.split(':');\n                const startAddress = columnAddressFromString(this.sheetMapping, start, baseAddress);\n                const endAddress = columnAddressFromString(this.sheetMapping, end, baseAddress);\n                if (startAddress === undefined || endAddress === undefined) {\n                    hash = hash.concat('!REF');\n                }\n                else {\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\n                }\n            }\n            else if (tokenMatcher(token, RowRange)) {\n                const [start, end] = token.image.split(':');\n                const startAddress = rowAddressFromString(this.sheetMapping, start, baseAddress);\n                const endAddress = rowAddressFromString(this.sheetMapping, end, baseAddress);\n                if (startAddress === undefined || endAddress === undefined) {\n                    hash = hash.concat('!REF');\n                }\n                else {\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\n                }\n            }\n            else {\n                hash = hash.concat(token.image);\n            }\n            idx++;\n        }\n        return hash;\n    }\n    rememberNewAst(ast) {\n        const hash = this.computeHashFromAst(ast);\n        return this.cache.maybeSetAndThenGet(hash, ast);\n    }\n    computeHashFromAst(ast) {\n        return '=' + this.computeHashOfAstNode(ast);\n    }\n    destroy() {\n        this.cache.destroy();\n    }\n    computeHashOfAstNode(ast) {\n        switch (ast.type) {\n            case AstNodeType.EMPTY: {\n                return ast.leadingWhitespace || '';\n            }\n            case AstNodeType.NUMBER: {\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\n            }\n            case AstNodeType.STRING: {\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\n            }\n            case AstNodeType.NAMED_EXPRESSION: {\n                return imageWithWhitespace(ast.expressionName, ast.leadingWhitespace);\n            }\n            case AstNodeType.FUNCTION_CALL: {\n                const args = ast.args.map((arg) => this.computeHashOfAstNode(arg)).join(this.config.functionArgSeparator);\n                const rightPart = ast.procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\n            }\n            case AstNodeType.CELL_REFERENCE: {\n                return imageWithWhitespace(ast.reference.hash(true), ast.leadingWhitespace);\n            }\n            case AstNodeType.COLUMN_RANGE:\n            case AstNodeType.ROW_RANGE:\n            case AstNodeType.CELL_RANGE: {\n                const start = ast.start.hash(ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE);\n                const end = ast.end.hash(ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE);\n                return imageWithWhitespace(start + ':' + end, ast.leadingWhitespace);\n            }\n            case AstNodeType.MINUS_UNARY_OP: {\n                return imageWithWhitespace('-' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\n            }\n            case AstNodeType.PLUS_UNARY_OP: {\n                return imageWithWhitespace('+' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\n            }\n            case AstNodeType.PERCENT_OP: {\n                return this.computeHashOfAstNode(ast.value) + imageWithWhitespace('%', ast.leadingWhitespace);\n            }\n            case AstNodeType.ERROR: {\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\n                return imageWithWhitespace(image, ast.leadingWhitespace);\n            }\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\n            }\n            case AstNodeType.PARENTHESIS: {\n                const expression = this.computeHashOfAstNode(ast.expression);\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\n            }\n            default: {\n                return this.computeHashOfAstNode(ast.left) + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + this.computeHashOfAstNode(ast.right);\n            }\n        }\n    }\n}\nexport function bindWhitespacesToTokens(tokens) {\n    const processedTokens = [];\n    const first = tokens[0];\n    if (!tokenMatcher(first, WhiteSpace)) {\n        processedTokens.push(first);\n    }\n    for (let i = 1; i < tokens.length; ++i) {\n        const current = tokens[i];\n        if (tokenMatcher(current, WhiteSpace)) {\n            continue;\n        }\n        const previous = tokens[i - 1];\n        if (tokenMatcher(previous, WhiteSpace)) {\n            current.leadingWhitespace = previous;\n        }\n        processedTokens.push(current);\n    }\n    return processedTokens;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","var $ = require('../internals/export');\nvar assign = require('../internals/object-assign');\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\n$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {\n  assign: assign\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\nvar nativeAssign = Object.assign;\nvar defineProperty = Object.defineProperty;\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\nmodule.exports = !nativeAssign || fails(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : nativeAssign;\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError } from '../Cell';\nexport const parsingError = (type, message) => ({\n    type, message\n});\nexport var ParsingErrorType;\n(function (ParsingErrorType) {\n    ParsingErrorType[\"LexingError\"] = \"LexingError\";\n    ParsingErrorType[\"ParserError\"] = \"ParsingError\";\n    ParsingErrorType[\"StaticOffsetError\"] = \"StaticOffsetError\";\n    ParsingErrorType[\"StaticOffsetOutOfRangeError\"] = \"StaticOffsetOutOfRangeError\";\n    ParsingErrorType[\"RangeOffsetNotAllowed\"] = \"RangeOffsetNotAllowed\";\n})(ParsingErrorType || (ParsingErrorType = {}));\nexport var AstNodeType;\n(function (AstNodeType) {\n    AstNodeType[\"EMPTY\"] = \"EMPTY\";\n    AstNodeType[\"NUMBER\"] = \"NUMBER\";\n    AstNodeType[\"STRING\"] = \"STRING\";\n    AstNodeType[\"MINUS_UNARY_OP\"] = \"MINUS_UNARY_OP\";\n    AstNodeType[\"PLUS_UNARY_OP\"] = \"PLUS_UNARY_OP\";\n    AstNodeType[\"PERCENT_OP\"] = \"PERCENT_OP\";\n    AstNodeType[\"CONCATENATE_OP\"] = \"CONCATENATE_OP\";\n    AstNodeType[\"EQUALS_OP\"] = \"EQUALS_OP\";\n    AstNodeType[\"NOT_EQUAL_OP\"] = \"NOT_EQUAL_OP\";\n    AstNodeType[\"GREATER_THAN_OP\"] = \"GREATER_THAN_OP\";\n    AstNodeType[\"LESS_THAN_OP\"] = \"LESS_THAN_OP\";\n    AstNodeType[\"GREATER_THAN_OR_EQUAL_OP\"] = \"GREATER_THAN_OR_EQUAL_OP\";\n    AstNodeType[\"LESS_THAN_OR_EQUAL_OP\"] = \"LESS_THAN_OR_EQUAL_OP\";\n    AstNodeType[\"PLUS_OP\"] = \"PLUS_OP\";\n    AstNodeType[\"MINUS_OP\"] = \"MINUS_OP\";\n    AstNodeType[\"TIMES_OP\"] = \"TIMES_OP\";\n    AstNodeType[\"DIV_OP\"] = \"DIV_OP\";\n    AstNodeType[\"POWER_OP\"] = \"POWER_OP\";\n    AstNodeType[\"FUNCTION_CALL\"] = \"FUNCTION_CALL\";\n    AstNodeType[\"NAMED_EXPRESSION\"] = \"NAMED_EXPRESSION\";\n    AstNodeType[\"PARENTHESIS\"] = \"PARENTHESES\";\n    AstNodeType[\"CELL_REFERENCE\"] = \"CELL_REFERENCE\";\n    AstNodeType[\"CELL_RANGE\"] = \"CELL_RANGE\";\n    AstNodeType[\"COLUMN_RANGE\"] = \"COLUMN_RANGE\";\n    AstNodeType[\"ROW_RANGE\"] = \"ROW_RANGE\";\n    AstNodeType[\"ERROR\"] = \"ERROR\";\n    AstNodeType[\"ERROR_WITH_RAW_INPUT\"] = \"ERROR_WITH_RAW_INPUT\";\n})(AstNodeType || (AstNodeType = {}));\nexport var RangeSheetReferenceType;\n(function (RangeSheetReferenceType) {\n    RangeSheetReferenceType[RangeSheetReferenceType[\"RELATIVE\"] = 0] = \"RELATIVE\";\n    RangeSheetReferenceType[RangeSheetReferenceType[\"START_ABSOLUTE\"] = 1] = \"START_ABSOLUTE\";\n    RangeSheetReferenceType[RangeSheetReferenceType[\"BOTH_ABSOLUTE\"] = 2] = \"BOTH_ABSOLUTE\";\n})(RangeSheetReferenceType || (RangeSheetReferenceType = {}));\nexport const buildEmptyArgAst = (leadingWhitespace) => ({\n    type: AstNodeType.EMPTY,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildNumberAst = (value, leadingWhitespace) => ({\n    type: AstNodeType.NUMBER,\n    value: value,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildStringAst = (token) => {\n    var _a;\n    return ({\n        type: AstNodeType.STRING,\n        value: token.image.slice(1, -1),\n        leadingWhitespace: (_a = token.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image,\n    });\n};\nexport const buildCellReferenceAst = (reference, leadingWhitespace) => ({\n    type: AstNodeType.CELL_REFERENCE,\n    reference,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildCellRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\n    assertRangeConsistency(start, end, sheetReferenceType);\n    return {\n        type: AstNodeType.CELL_RANGE,\n        start,\n        end,\n        sheetReferenceType,\n        leadingWhitespace\n    };\n};\nexport const buildColumnRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\n    assertRangeConsistency(start, end, sheetReferenceType);\n    return {\n        type: AstNodeType.COLUMN_RANGE,\n        start,\n        end,\n        sheetReferenceType,\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n    };\n};\nexport const buildRowRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\n    assertRangeConsistency(start, end, sheetReferenceType);\n    return {\n        type: AstNodeType.ROW_RANGE,\n        start,\n        end,\n        sheetReferenceType,\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n    };\n};\nexport const buildConcatenateOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.CONCATENATE_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildEqualsOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.EQUALS_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildNotEqualOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.NOT_EQUAL_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildGreaterThanOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.GREATER_THAN_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildLessThanOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.LESS_THAN_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildGreaterThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.GREATER_THAN_OR_EQUAL_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildLessThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.LESS_THAN_OR_EQUAL_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildPlusOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.PLUS_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildMinusOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.MINUS_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildTimesOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.TIMES_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildDivOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.DIV_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildPowerOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.POWER_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildMinusUnaryOpAst = (value, leadingWhitespace) => ({\n    type: AstNodeType.MINUS_UNARY_OP,\n    value,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildPlusUnaryOpAst = (value, leadingWhitespace) => ({\n    type: AstNodeType.PLUS_UNARY_OP,\n    value,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildPercentOpAst = (value, leadingWhitespace) => ({\n    type: AstNodeType.PERCENT_OP,\n    value,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildProcedureAst = (procedureName, args, leadingWhitespace, internalWhitespace) => ({\n    type: AstNodeType.FUNCTION_CALL,\n    procedureName,\n    args,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\n});\nexport const buildNamedExpressionAst = (expressionName, leadingWhitespace) => ({\n    type: AstNodeType.NAMED_EXPRESSION,\n    expressionName,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildParenthesisAst = (expression, leadingWhitespace, internalWhitespace) => ({\n    type: AstNodeType.PARENTHESIS,\n    expression,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\n});\nexport const buildCellErrorAst = (error, leadingWhitespace) => ({\n    type: AstNodeType.ERROR,\n    error,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildErrorWithRawInputAst = (rawInput, error, leadingWhitespace) => ({\n    type: AstNodeType.ERROR_WITH_RAW_INPUT,\n    error,\n    rawInput,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildParsingErrorAst = () => ({\n    type: AstNodeType.ERROR,\n    error: CellError.parsingError()\n});\nfunction assertRangeConsistency(start, end, sheetReferenceType) {\n    if ((start.sheet !== null && end.sheet === null) || (start.sheet === null && end.sheet !== null)) {\n        throw new Error('Start address inconsistent with end address');\n    }\n    if ((start.sheet === null && sheetReferenceType !== RangeSheetReferenceType.RELATIVE)\n        || (start.sheet !== null && sheetReferenceType === RangeSheetReferenceType.RELATIVE)) {\n        throw new Error('Sheet address inconsistent with sheet reference type');\n    }\n}\nexport function imageWithWhitespace(image, leadingWhitespace) {\n    return (leadingWhitespace !== null && leadingWhitespace !== void 0 ? leadingWhitespace : '') + image;\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AstNodeType } from './Ast';\nexport const binaryOpTokenMap = {\n    [AstNodeType.PLUS_OP]: '+',\n    [AstNodeType.MINUS_OP]: '-',\n    [AstNodeType.TIMES_OP]: '*',\n    [AstNodeType.DIV_OP]: '/',\n    [AstNodeType.CONCATENATE_OP]: '&',\n    [AstNodeType.POWER_OP]: '^',\n    [AstNodeType.EQUALS_OP]: '=',\n    [AstNodeType.NOT_EQUAL_OP]: '<>',\n    [AstNodeType.GREATER_THAN_OP]: '>',\n    [AstNodeType.GREATER_THAN_OR_EQUAL_OP]: '>=',\n    [AstNodeType.LESS_THAN_OP]: '<',\n    [AstNodeType.LESS_THAN_OR_EQUAL_OP]: '<=',\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AstNodeType, collectDependencies } from './';\nconst buildCacheEntry = (ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction) => ({ ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction });\nexport class Cache {\n    constructor(functionRegistry) {\n        this.functionRegistry = functionRegistry;\n        this.cache = new Map();\n    }\n    set(hash, ast) {\n        const astRelativeDependencies = collectDependencies(ast, this.functionRegistry);\n        const cacheEntry = buildCacheEntry(ast, astRelativeDependencies, doesContainFunctions(ast, this.functionRegistry.isFunctionVolatile), doesContainFunctions(ast, this.functionRegistry.isFunctionDependentOnSheetStructureChange));\n        this.cache.set(hash, cacheEntry);\n        return cacheEntry;\n    }\n    get(hash) {\n        return this.cache.get(hash) || null;\n    }\n    maybeSetAndThenGet(hash, ast) {\n        const entryFromCache = this.cache.get(hash);\n        if (entryFromCache) {\n            return entryFromCache.ast;\n        }\n        else {\n            this.set(hash, ast);\n            return ast;\n        }\n    }\n    destroy() {\n        this.cache.clear();\n    }\n}\nexport const doesContainFunctions = (ast, functionCriterion) => {\n    switch (ast.type) {\n        case AstNodeType.EMPTY:\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n        case AstNodeType.ERROR:\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\n        case AstNodeType.CELL_REFERENCE:\n        case AstNodeType.CELL_RANGE:\n        case AstNodeType.COLUMN_RANGE:\n        case AstNodeType.ROW_RANGE:\n        case AstNodeType.NAMED_EXPRESSION:\n            return false;\n        case AstNodeType.PERCENT_OP:\n        case AstNodeType.PLUS_UNARY_OP:\n        case AstNodeType.MINUS_UNARY_OP: {\n            return doesContainFunctions(ast.value, functionCriterion);\n        }\n        case AstNodeType.CONCATENATE_OP:\n        case AstNodeType.EQUALS_OP:\n        case AstNodeType.NOT_EQUAL_OP:\n        case AstNodeType.LESS_THAN_OP:\n        case AstNodeType.GREATER_THAN_OP:\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n        case AstNodeType.MINUS_OP:\n        case AstNodeType.PLUS_OP:\n        case AstNodeType.TIMES_OP:\n        case AstNodeType.DIV_OP:\n        case AstNodeType.POWER_OP:\n            return doesContainFunctions(ast.left, functionCriterion) || doesContainFunctions(ast.right, functionCriterion);\n        case AstNodeType.PARENTHESIS:\n            return doesContainFunctions(ast.expression, functionCriterion);\n        case AstNodeType.FUNCTION_CALL: {\n            if (functionCriterion(ast.procedureName)) {\n                return true;\n            }\n            return ast.args.some((arg) => doesContainFunctions(arg, functionCriterion));\n        }\n    }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.github.io/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { EmbeddedActionsParser, EMPTY_ALT, Lexer, tokenMatcher } from 'chevrotain';\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\nimport { AstNodeType, buildCellErrorAst, buildCellRangeAst, buildCellReferenceAst, buildColumnRangeAst, buildConcatenateOpAst, buildDivOpAst, buildEmptyArgAst, buildEqualsOpAst, buildErrorWithRawInputAst, buildGreaterThanOpAst, buildGreaterThanOrEqualOpAst, buildLessThanOpAst, buildLessThanOrEqualOpAst, buildMinusOpAst, buildMinusUnaryOpAst, buildNamedExpressionAst, buildNotEqualOpAst, buildNumberAst, buildParenthesisAst, buildParsingErrorAst, buildPercentOpAst, buildPlusOpAst, buildPlusUnaryOpAst, buildPowerOpAst, buildProcedureAst, buildRowRangeAst, buildStringAst, buildTimesOpAst, parsingError, ParsingErrorType, RangeSheetReferenceType, } from './Ast';\nimport { CellAddress, CellReferenceType } from './CellAddress';\nimport { AdditionOp, BooleanOp, CellReference, ColumnRange, ConcatenateOp, DivOp, EqualsOp, ErrorLiteral, GreaterThanOp, GreaterThanOrEqualOp, LessThanOp, LessThanOrEqualOp, LParen, MinusOp, MultiplicationOp, NamedExpression, NotEqualOp, PercentOp, PlusOp, PowerOp, ProcedureName, RangeSeparator, RowRange, RParen, StringLiteral, TimesOp, WhiteSpace, } from './LexerConfig';\n/**\n * LL(k) formula parser described using Chevrotain DSL\n *\n * It is equivalent to the grammar below:\n *\n * F -> '=' E <br/>\n * B -> K < B | K >= B ... | K <br/>\n * K -> E & K | E <br/>\n * E -> M + E | M - E | M <br/>\n * M -> W * M | W / M | W <br/>\n * W -> C * W | C <br/>\n * C -> N | R | O | A | P | num <br/>\n * N -> '(' E ')' <br/>\n * R -> A:OFFSET(..) | A:A <br/>\n * O -> OFFSET(..) | OFFSET(..):A | OFFSET(..):OFFSET(..) <br/>\n * A -> A1 | $A1 | A$1 | $A$1 <br/>\n * P -> SUM(..) <br/>\n */\nexport class FormulaParser extends EmbeddedActionsParser {\n    constructor(lexerConfig, sheetMapping) {\n        super(lexerConfig.allTokens, { outputCst: false, maxLookahead: 7 });\n        /**\n         * Entry rule\n         */\n        this.formula = this.RULE('formula', () => {\n            this.CONSUME(EqualsOp);\n            return this.SUBRULE(this.booleanExpression);\n        });\n        /**\n         * Rule for boolean expression (e.g. 1 <= A1)\n         */\n        this.booleanExpression = this.RULE('booleanExpression', () => {\n            let lhs = this.SUBRULE(this.concatenateExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(BooleanOp);\n                const rhs = this.SUBRULE2(this.concatenateExpression);\n                if (tokenMatcher(op, EqualsOp)) {\n                    lhs = buildEqualsOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, NotEqualOp)) {\n                    lhs = buildNotEqualOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, GreaterThanOp)) {\n                    lhs = buildGreaterThanOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, LessThanOp)) {\n                    lhs = buildLessThanOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, GreaterThanOrEqualOp)) {\n                    lhs = buildGreaterThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, LessThanOrEqualOp)) {\n                    lhs = buildLessThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else {\n                    this.ACTION(() => {\n                        throw Error('Operator not supported');\n                    });\n                }\n            });\n            return lhs;\n        });\n        this.booleanExpressionOrEmpty = this.RULE('booleanExpressionOrEmpty', () => {\n            return this.OR([\n                { ALT: () => this.SUBRULE(this.booleanExpression) },\n                { ALT: EMPTY_ALT(buildEmptyArgAst()) }\n            ]);\n        });\n        /**\n         * Rule for concatenation operator expression (e.g. \"=\" & A1)\n         */\n        this.concatenateExpression = this.RULE('concatenateExpression', () => {\n            let lhs = this.SUBRULE(this.additionExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(ConcatenateOp);\n                const rhs = this.SUBRULE2(this.additionExpression);\n                lhs = buildConcatenateOpAst(lhs, rhs, op.leadingWhitespace);\n            });\n            return lhs;\n        });\n        /**\n         * Rule for addition category operators (e.g. 1 + A1, 1 - A1)\n         */\n        this.additionExpression = this.RULE('additionExpression', () => {\n            let lhs = this.SUBRULE(this.multiplicationExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(AdditionOp);\n                const rhs = this.SUBRULE2(this.multiplicationExpression);\n                if (tokenMatcher(op, PlusOp)) {\n                    lhs = buildPlusOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, MinusOp)) {\n                    lhs = buildMinusOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else {\n                    this.ACTION(() => {\n                        throw Error('Operator not supported');\n                    });\n                }\n            });\n            return lhs;\n        });\n        /**\n         * Rule for multiplication category operators (e.g. 1 * A1, 1 / A1)\n         */\n        this.multiplicationExpression = this.RULE('multiplicationExpression', () => {\n            let lhs = this.SUBRULE(this.powerExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(MultiplicationOp);\n                const rhs = this.SUBRULE2(this.powerExpression);\n                if (tokenMatcher(op, TimesOp)) {\n                    lhs = buildTimesOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, DivOp)) {\n                    lhs = buildDivOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else {\n                    this.ACTION(() => {\n                        throw Error('Operator not supported');\n                    });\n                }\n            });\n            return lhs;\n        });\n        /**\n         * Rule for power expression\n         */\n        this.powerExpression = this.RULE('powerExpression', () => {\n            let lhs = this.SUBRULE(this.atomicExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(PowerOp);\n                const rhs = this.SUBRULE2(this.atomicExpression);\n                if (tokenMatcher(op, PowerOp)) {\n                    lhs = buildPowerOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else {\n                    this.ACTION(() => {\n                        throw Error('Operator not supported');\n                    });\n                }\n            });\n            return lhs;\n        });\n        /**\n         * Rule for atomic expressions, which is positive atomic expression or negation of it\n         */\n        this.atomicExpression = this.RULE('atomicExpression', () => {\n            return this.OR([\n                {\n                    ALT: () => {\n                        const op = this.CONSUME(AdditionOp);\n                        const value = this.SUBRULE(this.atomicExpression);\n                        if (tokenMatcher(op, PlusOp)) {\n                            return buildPlusUnaryOpAst(value, op.leadingWhitespace);\n                        }\n                        else if (tokenMatcher(op, MinusOp)) {\n                            return buildMinusUnaryOpAst(value, op.leadingWhitespace);\n                        }\n                        else {\n                            this.customParsingError = parsingError(ParsingErrorType.ParserError, 'Mismatched token type');\n                            return this.customParsingError;\n                        }\n                    },\n                },\n                {\n                    ALT: () => this.SUBRULE2(this.rightUnaryOpAtomicExpression),\n                },\n            ]);\n        });\n        this.rightUnaryOpAtomicExpression = this.RULE('rightUnaryOpAtomicExpression', () => {\n            const positiveAtomicExpression = this.SUBRULE(this.positiveAtomicExpression);\n            const percentage = this.OPTION(() => {\n                return this.CONSUME(PercentOp);\n            });\n            if (percentage) {\n                return buildPercentOpAst(positiveAtomicExpression, percentage.leadingWhitespace);\n            }\n            return positiveAtomicExpression;\n        });\n        /**\n         * Rule for positive atomic expressions\n         */\n        this.positiveAtomicExpression = this.RULE('positiveAtomicExpression', () => {\n            return this.OR(this.atomicExpCache || (this.atomicExpCache = [\n                {\n                    ALT: () => this.SUBRULE(this.parenthesisExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.cellRangeExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.columnRangeExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.rowRangeExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.offsetExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.cellReference),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.procedureExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.namedExpressionExpression),\n                },\n                {\n                    ALT: () => {\n                        const number = this.CONSUME(this.lexerConfig.NumberLiteral);\n                        return buildNumberAst(this.numericStringToNumber(number.image), number.leadingWhitespace);\n                    },\n                },\n                {\n                    ALT: () => {\n                        const str = this.CONSUME(StringLiteral);\n                        return buildStringAst(str);\n                    },\n                },\n                {\n                    ALT: () => {\n                        const token = this.CONSUME(ErrorLiteral);\n                        const errString = token.image.toUpperCase();\n                        const errorType = this.lexerConfig.errorMapping[errString];\n                        if (errorType) {\n                            return buildCellErrorAst(new CellError(errorType), token.leadingWhitespace);\n                        }\n                        else {\n                            return this.parsingError(ParsingErrorType.ParserError, 'Unknown error literal');\n                        }\n                    },\n                },\n            ]));\n        });\n        /**\n         * Rule for procedure expressions: SUM(1,A1)\n         */\n        this.procedureExpression = this.RULE('procedureExpression', () => {\n            var _a;\n            const procedureNameToken = this.CONSUME(ProcedureName);\n            const procedureName = procedureNameToken.image.toUpperCase().slice(0, -1);\n            const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\n            const args = [];\n            let argument = this.SUBRULE(this.booleanExpressionOrEmpty);\n            this.MANY(() => {\n                var _a;\n                const separator = this.CONSUME(this.lexerConfig.ArgSeparator);\n                if (argument.type === AstNodeType.EMPTY) {\n                    argument.leadingWhitespace = (_a = separator.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image;\n                }\n                args.push(argument);\n                argument = this.SUBRULE2(this.booleanExpressionOrEmpty);\n            });\n            args.push(argument);\n            if (args.length === 1 && args[0].type === AstNodeType.EMPTY) {\n                args.length = 0;\n            }\n            const rParenToken = this.CONSUME(RParen);\n            return buildProcedureAst(canonicalProcedureName, args, procedureNameToken.leadingWhitespace, rParenToken.leadingWhitespace);\n        });\n        this.namedExpressionExpression = this.RULE('namedExpressionExpression', () => {\n            const name = this.CONSUME(NamedExpression);\n            return buildNamedExpressionAst(name.image, name.leadingWhitespace);\n        });\n        /**\n         * Rule for expressions that start with OFFSET() function\n         *\n         * OFFSET() function can occur as cell reference or part of cell range.\n         * In order to preserve LL(k) properties, expressions that starts with OFFSET() functions needs to have separate rule.\n         *\n         * Proper {@link Ast} node type is built depending on the presence of {@link RangeSeparator}\n         */\n        this.offsetExpression = this.RULE('offsetExpression', () => {\n            const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\n            let end;\n            this.OPTION(() => {\n                this.CONSUME(RangeSeparator);\n                if (offsetProcedure.type === AstNodeType.CELL_RANGE) {\n                    end = this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\n                }\n                else {\n                    end = this.SUBRULE(this.endOfRangeWithOffsetStartExpression, { ARGS: [offsetProcedure] });\n                }\n            });\n            if (end !== undefined) {\n                return end;\n            }\n            return offsetProcedure;\n        });\n        /**\n         * Rule for OFFSET() function expression\n         */\n        this.offsetProcedureExpression = this.RULE('offsetProcedureExpression', () => {\n            const args = [];\n            this.CONSUME(this.lexerConfig.OffsetProcedureName);\n            this.CONSUME(LParen);\n            this.MANY_SEP({\n                SEP: this.lexerConfig.ArgSeparator,\n                DEF: () => {\n                    args.push(this.SUBRULE(this.booleanExpression));\n                },\n            });\n            this.CONSUME(RParen);\n            return this.handleOffsetHeuristic(args);\n        });\n        /**\n         * Rule for cell ranges (e.g. A1:B$3, A1:OFFSET())\n         */\n        this.cellRangeExpression = this.RULE('cellRangeExpression', () => {\n            const start = this.CONSUME(CellReference);\n            this.CONSUME2(RangeSeparator);\n            return this.SUBRULE(this.endOfRangeExpression, { ARGS: [start] });\n        });\n        /*\n        * Rule for column range, e.g. A:B, Sheet1!A:B, Sheet1!A:Sheet1!B\n        * */\n        this.columnRangeExpression = this.RULE('columnRangeExpression', () => {\n            const range = this.CONSUME(ColumnRange);\n            const [startImage, endImage] = range.image.split(':');\n            const start = this.ACTION(() => {\n                return columnAddressFromString(this.sheetMapping, startImage, this.formulaAddress);\n            });\n            let end = this.ACTION(() => {\n                return columnAddressFromString(this.sheetMapping, endImage, this.formulaAddress);\n            });\n            if (start === undefined || end === undefined) {\n                return buildCellErrorAst(new CellError(ErrorType.REF));\n            }\n            if (start.exceedsSheetSizeLimits(this.lexerConfig.maxColumns) || end.exceedsSheetSizeLimits(this.lexerConfig.maxColumns)) {\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\n            }\n            if (start.sheet === null && end.sheet !== null) {\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\n            }\n            const sheetReferenceType = this.rangeSheetReferenceType(start.sheet, end.sheet);\n            if (start.sheet !== null && end.sheet === null) {\n                end = end.withAbsoluteSheet(start.sheet);\n            }\n            return buildColumnRangeAst(start, end, sheetReferenceType, range.leadingWhitespace);\n        });\n        /*\n      * Rule for row range, e.g. 1:2, Sheet1!1:2, Sheet1!1:Sheet1!2\n      * */\n        this.rowRangeExpression = this.RULE('rowRangeExpression', () => {\n            const range = this.CONSUME(RowRange);\n            const [startImage, endImage] = range.image.split(':');\n            const start = this.ACTION(() => {\n                return rowAddressFromString(this.sheetMapping, startImage, this.formulaAddress);\n            });\n            let end = this.ACTION(() => {\n                return rowAddressFromString(this.sheetMapping, endImage, this.formulaAddress);\n            });\n            if (start === undefined || end === undefined) {\n                return buildCellErrorAst(new CellError(ErrorType.REF));\n            }\n            if (start.exceedsSheetSizeLimits(this.lexerConfig.maxRows) || end.exceedsSheetSizeLimits(this.lexerConfig.maxRows)) {\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\n            }\n            if (start.sheet === null && end.sheet !== null) {\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\n            }\n            const sheetReferenceType = this.rangeSheetReferenceType(start.sheet, end.sheet);\n            if (start.sheet !== null && end.sheet === null) {\n                end = end.withAbsoluteSheet(start.sheet);\n            }\n            return buildRowRangeAst(start, end, sheetReferenceType, range.leadingWhitespace);\n        });\n        /**\n         * Rule for cell reference expression (e.g. A1, $A1, A$1, $A$1, $Sheet42!A$17)\n         */\n        this.cellReference = this.RULE('cellReference', () => {\n            const cell = this.CONSUME(CellReference);\n            const address = this.ACTION(() => {\n                return cellAddressFromString(this.sheetMapping, cell.image, this.formulaAddress);\n            });\n            if (address === undefined) {\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.REF), cell.leadingWhitespace);\n            }\n            else if (address.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.NAME), cell.leadingWhitespace);\n            }\n            else {\n                return buildCellReferenceAst(address, cell.leadingWhitespace);\n            }\n        });\n        /**\n         * Rule for end of range expression\n         *\n         * End of range may be a cell reference or OFFSET() function call\n         */\n        this.endOfRangeExpression = this.RULE('endOfRangeExpression', (start) => {\n            return this.OR([\n                {\n                    ALT: () => {\n                        return this.SUBRULE(this.endRangeReference, { ARGS: [start] });\n                    },\n                },\n                {\n                    ALT: () => {\n                        var _a;\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\n                        const startAddress = this.ACTION(() => {\n                            return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\n                        });\n                        if (startAddress === undefined) {\n                            return buildCellErrorAst(new CellError(ErrorType.REF));\n                        }\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\n                            let end = offsetProcedure.reference;\n                            let sheetReferenceType = RangeSheetReferenceType.RELATIVE;\n                            if (startAddress.sheet !== null) {\n                                sheetReferenceType = RangeSheetReferenceType.START_ABSOLUTE;\n                                end = end.withAbsoluteSheet(startAddress.sheet);\n                            }\n                            return buildCellRangeAst(startAddress, end, sheetReferenceType, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\n                        }\n                        else {\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\n                        }\n                    },\n                },\n            ]);\n        });\n        /**\n         * Rule for end of range expression\n         *\n         * End of range may be a cell reference or OFFSET() function call\n         */\n        this.endOfRangeWithOffsetStartExpression = this.RULE('endOfRangeWithOffsetStartExpression', (start) => {\n            return this.OR([\n                {\n                    ALT: () => {\n                        return this.SUBRULE(this.endRangeWithOffsetStartReference, { ARGS: [start] });\n                    },\n                },\n                {\n                    ALT: () => {\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\n                            let end = offsetProcedure.reference;\n                            let sheetReferenceType = RangeSheetReferenceType.RELATIVE;\n                            if (start.reference.sheet !== null) {\n                                sheetReferenceType = RangeSheetReferenceType.START_ABSOLUTE;\n                                end = end.withAbsoluteSheet(start.reference.sheet);\n                            }\n                            return buildCellRangeAst(start.reference, end, sheetReferenceType, start.leadingWhitespace);\n                        }\n                        else {\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\n                        }\n                    },\n                },\n            ]);\n        });\n        /**\n         * Rule for end range reference expression with additional checks considering range start\n         */\n        this.endRangeReference = this.RULE('endRangeReference', (start) => {\n            var _a;\n            const end = this.CONSUME(CellReference);\n            const startAddress = this.ACTION(() => {\n                return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\n            });\n            const endAddress = this.ACTION(() => {\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\n            });\n            if (startAddress === undefined || endAddress === undefined) {\n                return this.ACTION(() => {\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.REF), start.leadingWhitespace);\n                });\n            }\n            else if (startAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)\n                || endAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\n                return this.ACTION(() => {\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.NAME), start.leadingWhitespace);\n                });\n            }\n            return this.buildCellRange(startAddress, endAddress, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\n        });\n        /**\n         * Rule for end range reference expression starting with offset procedure with additional checks considering range start\n         */\n        this.endRangeWithOffsetStartReference = this.RULE('endRangeWithOffsetStartReference', (start) => {\n            const end = this.CONSUME(CellReference);\n            const endAddress = this.ACTION(() => {\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\n            });\n            if (endAddress === undefined) {\n                return this.ACTION(() => {\n                    return buildCellErrorAst(new CellError(ErrorType.REF));\n                });\n            }\n            return this.buildCellRange(start.reference, endAddress, start.leadingWhitespace);\n        });\n        /**\n         * Rule for parenthesis expression\n         */\n        this.parenthesisExpression = this.RULE('parenthesisExpression', () => {\n            const lParenToken = this.CONSUME(LParen);\n            const expression = this.SUBRULE(this.booleanExpression);\n            const rParenToken = this.CONSUME(RParen);\n            return buildParenthesisAst(expression, lParenToken.leadingWhitespace, rParenToken.leadingWhitespace);\n        });\n        this.numericStringToNumber = (input) => {\n            const normalized = input.replace(this.lexerConfig.decimalSeparator, '.');\n            return Number(normalized);\n        };\n        this.lexerConfig = lexerConfig;\n        this.sheetMapping = sheetMapping;\n        this.formulaAddress = simpleCellAddress(0, 0, 0);\n        this.performSelfAnalysis();\n    }\n    /**\n     * Parses tokenized formula and builds abstract syntax tree\n     *\n     * @param tokens - tokenized formula\n     * @param formulaAddress - address of the cell in which formula is located\n     */\n    parseFromTokens(tokens, formulaAddress) {\n        this.input = tokens;\n        let ast = this.formulaWithContext(formulaAddress);\n        let errors = [];\n        if (this.customParsingError) {\n            errors.push(this.customParsingError);\n        }\n        errors = errors.concat(this.errors.map((e) => ({\n            type: ParsingErrorType.ParserError,\n            message: e.message,\n        })));\n        if (errors.length > 0) {\n            ast = buildParsingErrorAst();\n        }\n        return {\n            ast,\n            errors\n        };\n    }\n    /**\n     * Entry rule wrapper that sets formula address\n     *\n     * @param address - address of the cell in which formula is located\n     */\n    formulaWithContext(address) {\n        this.formulaAddress = address;\n        return this.formula();\n    }\n    reset() {\n        super.reset();\n        this.customParsingError = undefined;\n    }\n    buildCellRange(startAddress, endAddress, leadingWhitespace) {\n        if (startAddress.sheet === null && endAddress.sheet !== null) {\n            return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\n        }\n        const sheetReferenceType = this.rangeSheetReferenceType(startAddress.sheet, endAddress.sheet);\n        if (startAddress.sheet !== null && endAddress.sheet === null) {\n            endAddress = endAddress.withAbsoluteSheet(startAddress.sheet);\n        }\n        return buildCellRangeAst(startAddress, endAddress, sheetReferenceType, leadingWhitespace);\n    }\n    /**\n     * Returns {@link CellReferenceAst} or {@link CellRangeAst} based on OFFSET function arguments\n     *\n     * @param args - OFFSET function arguments\n     */\n    handleOffsetHeuristic(args) {\n        const cellArg = args[0];\n        if (cellArg.type !== AstNodeType.CELL_REFERENCE) {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'First argument to OFFSET is not a reference');\n        }\n        const rowsArg = args[1];\n        let rowShift;\n        if (rowsArg.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value)) {\n            rowShift = rowsArg.value;\n        }\n        else if (rowsArg.type === AstNodeType.PLUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\n            rowShift = rowsArg.value.value;\n        }\n        else if (rowsArg.type === AstNodeType.MINUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\n            rowShift = -rowsArg.value.value;\n        }\n        else {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Second argument to OFFSET is not a static number');\n        }\n        const columnsArg = args[2];\n        let colShift;\n        if (columnsArg.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value)) {\n            colShift = columnsArg.value;\n        }\n        else if (columnsArg.type === AstNodeType.PLUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\n            colShift = columnsArg.value.value;\n        }\n        else if (columnsArg.type === AstNodeType.MINUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\n            colShift = -columnsArg.value.value;\n        }\n        else {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Third argument to OFFSET is not a static number');\n        }\n        const heightArg = args[3];\n        let height;\n        if (heightArg === undefined) {\n            height = 1;\n        }\n        else if (heightArg.type === AstNodeType.NUMBER) {\n            height = heightArg.value;\n            if (height < 1) {\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is too small number');\n            }\n            else if (!Number.isInteger(height)) {\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not integer');\n            }\n        }\n        else {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not a static number');\n        }\n        const widthArg = args[4];\n        let width;\n        if (widthArg === undefined) {\n            width = 1;\n        }\n        else if (widthArg.type === AstNodeType.NUMBER) {\n            width = widthArg.value;\n            if (width < 1) {\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is too small number');\n            }\n            else if (!Number.isInteger(width)) {\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not integer');\n            }\n        }\n        else {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not a static number');\n        }\n        const topLeftCorner = new CellAddress(null, cellArg.reference.col + colShift, cellArg.reference.row + rowShift, cellArg.reference.type);\n        let absoluteCol = topLeftCorner.col;\n        let absoluteRow = topLeftCorner.row;\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\n            absoluteRow = absoluteRow + this.formulaAddress.row;\n        }\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            absoluteCol = absoluteCol + this.formulaAddress.col;\n        }\n        if (absoluteCol < 0 || absoluteRow < 0) {\n            return buildCellErrorAst(new CellError(ErrorType.REF, 'Resulting reference is out of the sheet'));\n        }\n        if (width === 1 && height === 1) {\n            return buildCellReferenceAst(topLeftCorner);\n        }\n        else {\n            const bottomRightCorner = new CellAddress(null, topLeftCorner.col + width - 1, topLeftCorner.row + height - 1, topLeftCorner.type);\n            return buildCellRangeAst(topLeftCorner, bottomRightCorner, RangeSheetReferenceType.RELATIVE);\n        }\n    }\n    parsingError(type, message) {\n        this.customParsingError = parsingError(type, message);\n        return buildParsingErrorAst();\n    }\n    rangeSheetReferenceType(start, end) {\n        if (start === null) {\n            return RangeSheetReferenceType.RELATIVE;\n        }\n        else if (end === null) {\n            return RangeSheetReferenceType.START_ABSOLUTE;\n        }\n        else {\n            return RangeSheetReferenceType.BOTH_ABSOLUTE;\n        }\n    }\n}\nexport class FormulaLexer {\n    constructor(lexerConfig) {\n        this.lexerConfig = lexerConfig;\n        this.lexer = new Lexer(lexerConfig.allTokens, { ensureOptimizations: true });\n    }\n    /**\n     * Returns Lexer tokens from formula string\n     *\n     * @param text - string representation of a formula\n     */\n    tokenizeFormula(text) {\n        const lexingResult = this.lexer.tokenize(text);\n        let tokens = lexingResult.tokens;\n        tokens = this.trimTrailingWhitespaces(tokens);\n        tokens = this.skipWhitespacesInsideRanges(tokens);\n        tokens = this.skipWhitespacesBeforeArgSeparators(tokens);\n        lexingResult.tokens = tokens;\n        return lexingResult;\n    }\n    skipWhitespacesInsideRanges(tokens) {\n        return this.filterTokensByNeighbors(tokens, (previous, current, next) => {\n            return (tokenMatcher(previous, CellReference) || tokenMatcher(previous, RangeSeparator))\n                && tokenMatcher(current, WhiteSpace)\n                && (tokenMatcher(next, CellReference) || tokenMatcher(next, RangeSeparator));\n        });\n    }\n    skipWhitespacesBeforeArgSeparators(tokens) {\n        return this.filterTokensByNeighbors(tokens, (previous, current, next) => {\n            return !tokenMatcher(previous, this.lexerConfig.ArgSeparator)\n                && tokenMatcher(current, WhiteSpace)\n                && tokenMatcher(next, this.lexerConfig.ArgSeparator);\n        });\n    }\n    filterTokensByNeighbors(tokens, shouldBeSkipped) {\n        if (tokens.length < 3) {\n            return tokens;\n        }\n        let i = 0;\n        const filteredTokens = [tokens[i++]];\n        while (i < tokens.length - 1) {\n            if (!shouldBeSkipped(tokens[i - 1], tokens[i], tokens[i + 1])) {\n                filteredTokens.push(tokens[i]);\n            }\n            ++i;\n        }\n        filteredTokens.push(tokens[i]);\n        return filteredTokens;\n    }\n    trimTrailingWhitespaces(tokens) {\n        if (tokens.length > 0 && tokenMatcher(tokens[tokens.length - 1], WhiteSpace)) {\n            tokens.pop();\n        }\n        return tokens;\n    }\n}\n","var $ = require('../internals/export');\nvar isInteger = require('../internals/is-integer');\n\n// `Number.isInteger` method\n// https://tc39.github.io/ecma262/#sec-number.isinteger\n$({ target: 'Number', stat: true }, {\n  isInteger: isInteger\n});\n","var isObject = require('../internals/is-object');\n\nvar floor = Math.floor;\n\n// `Number.isInteger` method implementation\n// https://tc39.github.io/ecma262/#sec-number.isinteger\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","var $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar has = require('../internals/has');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\n\n// `Reflect.get` method\n// https://tc39.github.io/ecma262/#sec-reflect.get\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var descriptor, prototype;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey)) return has(descriptor, 'value')\n    ? descriptor.value\n    : descriptor.get === undefined\n      ? undefined\n      : descriptor.get.call(receiver);\n  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);\n}\n\n$({ target: 'Reflect', stat: true }, {\n  get: get\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { ErrorType } from '../Cell';\nimport { AstNodeType, imageWithWhitespace, RangeSheetReferenceType, } from './Ast';\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\nimport { additionalCharactersAllowedInQuotes } from './LexerConfig';\nexport class Unparser {\n    constructor(config, lexerConfig, sheetMappingFn, namedExpressions) {\n        this.config = config;\n        this.lexerConfig = lexerConfig;\n        this.sheetMappingFn = sheetMappingFn;\n        this.namedExpressions = namedExpressions;\n    }\n    unparse(ast, address) {\n        return '=' + this.unparseAst(ast, address);\n    }\n    unparseAst(ast, address) {\n        var _a;\n        switch (ast.type) {\n            case AstNodeType.EMPTY: {\n                return imageWithWhitespace('', ast.leadingWhitespace);\n            }\n            case AstNodeType.NUMBER: {\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\n            }\n            case AstNodeType.STRING: {\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\n            }\n            case AstNodeType.FUNCTION_CALL: {\n                const args = ast.args.map((arg) => arg !== undefined ? this.unparseAst(arg, address) : '').join(this.config.functionArgSeparator);\n                const procedureName = this.config.translationPackage.isFunctionTranslated(ast.procedureName) ?\n                    this.config.translationPackage.getFunctionTranslation(ast.procedureName) :\n                    ast.procedureName;\n                const rightPart = procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\n            }\n            case AstNodeType.NAMED_EXPRESSION: {\n                const originalNamedExpressionName = (_a = this.namedExpressions.nearestNamedExpression(ast.expressionName, address.sheet)) === null || _a === void 0 ? void 0 : _a.displayName;\n                return imageWithWhitespace(originalNamedExpressionName || ast.expressionName, ast.leadingWhitespace);\n            }\n            case AstNodeType.CELL_REFERENCE: {\n                let image;\n                if (ast.reference.sheet !== null) {\n                    image = this.unparseSheetName(ast.reference.sheet) + '!' + ast.reference.unparse(address);\n                }\n                else {\n                    image = ast.reference.unparse(address);\n                }\n                return imageWithWhitespace(image, ast.leadingWhitespace);\n            }\n            case AstNodeType.COLUMN_RANGE:\n            case AstNodeType.ROW_RANGE:\n            case AstNodeType.CELL_RANGE: {\n                return imageWithWhitespace(this.formatRange(ast, address), ast.leadingWhitespace);\n            }\n            case AstNodeType.PLUS_UNARY_OP: {\n                const unparsedExpr = this.unparseAst(ast.value, address);\n                return imageWithWhitespace('+', ast.leadingWhitespace) + unparsedExpr;\n            }\n            case AstNodeType.MINUS_UNARY_OP: {\n                const unparsedExpr = this.unparseAst(ast.value, address);\n                return imageWithWhitespace('-', ast.leadingWhitespace) + unparsedExpr;\n            }\n            case AstNodeType.PERCENT_OP: {\n                return this.unparseAst(ast.value, address) + imageWithWhitespace('%', ast.leadingWhitespace);\n            }\n            case AstNodeType.ERROR: {\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\n                return imageWithWhitespace(image, ast.leadingWhitespace);\n            }\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\n            }\n            case AstNodeType.PARENTHESIS: {\n                const expression = this.unparseAst(ast.expression, address);\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\n            }\n            default: {\n                const left = this.unparseAst(ast.left, address);\n                const right = this.unparseAst(ast.right, address);\n                return left + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + right;\n            }\n        }\n    }\n    unparseSheetName(sheetId) {\n        const sheet = this.sheetMappingFn(sheetId);\n        if (new RegExp(additionalCharactersAllowedInQuotes).exec(sheet)) {\n            return `'${sheet}'`;\n        }\n        else {\n            return sheet;\n        }\n    }\n    formatRange(ast, baseAddress) {\n        let startSheeet = '';\n        let endSheet = '';\n        if (ast.start.sheet !== null && (ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE)) {\n            startSheeet = this.unparseSheetName(ast.start.sheet) + '!';\n        }\n        if (ast.end.sheet !== null && ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE) {\n            endSheet = this.unparseSheetName(ast.end.sheet) + '!';\n        }\n        return `${startSheeet}${ast.start.unparse(baseAddress)}:${endSheet}${ast.end.unparse(baseAddress)}`;\n    }\n}\nexport function formatNumber(number, decimalSeparator) {\n    const numericString = number.toString();\n    return numericString.replace('.', decimalSeparator);\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AddressDependency, AstNodeType, CellRangeDependency, ColumnRangeDependency, NamedExpressionDependency, RowRangeDependency } from './';\nconst collectDependenciesFn = (ast, functionRegistry, dependenciesSet) => {\n    switch (ast.type) {\n        case AstNodeType.EMPTY:\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n        case AstNodeType.ERROR:\n            return;\n        case AstNodeType.NAMED_EXPRESSION: {\n            dependenciesSet.push(new NamedExpressionDependency(ast.expressionName));\n            return;\n        }\n        case AstNodeType.CELL_REFERENCE: {\n            dependenciesSet.push(new AddressDependency(ast.reference));\n            return;\n        }\n        case AstNodeType.CELL_RANGE: {\n            if (ast.start.sheet === ast.end.sheet) {\n                dependenciesSet.push(new CellRangeDependency(ast.start, ast.end));\n            }\n            return;\n        }\n        case AstNodeType.COLUMN_RANGE: {\n            if (ast.start.sheet === ast.end.sheet) {\n                dependenciesSet.push(new ColumnRangeDependency(ast.start, ast.end));\n            }\n            return;\n        }\n        case AstNodeType.ROW_RANGE: {\n            if (ast.start.sheet === ast.end.sheet) {\n                dependenciesSet.push(new RowRangeDependency(ast.start, ast.end));\n            }\n            return;\n        }\n        case AstNodeType.PERCENT_OP:\n        case AstNodeType.PLUS_UNARY_OP:\n        case AstNodeType.MINUS_UNARY_OP: {\n            collectDependenciesFn(ast.value, functionRegistry, dependenciesSet);\n            return;\n        }\n        case AstNodeType.CONCATENATE_OP:\n        case AstNodeType.EQUALS_OP:\n        case AstNodeType.NOT_EQUAL_OP:\n        case AstNodeType.LESS_THAN_OP:\n        case AstNodeType.GREATER_THAN_OP:\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n        case AstNodeType.MINUS_OP:\n        case AstNodeType.PLUS_OP:\n        case AstNodeType.TIMES_OP:\n        case AstNodeType.DIV_OP:\n        case AstNodeType.POWER_OP:\n            collectDependenciesFn(ast.left, functionRegistry, dependenciesSet);\n            collectDependenciesFn(ast.right, functionRegistry, dependenciesSet);\n            return;\n        case AstNodeType.PARENTHESIS:\n            collectDependenciesFn(ast.expression, functionRegistry, dependenciesSet);\n            return;\n        case AstNodeType.FUNCTION_CALL:\n            if (!functionRegistry.doesFunctionNeedArgumentToBeComputed(ast.procedureName)) {\n                ast.args.forEach((argAst) => collectDependenciesFn(argAst, functionRegistry, dependenciesSet));\n            }\n            return;\n    }\n};\nexport const collectDependencies = (ast, functionRegistry) => {\n    const result = new Array();\n    collectDependenciesFn(ast, functionRegistry, result);\n    return result;\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\nexport class AddressDependency {\n    constructor(dependency) {\n        this.dependency = dependency;\n    }\n    absolutize(baseAddress) {\n        return this.dependency.toSimpleCellAddress(baseAddress);\n    }\n}\nexport class CellRangeDependency {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    absolutize(baseAddress) {\n        return new AbsoluteCellRange(this.start.toSimpleCellAddress(baseAddress), this.end.toSimpleCellAddress(baseAddress));\n    }\n}\nexport class ColumnRangeDependency {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    absolutize(baseAddress) {\n        const start = this.start.toSimpleColumnAddress(baseAddress);\n        const end = this.end.toSimpleColumnAddress(baseAddress);\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\n    }\n}\nexport class RowRangeDependency {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    absolutize(baseAddress) {\n        const start = this.start.toSimpleRowAddress(baseAddress);\n        const end = this.end.toSimpleRowAddress(baseAddress);\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\n    }\n}\nexport class NamedExpressionDependency {\n    constructor(name) {\n        this.name = name;\n    }\n    absolutize(_baseAddress) {\n        return this;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\n/*\n * A class representing a set of rows in specific sheet\n */\nexport class RowsSpan {\n    constructor(sheet, rowStart, rowEnd) {\n        this.sheet = sheet;\n        this.rowStart = rowStart;\n        this.rowEnd = rowEnd;\n        if (rowStart < 0) {\n            throw Error('Starting row cant be less than 0');\n        }\n        if (rowEnd < rowStart) {\n            throw Error('Row span cant end before start');\n        }\n    }\n    get numberOfRows() {\n        return this.rowEnd - this.rowStart + 1;\n    }\n    static fromNumberOfRows(sheet, rowStart, numberOfRows) {\n        return new RowsSpan(sheet, rowStart, rowStart + numberOfRows - 1);\n    }\n    static fromRowStartAndEnd(sheet, rowStart, rowEnd) {\n        return new RowsSpan(sheet, rowStart, rowEnd);\n    }\n    *rows() {\n        for (let col = this.rowStart; col <= this.rowEnd; ++col) {\n            yield col;\n        }\n    }\n    intersect(otherSpan) {\n        if (this.sheet !== otherSpan.sheet) {\n            throw Error('Can\\'t intersect spans from different sheets');\n        }\n        const start = Math.max(this.rowStart, otherSpan.rowStart);\n        const end = Math.min(this.rowEnd, otherSpan.rowEnd);\n        if (start > end) {\n            return null;\n        }\n        return new RowsSpan(this.sheet, start, end);\n    }\n    firstRow() {\n        return new RowsSpan(this.sheet, this.rowStart, this.rowStart);\n    }\n    get start() {\n        return this.rowStart;\n    }\n    get end() {\n        return this.rowEnd;\n    }\n}\n/*\n * A class representing a set of columns in specific sheet\n */\nexport class ColumnsSpan {\n    constructor(sheet, columnStart, columnEnd) {\n        this.sheet = sheet;\n        this.columnStart = columnStart;\n        this.columnEnd = columnEnd;\n        if (columnStart < 0) {\n            throw Error('Starting column cant be less than 0');\n        }\n        if (columnEnd < columnStart) {\n            throw Error('Column span cant end before start');\n        }\n    }\n    get numberOfColumns() {\n        return this.columnEnd - this.columnStart + 1;\n    }\n    static fromNumberOfColumns(sheet, columnStart, numberOfColumns) {\n        return new ColumnsSpan(sheet, columnStart, columnStart + numberOfColumns - 1);\n    }\n    static fromColumnStartAndEnd(sheet, columnStart, columnEnd) {\n        return new ColumnsSpan(sheet, columnStart, columnEnd);\n    }\n    *columns() {\n        for (let col = this.columnStart; col <= this.columnEnd; ++col) {\n            yield col;\n        }\n    }\n    intersect(otherSpan) {\n        if (this.sheet !== otherSpan.sheet) {\n            throw Error('Can\\'t intersect spans from different sheets');\n        }\n        const start = Math.max(this.columnStart, otherSpan.columnStart);\n        const end = Math.min(this.columnEnd, otherSpan.columnEnd);\n        if (start > end) {\n            return null;\n        }\n        return new ColumnsSpan(this.sheet, start, end);\n    }\n    firstColumn() {\n        return new ColumnsSpan(this.sheet, this.columnStart, this.columnStart);\n    }\n    get start() {\n        return this.columnStart;\n    }\n    get end() {\n        return this.columnEnd;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\n/**\n * Converts dependencies from maybe relative addressing to absolute addressing.\n *\n * @param deps - list of addresses in R0C0 format\n * @param baseAddress - base address with regard to which make a convertion\n */\nexport const absolutizeDependencies = (deps, baseAddress) => {\n    return deps.map((dep) => dep.absolutize(baseAddress));\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport { EmptyStatistics } from './EmptyStatistics';\nexport { Statistics } from './Statistics';\nexport { StatType } from './StatType';\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { Statistics } from './Statistics';\n/** Do not store stats in the memory. Stats are not needed on daily basis */\nexport class EmptyStatistics extends Statistics {\n    /** @inheritDoc */\n    incrementCriterionFunctionFullCacheUsed() {\n        // do nothing\n    }\n    /** @inheritDoc */\n    incrementCriterionFunctionPartialCacheUsed() {\n        // do nothing\n    }\n    /** @inheritDoc */\n    start(_name) {\n        // do nothing\n    }\n    /** @inheritDoc */\n    end(_name) {\n        // do nothing\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { StatType } from './StatType';\n/**\n * Provides tracking performance statistics to the engine\n */\nexport class Statistics {\n    constructor() {\n        this.stats = new Map([\n            [StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0],\n            [StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0],\n        ]);\n        this.startTimes = new Map();\n    }\n    incrementCriterionFunctionFullCacheUsed() {\n        const newValue = (this.stats.get(StatType.CRITERION_FUNCTION_FULL_CACHE_USED) || 0) + 1;\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, newValue);\n    }\n    incrementCriterionFunctionPartialCacheUsed() {\n        const newValue = (this.stats.get(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED) || 0) + 1;\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, newValue);\n    }\n    /**\n     * Resets statistics\n     */\n    reset() {\n        this.stats.clear();\n        this.startTimes.clear();\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0);\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0);\n    }\n    /**\n     * Starts tracking particular statistic.\n     *\n     * @param name - statistic to start tracking\n     */\n    start(name) {\n        if (this.startTimes.get(name)) {\n            throw Error(`Statistics ${name} already started`);\n        }\n        else {\n            this.startTimes.set(name, Date.now());\n        }\n    }\n    /**\n     * Stops tracking particular statistic.\n     * Raise error if tracking statistic wasn't started.\n     *\n     * @param name - statistic to stop tracking\n     */\n    end(name) {\n        const now = Date.now();\n        const startTime = this.startTimes.get(name);\n        if (startTime) {\n            let values = this.stats.get(name) || 0;\n            values += (now - startTime);\n            this.stats.set(name, values);\n            this.startTimes.delete(name);\n        }\n        else {\n            throw Error(`Statistics ${name} not started`);\n        }\n    }\n    /**\n     * Measure given statistic as execution of given function.\n     *\n     * @param name - statistic to track\n     * @param func - function to call\n     * @returns result of the function call\n     */\n    measure(name, func) {\n        this.start(name);\n        const result = func();\n        this.end(name);\n        return result;\n    }\n    /**\n     * Returns the snapshot of current results\n     */\n    snapshot() {\n        return new Map(this.stats);\n    }\n    destroy() {\n        this.stats.clear();\n        this.startTimes.clear();\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport var StatType;\n(function (StatType) {\n    /* build engine */\n    StatType[\"BUILD_ENGINE_TOTAL\"] = \"BUILD_ENGINE_TOTAL\";\n    StatType[\"PARSER\"] = \"PARSER\";\n    StatType[\"GRAPH_BUILD\"] = \"GRAPH_BUILD\";\n    StatType[\"TOP_SORT\"] = \"TOP_SORT\";\n    StatType[\"MATRIX_DETECTION\"] = \"MATRIX_DETECTION\";\n    StatType[\"BUILD_COLUMN_INDEX\"] = \"BUILD_COLUMN_INDEX\";\n    StatType[\"EVALUATION\"] = \"EVALUATION\";\n    StatType[\"VLOOKUP\"] = \"VLOOKUP\";\n    /* crud adjustments */\n    StatType[\"TRANSFORM_ASTS\"] = \"TRANSFORM_ASTS\";\n    StatType[\"TRANSFORM_ASTS_POSTPONED\"] = \"TRANSFORM_ASTS_POSTPONED\";\n    StatType[\"ADJUSTING_ADDRESS_MAPPING\"] = \"ADJUSTING_ADDRESS_MAPPING\";\n    StatType[\"ADJUSTING_MATRIX_MAPPING\"] = \"ADJUSTING_MATRIX_MAPPING\";\n    StatType[\"ADJUSTING_RANGES\"] = \"ADJUSTING_RANGES\";\n    StatType[\"ADJUSTING_GRAPH\"] = \"ADJUSTING_GRAPH\";\n    /* criterion cache */\n    StatType[\"CRITERION_FUNCTION_FULL_CACHE_USED\"] = \"CRITERION_FUNCTION_FULL_CACHE_USED\";\n    StatType[\"CRITERION_FUNCTION_PARTIAL_CACHE_USED\"] = \"CRITERION_FUNCTION_PARTIAL_CACHE_USED\";\n})(StatType || (StatType = {}));\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { EmptyValue } from '../../Cell';\nimport { MatrixVertex } from '../index';\nimport { NoSheetWithIdError } from '../../errors';\nexport class AddressMapping {\n    constructor(policy) {\n        this.policy = policy;\n        this.mapping = new Map();\n    }\n    /** @inheritDoc */\n    getCell(address) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            throw new NoSheetWithIdError(address.sheet);\n        }\n        return sheetMapping.getCell(address);\n    }\n    fetchCell(address) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            throw new NoSheetWithIdError(address.sheet);\n        }\n        const vertex = sheetMapping.getCell(address);\n        if (!vertex) {\n            throw Error('Vertex for address missing in AddressMapping');\n        }\n        return vertex;\n    }\n    strategyFor(sheetId) {\n        const strategy = this.mapping.get(sheetId);\n        if (!strategy) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return strategy;\n    }\n    addSheet(sheetId, strategy) {\n        if (this.mapping.has(sheetId)) {\n            throw Error('Sheet already added');\n        }\n        this.mapping.set(sheetId, strategy);\n    }\n    autoAddSheet(sheetId, sheet, sheetBoundaries) {\n        const { height, width, fill } = sheetBoundaries;\n        const strategyConstructor = this.policy.call(fill);\n        this.addSheet(sheetId, new strategyConstructor(width, height));\n    }\n    getCellValue(address) {\n        const vertex = this.getCell(address);\n        if (vertex === null) {\n            return EmptyValue;\n        }\n        else if (vertex instanceof MatrixVertex) {\n            return vertex.getMatrixCellValue(address);\n        }\n        else {\n            return vertex.getCellValue();\n        }\n    }\n    /** @inheritDoc */\n    setCell(address, newVertex) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet not initialized');\n        }\n        sheetMapping.setCell(address, newVertex);\n    }\n    removeCell(address) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet not initialized');\n        }\n        sheetMapping.removeCell(address);\n    }\n    /** @inheritDoc */\n    has(address) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            return false;\n        }\n        return sheetMapping.has(address);\n    }\n    /** @inheritDoc */\n    getHeight(sheetId) {\n        const sheetMapping = this.mapping.get(sheetId);\n        if (!sheetMapping) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return sheetMapping.getHeight();\n    }\n    /** @inheritDoc */\n    getWidth(sheetId) {\n        const sheetMapping = this.mapping.get(sheetId);\n        if (!sheetMapping) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return sheetMapping.getWidth();\n    }\n    addRows(sheet, row, numberOfRows) {\n        const sheetMapping = this.mapping.get(sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet does not exist');\n        }\n        sheetMapping.addRows(row, numberOfRows);\n    }\n    removeRows(removedRows) {\n        const sheetMapping = this.mapping.get(removedRows.sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet does not exist');\n        }\n        sheetMapping.removeRows(removedRows);\n    }\n    removeSheet(sheetId) {\n        this.mapping.delete(sheetId);\n    }\n    addColumns(sheet, column, numberOfColumns) {\n        const sheetMapping = this.mapping.get(sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet does not exist');\n        }\n        sheetMapping.addColumns(column, numberOfColumns);\n    }\n    removeColumns(removedColumns) {\n        const sheetMapping = this.mapping.get(removedColumns.sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet does not exist');\n        }\n        sheetMapping.removeColumns(removedColumns);\n    }\n    *verticesFromRowsSpan(rowsSpan) {\n        yield* this.mapping.get(rowsSpan.sheet).verticesFromRowsSpan(rowsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    }\n    *verticesFromColumnsSpan(columnsSpan) {\n        yield* this.mapping.get(columnsSpan.sheet).verticesFromColumnsSpan(columnsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    }\n    *entriesFromRowsSpan(rowsSpan) {\n        yield* this.mapping.get(rowsSpan.sheet).entriesFromRowsSpan(rowsSpan);\n    }\n    *entriesFromColumnsSpan(columnsSpan) {\n        yield* this.mapping.get(columnsSpan.sheet).entriesFromColumnsSpan(columnsSpan);\n    }\n    *entries() {\n        for (const [sheet, mapping] of this.mapping.entries()) {\n            yield* mapping.getEntries(sheet);\n        }\n    }\n    *sheetEntries(sheet) {\n        const sheetMapping = this.mapping.get(sheet);\n        if (sheetMapping) {\n            yield* sheetMapping.getEntries(sheet);\n        }\n        else {\n            throw new Error('Sheet does not exists');\n        }\n    }\n    destroy() {\n        this.mapping.clear();\n    }\n}\n","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\n/**\n * Error thrown when the sheet of a given ID does not exist.\n */\nexport class NoSheetWithIdError extends Error {\n    constructor(sheetId) {\n        super(`There's no sheet with id = ${sheetId}`);\n    }\n}\n/**\n * Error thrown when the sheet of a given name does not exist.\n */\nexport class NoSheetWithNameError extends Error {\n    constructor(sheetName) {\n        super(`There's no sheet with name '${sheetName}'`);\n    }\n}\n/**\n * Error thrown when the sheet of a given name already exists.\n */\nexport class SheetNameAlreadyTakenError extends Error {\n    constructor(sheetName) {\n        super(`Sheet with name ${sheetName} already exists`);\n    }\n}\n/**\n * Error thrown when loaded sheet size exceeds configured limits.\n */\nexport class SheetSizeLimitExceededError extends Error {\n    constructor() {\n        super('Sheet size limit exceeded');\n    }\n}\n/**\n * Error thrown when the the provided string is not a valid formula, i.e does not start with \"=\"\n */\nexport class NotAFormulaError extends Error {\n    constructor() {\n        super('This is not a formula');\n    }\n}\n/**\n * Error thrown when the given address is invalid.\n */\nexport class InvalidAddressError extends Error {\n    constructor(address) {\n        super(`Address (row = ${address.row}, col = ${address.col}) is invalid`);\n    }\n}\n/**\n * Error thrown when the given arguments are invalid\n */\nexport class InvalidArgumentsError extends Error {\n    constructor(expectedArguments) {\n        super(`Invalid arguments, expected ${expectedArguments}`);\n    }\n}\n/**\n * Error thrown when the given named expression already exists in the workbook and therefore it cannot be added.\n */\nexport class NamedExpressionNameIsAlreadyTakenError extends Error {\n    constructor(expressionName) {\n        super(`Name of Named Expression '${expressionName}' is already present`);\n    }\n}\n/**\n * Error thrown when the name given for the named expression is invalid.\n */\nexport class NamedExpressionNameIsInvalidError extends Error {\n    constructor(expressionName) {\n        super(`Name of Named Expression '${expressionName}' is invalid`);\n    }\n}\n/**\n * Error thrown when the given named expression does not exist.\n */\nexport class NamedExpressionDoesNotExistError extends Error {\n    constructor(expressionName) {\n        super(`Named Expression '${expressionName}' does not exist`);\n    }\n}\n/**\n * Error thrown when there are no operations to be undone by the [[undo]] method.\n */\nexport class NoOperationToUndoError extends Error {\n    constructor() {\n        super('There is no operation to undo');\n    }\n}\n/**\n * Error thrown when there are no operations to redo by the [[redo]] method.\n */\nexport class NoOperationToRedoError extends Error {\n    constructor() {\n        super('There is no operation to redo');\n    }\n}\n/**\n * Error thrown when there is nothing to paste by the [[paste]] method.\n */\nexport class NothingToPasteError extends Error {\n    constructor() {\n        super('There is nothing to paste');\n    }\n}\nfunction replacer(key, val) {\n    switch (typeof val) {\n        case 'function':\n        case 'symbol':\n            return val.toString();\n        case 'bigint':\n            return 'BigInt(' + val.toString() + ')';\n        default: {\n            if (val instanceof RegExp) {\n                return 'RegExp(' + val.toString() + ')';\n            }\n            else {\n                return val;\n            }\n        }\n    }\n}\n/**\n * Error thrown when the given value cannot be parsed.\n *\n * Checks against the validity in:\n *\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[setCellsContents]]\n */\nexport class UnableToParseError extends Error {\n    constructor(value) {\n        super(`Unable to parse value: ${JSON.stringify(value, replacer, 4)}`);\n    }\n}\n/**\n * Error thrown when the expected value type differs from the given value type.\n * It also displays the expected type.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ExpectedValueOfTypeError extends Error {\n    constructor(expectedType, paramName) {\n        super(`Expected value of type: ${expectedType} for config parameter: ${paramName}`);\n    }\n}\n/**\n * Error thrown when supplied config parameter value is too small.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ConfigValueTooSmallError extends Error {\n    constructor(paramName, minimum) {\n        super(`Config parameter ${paramName} should be at least ${minimum}`);\n    }\n}\n/**\n * Error thrown when supplied config parameter value is too big.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ConfigValueTooBigError extends Error {\n    constructor(paramName, maximum) {\n        super(`Config parameter ${paramName} should be at most ${maximum}`);\n    }\n}\n/**\n * Error thrown when the value was expected to be set for a config parameter.\n * It also displays the expected value.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ExpectedOneOfValuesError extends Error {\n    constructor(values, paramName) {\n        super(`Expected one of ${values} for config parameter: ${paramName}`);\n    }\n}\n/**\n * Error thrown when computations become suspended.\n * To perform any other action wait for the batch to complete or resume the evaluation.\n * Relates to:\n *\n * @see [[batch]]\n * @see [[suspendEvaluation]]\n * @see [[resumeEvaluation]]\n */\nexport class EvaluationSuspendedError extends Error {\n    constructor() {\n        super('Computations are suspended');\n    }\n}\n/**\n * Error thrown when translation is missing in translation package.\n *\n * TODO\n */\nexport class MissingTranslationError extends Error {\n    constructor(key) {\n        super(`Translation for ${key} is missing in the translation package you're using.`);\n    }\n}\n/**\n * Error thrown when trying to override protected translation.\n *\n * @see [[registerLanguage]]\n * @see [[registerFunction]]\n * @see [[registerFunctionPlugin]]\n */\nexport class ProtectedFunctionTranslationError extends Error {\n    constructor(key) {\n        super(`Cannot register translation for function with id: ${key}`);\n    }\n}\n/**\n * Error thrown when trying to retrieve not registered language\n *\n * @see [[getLanguage]]\n * @see [[unregisterLanguage]]\n */\nexport class LanguageNotRegisteredError extends Error {\n    constructor() {\n        super('Language not registered.');\n    }\n}\n/**\n * Error thrown when trying to register already registered language\n *\n * @see [[registerLanguage]]\n */\nexport class LanguageAlreadyRegisteredError extends Error {\n    constructor() {\n        super('Language already registered.');\n    }\n}\n/**\n * Error thrown when function plugin is invalid.\n *\n * @see [[registerFunction]]\n * @see [[registerFunctionPlugin]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * */\nexport class FunctionPluginValidationError extends Error {\n    static functionNotDeclaredInPlugin(functionId, pluginName) {\n        return new FunctionPluginValidationError(`Function with id ${functionId} not declared in plugin ${pluginName}`);\n    }\n    static functionMethodNotFound(functionName, pluginName) {\n        return new FunctionPluginValidationError(`Function method ${functionName} not found in plugin ${pluginName}`);\n    }\n}\n/**\n * Error thrown when trying to register, override or remove function with reserved id.\n *\n * @see [[registerFunctionPlugin]]\n * @see [[registerFunction]]\n * @see [[unregisterFunction]]\n * */\nexport class ProtectedFunctionError extends Error {\n    static cannotRegisterFunctionWithId(functionId) {\n        return new ProtectedFunctionError(`Cannot register function with id ${functionId}`);\n    }\n    static cannotUnregisterFunctionWithId(functionId) {\n        return new ProtectedFunctionError(`Cannot unregister function with id ${functionId}`);\n    }\n    static cannotUnregisterProtectedPlugin() {\n        return new ProtectedFunctionError('Cannot unregister protected plugin');\n    }\n}\n/**\n * Error thrown when selected source location has a matrix.\n */\nexport class SourceLocationHasMatrixError extends Error {\n    constructor() {\n        super('Cannot perform this operation, source location has a matrix inside.');\n    }\n}\n/**\n * Error thrown when selected target location has a matrix.\n *\n * @see [[addRows]]\n * @see [[addColumns]]\n * @see [[moveCells]]\n * @see [[moveRows]]\n * @see [[moveColumns]]\n * @see [[paste]]\n */\nexport class TargetLocationHasMatrixError extends Error {\n    constructor() {\n        super('Cannot perform this operation, target location has a matrix inside.');\n    }\n}\n/**\n * Error thrown when trying to use matrix expression as named expression.\n *\n * @see [[addNamedExpression]]\n * @see [[changeNamedExpression]]\n */\nexport class MatrixFormulasNotSupportedError extends Error {\n    constructor() {\n        super('Matrix formulas are not supported in named expressions.');\n    }\n}\n/**\n * Error thrown when named expression contains relative addresses.\n *\n * @see [[addNamedExpression]]\n * @see [[changeNamedExpression]]\n * */\nexport class NoRelativeAddressesAllowedError extends Error {\n    constructor() {\n        super('Relative addresses not allowed in named expressions.');\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AddressDependency, collectDependencies } from '../parser';\nimport { FormulaCellVertex } from './FormulaCellVertex';\nimport { MatrixVertex } from './MatrixVertex';\nimport { RangeVertex } from './RangeVertex';\nexport const collectAddressesDependentToMatrix = (funcitonRegistry, vertex, matrix, lazilyTransformingAstService, dependencyGraph) => {\n    const range = matrix.getRange();\n    if (vertex instanceof RangeVertex) {\n        const intersection = vertex.range.intersectionWith(range);\n        if (intersection !== null) {\n            return Array.from(intersection.addresses(dependencyGraph));\n        }\n        else {\n            return [];\n        }\n    }\n    let formula;\n    let address;\n    if (vertex instanceof FormulaCellVertex) {\n        formula = vertex.getFormula(lazilyTransformingAstService);\n        address = vertex.getAddress(lazilyTransformingAstService);\n    }\n    else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n        formula = vertex.getFormula();\n        address = vertex.getAddress();\n    }\n    else {\n        return [];\n    }\n    return collectDependencies(formula, funcitonRegistry)\n        .filter((d) => d instanceof AddressDependency)\n        .map((d) => d.dependency.toSimpleCellAddress(address))\n        .filter((d) => range.addressInRange(d));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\n/**\n * Represents vertex which keeps formula\n */\nexport class FormulaCellVertex {\n    constructor(\n    /** Formula in AST format */\n    formula, \n    /** Address which this vertex represents */\n    cellAddress, version) {\n        this.formula = formula;\n        this.cellAddress = cellAddress;\n        this.version = version;\n        this.formula = formula;\n        this.cellAddress = cellAddress;\n        this.cachedCellValue = null;\n    }\n    /**\n     * Returns formula stored in this vertex\n     */\n    getFormula(updatingService) {\n        this.ensureRecentData(updatingService);\n        return this.formula;\n    }\n    ensureRecentData(updatingService) {\n        if (this.version != updatingService.version()) {\n            const [newAst, newAddress, newVersion] = updatingService.applyTransformations(this.formula, this.address, this.version);\n            this.formula = newAst;\n            this.cellAddress = newAddress;\n            this.version = newVersion;\n        }\n    }\n    /**\n     * Returns address of the cell associated with vertex\n     */\n    getAddress(updatingService) {\n        this.ensureRecentData(updatingService);\n        return this.cellAddress;\n    }\n    get address() {\n        return this.cellAddress;\n    }\n    /**\n     * Sets computed cell value stored in this vertex\n     */\n    setCellValue(cellValue) {\n        this.cachedCellValue = cellValue;\n    }\n    /**\n     * Returns cell value stored in vertex\n     */\n    getCellValue() {\n        if (this.cachedCellValue !== null) {\n            return this.cachedCellValue;\n        }\n        else {\n            throw Error('Value of the formula cell is not computed.');\n        }\n    }\n    isComputed() {\n        return (this.cachedCellValue !== null);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { ErroredMatrix, Matrix, MatrixSize, NotComputedMatrix } from '../Matrix';\nimport { ColumnsSpan, RowsSpan } from '../Span';\nexport class MatrixVertex {\n    constructor(cellAddress, width, height, formula) {\n        this.cellAddress = cellAddress;\n        this.formula = formula || null;\n        this.matrix = new NotComputedMatrix(new MatrixSize(width, height));\n    }\n    get width() {\n        return this.matrix.width();\n    }\n    get height() {\n        return this.matrix.height();\n    }\n    get sheet() {\n        return this.cellAddress.sheet;\n    }\n    static fromRange(range, formula) {\n        return new MatrixVertex(range.start, range.width(), range.height(), formula);\n    }\n    setCellValue(matrix) {\n        this.matrix = matrix;\n    }\n    setErrorValue(error) {\n        this.matrix = new ErroredMatrix(error, this.matrix.size);\n    }\n    getCellValue() {\n        if (this.matrix instanceof NotComputedMatrix) {\n            throw Error('Matrix not computed yet.');\n        }\n        return this.matrix;\n    }\n    getMatrixCellValue(address) {\n        const col = address.col - this.cellAddress.col;\n        const row = address.row - this.cellAddress.row;\n        return this.matrix.get(col, row);\n    }\n    setMatrixCellValue(address, value) {\n        const col = address.col - this.cellAddress.col;\n        const row = address.row - this.cellAddress.row;\n        if (this.matrix instanceof Matrix) {\n            this.matrix.set(col, row, value);\n        }\n    }\n    getRange() {\n        return AbsoluteCellRange.spanFrom(this.cellAddress, this.width, this.height);\n    }\n    getAddress() {\n        return this.cellAddress;\n    }\n    setAddress(address) {\n        this.cellAddress = address;\n    }\n    getFormula() {\n        return this.formula;\n    }\n    setFormula(newFormula) {\n        this.formula = newFormula;\n    }\n    isFormula() {\n        return this.formula !== null;\n    }\n    isNumeric() {\n        return this.formula === null;\n    }\n    spansThroughSheetRows(sheet, startRow, endRow = startRow) {\n        return (this.cellAddress.sheet === sheet) &&\n            (this.cellAddress.row <= endRow) &&\n            (startRow < this.cellAddress.row + this.height);\n    }\n    spansThroughSheetColumn(sheet, col, columnEnd = col) {\n        return (this.cellAddress.sheet === sheet) &&\n            (this.cellAddress.col <= columnEnd) &&\n            (col < this.cellAddress.col + this.width);\n    }\n    addRows(sheet, row, numberOfRows) {\n        if (this.matrix instanceof Matrix) {\n            this.matrix.addRows(row - this.getAddress().row, numberOfRows);\n        }\n    }\n    addColumns(sheet, column, numberOfColumns) {\n        if (this.matrix instanceof Matrix) {\n            this.matrix.addColumns(column - this.getAddress().col, numberOfColumns);\n        }\n    }\n    removeRows(removedRows) {\n        if (this.matrix instanceof Matrix) {\n            const removedRowsFromMatrix = this.rowsFromMatrix().intersect(removedRows);\n            this.matrix.removeRows(removedRowsFromMatrix.rowStart - this.getAddress().row, removedRowsFromMatrix.rowEnd - this.getAddress().row);\n        }\n    }\n    removeColumns(removedColumns) {\n        if (this.matrix instanceof Matrix) {\n            const removedColumnsFromMatrix = this.columnsFromMatrix().intersect(removedColumns);\n            this.matrix.removeColumns(removedColumnsFromMatrix.columnStart - this.getAddress().col, removedColumnsFromMatrix.columnEnd - this.getAddress().col);\n        }\n    }\n    isComputed() {\n        return (!(this.matrix instanceof NotComputedMatrix));\n    }\n    columnsFromMatrix() {\n        return ColumnsSpan.fromNumberOfColumns(this.cellAddress.sheet, this.cellAddress.col, this.width);\n    }\n    rowsFromMatrix() {\n        return RowsSpan.fromNumberOfRows(this.cellAddress.sheet, this.cellAddress.row, this.height);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { CellError, ErrorType, simpleCellAddress } from './Cell';\nimport { AstNodeType } from './parser';\nexport class MatrixSize {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        if (width <= 0 || height <= 0) {\n            throw Error('Incorrect matrix size');\n        }\n    }\n}\nexport function matrixSizeForTranspose(inputSize) {\n    return new MatrixSize(inputSize.height, inputSize.width);\n}\nexport function matrixSizeForMultiplication(leftMatrixSize, rightMatrixSize) {\n    return new MatrixSize(rightMatrixSize.width, leftMatrixSize.height);\n}\nexport function matrixSizeForPoolFunction(inputMatrix, windowSize, stride) {\n    return new MatrixSize(1 + (inputMatrix.width - windowSize) / stride, 1 + (inputMatrix.height - windowSize) / stride);\n}\nexport function checkMatrixSize(ast, formulaAddress) {\n    if (ast.type === AstNodeType.FUNCTION_CALL) {\n        switch (ast.procedureName) {\n            case 'MMULT': {\n                if (ast.args.length !== 2) {\n                    return new CellError(ErrorType.NA);\n                }\n                if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n                    return new CellError(ErrorType.NUM);\n                }\n                const left = checkMatrixSize(ast.args[0], formulaAddress);\n                const right = checkMatrixSize(ast.args[1], formulaAddress);\n                if (left instanceof CellError) {\n                    return left;\n                }\n                else if (right instanceof CellError) {\n                    return right;\n                }\n                else if (left.width !== right.height) {\n                    return new CellError(ErrorType.VALUE);\n                }\n                else {\n                    return matrixSizeForMultiplication(left, right);\n                }\n            }\n            case 'MEDIANPOOL':\n            case 'MAXPOOL': {\n                if (ast.args.length < 2 || ast.args.length > 3) {\n                    return new CellError(ErrorType.NA);\n                }\n                if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n                    return new CellError(ErrorType.NUM);\n                }\n                const matrix = checkMatrixSize(ast.args[0], formulaAddress);\n                const windowArg = ast.args[1];\n                if (matrix instanceof CellError) {\n                    return matrix;\n                }\n                else if (windowArg.type !== AstNodeType.NUMBER) {\n                    return new CellError(ErrorType.VALUE);\n                }\n                const window = windowArg.value;\n                let stride = windowArg.value;\n                if (ast.args.length === 3) {\n                    const strideArg = ast.args[2];\n                    if (strideArg.type === AstNodeType.NUMBER) {\n                        stride = strideArg.value;\n                    }\n                    else {\n                        return new CellError(ErrorType.VALUE);\n                    }\n                }\n                if (window > matrix.width || window > matrix.height\n                    || stride > window\n                    || (matrix.width - window) % stride !== 0 || (matrix.height - window) % stride !== 0) {\n                    return new CellError(ErrorType.VALUE);\n                }\n                return matrixSizeForPoolFunction(matrix, window, stride);\n            }\n            case 'TRANSPOSE': {\n                if (ast.args.length !== 1) {\n                    return new CellError(ErrorType.NA);\n                }\n                if (ast.args[0].type === AstNodeType.EMPTY) {\n                    return new CellError(ErrorType.NUM);\n                }\n                const size = checkMatrixSize(ast.args[0], formulaAddress);\n                return size instanceof CellError ? size : matrixSizeForTranspose(size);\n            }\n            default: {\n                return new CellError(ErrorType.VALUE);\n            }\n        }\n    }\n    else if (ast.type === AstNodeType.CELL_RANGE) {\n        const range = AbsoluteCellRange.fromCellRange(ast, formulaAddress);\n        return { width: range.width(), height: range.height() };\n    }\n    else if (ast.type === AstNodeType.NUMBER || ast.type === AstNodeType.CELL_REFERENCE) {\n        return { width: 1, height: 1 };\n    }\n    else {\n        return new CellError(ErrorType.VALUE);\n    }\n}\nexport class NotComputedMatrix {\n    constructor(size) {\n        this.size = size;\n    }\n    width() {\n        return this.size.width;\n    }\n    height() {\n        return this.size.height;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    get(col, row) {\n        throw Error('Matrix not computed yet.');\n    }\n}\nexport class Matrix {\n    constructor(matrix) {\n        this.size = new MatrixSize(matrix.length > 0 ? matrix[0].length : 0, matrix.length);\n        this.matrix = matrix;\n    }\n    addRows(aboveRow, numberOfRows) {\n        this.matrix.splice(aboveRow, 0, ...this.zeroArrays(numberOfRows, this.width()));\n        this.size.height += numberOfRows;\n    }\n    addColumns(aboveColumn, numberOfColumns) {\n        for (let i = 0; i < this.height(); i++) {\n            this.matrix[i].splice(aboveColumn, 0, ...new Array(numberOfColumns).fill(0));\n        }\n        this.size.width += numberOfColumns;\n    }\n    removeRows(startRow, endRow) {\n        if (this.outOfBound(0, startRow) || this.outOfBound(0, endRow)) {\n            throw Error('Matrix index out of bound');\n        }\n        const numberOfRows = endRow - startRow + 1;\n        this.matrix.splice(startRow, numberOfRows);\n        this.size.height -= numberOfRows;\n    }\n    removeColumns(leftmostColumn, rightmostColumn) {\n        if (this.outOfBound(leftmostColumn, 0) || this.outOfBound(rightmostColumn, 0)) {\n            throw Error('Matrix index out of bound');\n        }\n        const numberOfColumns = rightmostColumn - leftmostColumn + 1;\n        for (const row of this.matrix) {\n            row.splice(leftmostColumn, numberOfColumns);\n        }\n        this.size.width -= numberOfColumns;\n    }\n    zeroArrays(count, size) {\n        const result = [];\n        for (let i = 0; i < count; ++i) {\n            result.push(new Array(size).fill(0));\n        }\n        return result;\n    }\n    get(col, row) {\n        if (this.outOfBound(col, row)) {\n            throw Error('Matrix index out of bound');\n        }\n        return this.matrix[row][col];\n    }\n    set(col, row, value) {\n        if (this.outOfBound(col, row)) {\n            throw Error('Matrix index out of bound');\n        }\n        this.matrix[row][col] = value;\n    }\n    width() {\n        return this.size.width;\n    }\n    height() {\n        return this.size.height;\n    }\n    raw() {\n        return this.matrix;\n    }\n    *generateValues(leftCorner) {\n        for (let row = 0; row < this.size.height; ++row) {\n            for (let col = 0; col < this.size.width; ++col) {\n                yield [this.matrix[row][col], simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row)];\n            }\n        }\n    }\n    outOfBound(col, row) {\n        return col < 0 || row < 0 || row > this.size.height - 1 || col > this.size.width - 1;\n    }\n}\nexport class ErroredMatrix {\n    constructor(error, size) {\n        this.error = error;\n        this.size = size;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    get(col, row) {\n        return this.error;\n    }\n    width() {\n        return this.size.width;\n    }\n    height() {\n        return this.size.height;\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\n/**\n * Represents vertex bound to range\n */\nexport class RangeVertex {\n    constructor(range) {\n        this.range = range;\n        this.functionCache = new Map();\n        this.criterionFunctionCache = new Map();\n        this.dependentCacheRanges = new Set();\n        this.bruteForce = false;\n    }\n    get start() {\n        return this.range.start;\n    }\n    get end() {\n        return this.range.end;\n    }\n    get sheet() {\n        return this.range.start.sheet;\n    }\n    /**\n     * Returns cached value stored for given function\n     *\n     * @param functionName - name of the function\n     */\n    getFunctionValue(functionName) {\n        return this.functionCache.get(functionName) || null;\n    }\n    /**\n     * Stores cached value for given function\n     *\n     * @param functionName - name of the function\n     * @param value - cached value\n     */\n    setFunctionValue(functionName, value) {\n        this.functionCache.set(functionName, value);\n    }\n    /**\n     * Returns cached value for given cache key and criterion text representation\n     *\n     * @param cacheKey - key to retrieve from the cache\n     * @param criterionString - criterion text (ex. '<=5')\n     */\n    getCriterionFunctionValue(cacheKey, criterionString) {\n        const values = this.getCriterionFunctionValues(cacheKey);\n        const value = values.get(criterionString);\n        return value ? value[0] : null;\n    }\n    /**\n     * Returns all cached values stored for given criterion function\n     *\n     * @param cacheKey - key to retrieve from the cache\n     */\n    getCriterionFunctionValues(cacheKey) {\n        return this.criterionFunctionCache.get(cacheKey) || new Map();\n    }\n    /**\n     * Stores all values for given criterion function\n     *\n     * @param cacheKey - key to store in the cache\n     * @param values - map with values\n     */\n    setCriterionFunctionValues(cacheKey, values) {\n        this.criterionFunctionCache.set(cacheKey, values);\n    }\n    addDependentCacheRange(dependentRange) {\n        if (dependentRange !== this) {\n            this.dependentCacheRanges.add(dependentRange);\n        }\n    }\n    /**\n     * Clears function cache\n     */\n    clearCache() {\n        this.functionCache.clear();\n        this.criterionFunctionCache.clear();\n        this.dependentCacheRanges.forEach(range => range.criterionFunctionCache.clear());\n        this.dependentCacheRanges.clear();\n    }\n    /**\n     * Returns start of the range (it's top-left corner)\n     */\n    getStart() {\n        return this.start;\n    }\n    /**\n     * Returns end of the range (it's bottom-right corner)\n     */\n    getEnd() {\n        return this.end;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nvar NodeVisitStatus;\n(function (NodeVisitStatus) {\n    NodeVisitStatus[NodeVisitStatus[\"ON_STACK\"] = 0] = \"ON_STACK\";\n    NodeVisitStatus[NodeVisitStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n    NodeVisitStatus[NodeVisitStatus[\"POPPED\"] = 2] = \"POPPED\";\n})(NodeVisitStatus || (NodeVisitStatus = {}));\n/**\n * Provides graph directed structure\n *\n * Invariants:\n * - this.edges(node) exists if and only if node is in the graph\n * - this.specialNodes* are always subset of this.nodes\n * - this.edges(node) is subset of this.nodes (i.e. it does not contain nodes not present in graph) -- this invariant DOES NOT HOLD right now\n */\nexport class Graph {\n    constructor(dependencyQuery) {\n        this.dependencyQuery = dependencyQuery;\n        /** Set with nodes in graph. */\n        this.nodes = new Set();\n        this.specialNodes = new Set();\n        this.specialNodesStructuralChanges = new Set();\n        this.specialNodesRecentlyChanged = new Set();\n        this.infiniteRanges = new Set();\n        /** Nodes adjacency mapping. */\n        this.edges = new Map();\n    }\n    /**\n     * Adds node to a graph\n     *\n     * @param node - a node to be added\n     */\n    addNode(node) {\n        this.nodes.add(node);\n        if (!this.edges.has(node)) {\n            this.edges.set(node, new Set());\n        }\n    }\n    /**\n     * Adds edge between nodes.\n     *\n     * The nodes had to be added to the graph before, or the error will be raised\n     *\n     * @param fromNode - node from which edge is outcoming\n     * @param toNode - node to which edge is incoming\n     */\n    addEdge(fromNode, toNode) {\n        if (!this.nodes.has(fromNode)) {\n            throw new Error(`Unknown node ${fromNode}`);\n        }\n        if (!this.nodes.has(toNode)) {\n            throw new Error(`Unknown node ${toNode}`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.edges.get(fromNode).add(toNode);\n    }\n    removeEdge(fromNode, toNode) {\n        if (this.existsEdge(fromNode, toNode)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.edges.get(fromNode).delete(toNode);\n        }\n        else {\n            throw new Error('Edge does not exist');\n        }\n    }\n    softRemoveEdge(fromNode, toNode) {\n        var _a;\n        (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.delete(toNode);\n    }\n    removeIncomingEdges(toNode) {\n        this.edges.forEach((nodeEdges) => {\n            nodeEdges.delete(toNode);\n        });\n    }\n    /**\n     * Returns nodes adjacent to given node\n     *\n     * @param node - node to which adjacent nodes we want to retrieve\n     */\n    adjacentNodes(node) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.edges.get(node);\n    }\n    adjacentNodesCount(node) {\n        return this.adjacentNodes(node).size;\n    }\n    /**\n     * Checks whether a node is present in graph\n     *\n     * @param node - node to check\n     */\n    hasNode(node) {\n        return this.nodes.has(node);\n    }\n    /**\n     * Returns number of nodes in graph\n     */\n    nodesCount() {\n        return this.nodes.size;\n    }\n    /**\n     * Returns number of edges in graph\n     */\n    edgesCount() {\n        let result = 0;\n        this.edges.forEach((edgesForNode) => (result += edgesForNode.size));\n        return result;\n    }\n    removeNode(node) {\n        for (const adjacentNode of this.adjacentNodes(node).values()) {\n            this.markNodeAsSpecialRecentlyChanged(adjacentNode);\n        }\n        this.edges.delete(node);\n        this.nodes.delete(node);\n        this.specialNodes.delete(node);\n        this.specialNodesRecentlyChanged.delete(node);\n        this.specialNodesStructuralChanges.delete(node);\n        this.infiniteRanges.delete(node);\n        return this.removeDependencies(node);\n    }\n    markNodeAsSpecial(node) {\n        this.specialNodes.add(node);\n    }\n    markNodeAsSpecialRecentlyChanged(node) {\n        if (this.nodes.has(node)) {\n            this.specialNodesRecentlyChanged.add(node);\n        }\n    }\n    markNodeAsChangingWithStructure(node) {\n        this.specialNodesStructuralChanges.add(node);\n    }\n    clearSpecialNodesRecentlyChanged() {\n        this.specialNodesRecentlyChanged.clear();\n    }\n    markNodeAsInfiniteRange(node) {\n        this.infiniteRanges.add(node);\n    }\n    /**\n     * Checks whether exists edge between nodes\n     *\n     * @param fromNode - node from which edge is outcoming\n     * @param toNode - node to which edge is incoming\n     */\n    existsEdge(fromNode, toNode) {\n        var _a, _b;\n        return (_b = (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.has(toNode)) !== null && _b !== void 0 ? _b : false;\n    }\n    /*\n     * return a topological sort order, but separates vertices that exist in some cycle\n     */\n    topSortWithScc() {\n        return this.getTopSortedWithSccSubgraphFrom(Array.from(this.nodes), (_node) => true, (_node) => { });\n    }\n    /**\n     *\n     * computes topological sort order, but vertices that are on cycles are kept separate\n     *\n     * @param modifiedNodes - seed for computation. During engine init run, all of the vertices of grap. In recomputation run, changed vertices.\n     * @param operatingFunction - recomputes value of a node, and returns whether a change occured\n     * @param onCycle - action to be performed when node is on cycle\n     */\n    getTopSortedWithSccSubgraphFrom(modifiedNodes, operatingFunction, onCycle) {\n        const entranceTime = new Map();\n        const low = new Map();\n        const parent = new Map();\n        // node status life cycle:\n        // undefined -> ON_STACK -> PROCESSED -> POPPED\n        const nodeStatus = new Map();\n        const order = [];\n        let time = 0;\n        modifiedNodes.reverse().forEach((v) => {\n            if (nodeStatus.get(v) !== undefined) {\n                return;\n            }\n            time++;\n            const DFSstack = [v];\n            nodeStatus.set(v, NodeVisitStatus.ON_STACK);\n            while (DFSstack.length > 0) {\n                const u = DFSstack[DFSstack.length - 1];\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                switch (nodeStatus.get(u)) {\n                    case NodeVisitStatus.ON_STACK: {\n                        nodeStatus.set(u, NodeVisitStatus.PROCESSED);\n                        entranceTime.set(u, time);\n                        low.set(u, time);\n                        this.adjacentNodes(u).forEach((t) => {\n                            switch (nodeStatus.get(t)) {\n                                case NodeVisitStatus.POPPED:\n                                    break;\n                                case NodeVisitStatus.PROCESSED: { //backward edge\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                                    low.set(u, Math.min(low.get(u), entranceTime.get(t)));\n                                    break;\n                                }\n                                case undefined: // not visited\n                                // process as in the case of ON_STACK\n                                // eslint-disable-next-line no-fallthrough\n                                case NodeVisitStatus.ON_STACK: { // or visited but not processed\n                                    parent.set(t, u);\n                                    DFSstack.push(t);\n                                    nodeStatus.set(t, NodeVisitStatus.ON_STACK);\n                                    time++;\n                                    break;\n                                }\n                            }\n                        });\n                        break;\n                    }\n                    case NodeVisitStatus.PROCESSED: { // leaving this DFS subtree\n                        const pu = parent.get(u);\n                        if (pu !== null) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            low.set(pu, Math.min(low.get(pu), low.get(u)));\n                        }\n                        nodeStatus.set(u, NodeVisitStatus.POPPED);\n                        order.push(u);\n                        DFSstack.pop();\n                        break;\n                    }\n                    case NodeVisitStatus.POPPED: { // it's a 'shadow' copy, we already processed this vertex and can ignore it\n                        DFSstack.pop();\n                        break;\n                    }\n                }\n            }\n        });\n        const sccMap = new Map();\n        const sccNonSingletons = new Set();\n        order.reverse();\n        order.forEach((v) => {\n            if (entranceTime.get(v) === low.get(v)) {\n                sccMap.set(v, v);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                sccMap.set(v, sccMap.get(parent.get(v)));\n            }\n        });\n        this.edges.forEach((targets, v) => {\n            targets.forEach((u) => {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const uRepr = sccMap.get(u);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const vRepr = sccMap.get(v);\n                if (uRepr === vRepr) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    sccNonSingletons.add(uRepr);\n                }\n            });\n        });\n        const shouldBeUpdatedMapping = new Set(modifiedNodes);\n        const sorted = [];\n        const cycled = [];\n        order.forEach((t) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            if (!sccNonSingletons.has(sccMap.get(t))) {\n                sorted.push(t);\n                if (shouldBeUpdatedMapping.has(t) && operatingFunction(t)) {\n                    this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\n                }\n            }\n            else {\n                cycled.push(t);\n                onCycle(t);\n                this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\n            }\n        });\n        return { sorted, cycled };\n    }\n    getDependencies(vertex) {\n        const result = [];\n        this.edges.forEach((adjacentNodes, sourceNode) => {\n            if (adjacentNodes.has(vertex)) {\n                result.push(sourceNode);\n            }\n        });\n        return result;\n    }\n    destroy() {\n        this.edges.clear();\n        this.nodes.clear();\n        this.specialNodes.clear();\n        this.specialNodesStructuralChanges.clear();\n        this.clearSpecialNodesRecentlyChanged();\n    }\n    removeDependencies(node) {\n        const dependencies = this.dependencyQuery(node);\n        if (!dependencies) {\n            return new Set();\n        }\n        for (const dependency of dependencies) {\n            this.softRemoveEdge(dependency, node);\n        }\n        return dependencies;\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\n\nvar nativeReverse = [].reverse;\nvar test = [1, 2];\n\n// `Array.prototype.reverse` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reverse\n// fix for Safari 12.0 bug\n// https://bugs.webkit.org/show_bug.cgi?id=188794\n$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {\n  reverse: function reverse() {\n    // eslint-disable-next-line no-self-assign\n    if (isArray(this)) this.length = this.length;\n    return nativeReverse.call(this);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport class MatrixMapping {\n    constructor() {\n        this.matrixMapping = new Map();\n    }\n    getMatrix(range) {\n        return this.matrixMapping.get(range.toString());\n    }\n    setMatrix(range, vertex) {\n        this.matrixMapping.set(range.toString(), vertex);\n    }\n    removeMatrix(range) {\n        this.matrixMapping.delete(range.toString());\n    }\n    isFormulaMatrixInRow(sheet, row) {\n        for (const mtx of this.matrixMapping.values()) {\n            if (mtx.spansThroughSheetRows(sheet, row) && mtx.isFormula()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixInRows(span) {\n        for (const row of span.rows()) {\n            if (this.isFormulaMatrixInRow(span.sheet, row)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixInColumn(sheet, column) {\n        for (const mtx of this.matrixMapping.values()) {\n            if (mtx.spansThroughSheetColumn(sheet, column) && mtx.isFormula()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixInColumns(span) {\n        for (const col of span.columns()) {\n            if (this.isFormulaMatrixInColumn(span.sheet, col)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixInRange(range) {\n        for (const mtx of this.matrixMapping.values()) {\n            if (mtx.isFormula() && mtx.getRange().doesOverlap(range)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixAtAddress(address) {\n        for (const mtx of this.matrixMapping.values()) {\n            if (mtx.getRange().addressInRange(address) && mtx.isFormula()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    *numericMatrices() {\n        for (const [mtxKey, mtx] of this.matrixMapping.entries()) {\n            if (!mtx.isFormula()) {\n                yield [mtxKey, mtx];\n            }\n        }\n    }\n    *numericMatricesInRows(rowsSpan) {\n        for (const [mtxKey, mtx] of this.matrixMapping.entries()) {\n            if (mtx.spansThroughSheetRows(rowsSpan.sheet, rowsSpan.rowStart, rowsSpan.rowEnd) && !mtx.isFormula()) {\n                yield [mtxKey, mtx];\n            }\n        }\n    }\n    *numericMatricesInColumns(columnsSpan) {\n        for (const [mtxKey, mtx] of this.matrixMapping.entries()) {\n            if (mtx.spansThroughSheetColumn(columnsSpan.sheet, columnsSpan.columnStart, columnsSpan.columnEnd) && !mtx.isFormula()) {\n                yield [mtxKey, mtx];\n            }\n        }\n    }\n    *numericMatricesInRange(range) {\n        for (const [mtxKey, mtx] of this.matrixMapping.entries()) {\n            if (mtx.getRange().doesOverlap(range)) {\n                yield [mtxKey, mtx];\n            }\n        }\n    }\n    truncateMatricesByRows(rowsSpan) {\n        const verticesToRemove = Array();\n        for (const [key, matrix] of this.numericMatricesInRows(rowsSpan)) {\n            matrix.removeRows(rowsSpan);\n            if (matrix.height === 0) {\n                this.removeMatrix(key);\n                verticesToRemove.push(matrix);\n            }\n        }\n        return verticesToRemove;\n    }\n    truncateMatricesByColumns(columnsSpan) {\n        const verticesToRemove = Array();\n        for (const [key, matrix] of this.numericMatricesInColumns(columnsSpan)) {\n            matrix.removeColumns(columnsSpan);\n            if (matrix.width === 0) {\n                this.removeMatrix(key);\n                verticesToRemove.push(matrix);\n            }\n        }\n        return verticesToRemove;\n    }\n    destroy() {\n        this.matrixMapping.clear();\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { simpleCellAddress } from '../Cell';\n/**\n * Mapping from address ranges to range vertices\n */\nexport class RangeMapping {\n    constructor() {\n        /** Map in which actual data is stored. */\n        this.rangeMapping = new Map();\n    }\n    getMappingSize(sheet) {\n        var _a, _b;\n        return (_b = (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0;\n    }\n    /**\n     * Saves range vertex\n     *\n     * @param vertex - vertex to save\n     */\n    setRange(vertex) {\n        let sheetMap = this.rangeMapping.get(vertex.getStart().sheet);\n        if (sheetMap === undefined) {\n            sheetMap = new Map();\n            this.rangeMapping.set(vertex.getStart().sheet, sheetMap);\n        }\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\n        sheetMap.set(key, vertex);\n    }\n    removeRange(vertex) {\n        const sheet = vertex.getStart().sheet;\n        const sheetMap = this.rangeMapping.get(sheet);\n        if (sheetMap === undefined) {\n            return;\n        }\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\n        sheetMap.delete(key);\n        if (sheetMap.size === 0) {\n            this.rangeMapping.delete(sheet);\n        }\n    }\n    /**\n     * Returns associated vertex for given range\n     *\n     * @param start - top-left corner of the range\n     * @param end - bottom-right corner of the range\n     */\n    getRange(start, end) {\n        const sheetMap = this.rangeMapping.get(start.sheet);\n        const key = keyFromAddresses(start, end);\n        return sheetMap === null || sheetMap === void 0 ? void 0 : sheetMap.get(key);\n    }\n    fetchRange(start, end) {\n        const maybeRange = this.getRange(start, end);\n        if (!maybeRange) {\n            throw Error('Range does not exist');\n        }\n        return maybeRange;\n    }\n    truncateRanges(span, coordinate) {\n        const verticesToRemove = Array();\n        const updated = Array();\n        const sheet = span.sheet;\n        for (const [key, vertex] of this.entriesFromSheet(span.sheet)) {\n            const range = vertex.range;\n            if (span.start <= coordinate(vertex.range.end)) {\n                range.removeSpan(span);\n                if (range.shouldBeRemoved()) {\n                    this.removeByKey(sheet, key);\n                    verticesToRemove.push(vertex);\n                }\n                else {\n                    updated.push([key, vertex]);\n                }\n            }\n        }\n        const verticesToMerge = [];\n        for (const [oldKey, vertex] of updated.sort((left, right) => compareBy(left[1], right[1], coordinate))) {\n            const newKey = keyFromRange(vertex.range);\n            if (newKey === oldKey) {\n                continue;\n            }\n            const existingVertex = this.getByKey(sheet, newKey);\n            this.removeByKey(sheet, oldKey);\n            if (existingVertex !== undefined && vertex != existingVertex) {\n                verticesToMerge.push([existingVertex, vertex]);\n            }\n            else {\n                this.setRange(vertex);\n            }\n        }\n        return {\n            verticesToRemove,\n            verticesToMerge\n        };\n    }\n    moveAllRangesInSheetAfterRowByRows(sheet, row, numberOfRows) {\n        this.updateVerticesFromSheet(sheet, (key, vertex) => {\n            if (row <= vertex.start.row) {\n                vertex.range.shiftByRows(numberOfRows);\n                return vertex;\n            }\n            else if (row > vertex.start.row && row <= vertex.end.row) {\n                vertex.range.expandByRows(numberOfRows);\n                return vertex;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    moveAllRangesInSheetAfterColumnByColumns(sheet, column, numberOfColumns) {\n        this.updateVerticesFromSheet(sheet, (key, vertex) => {\n            if (column <= vertex.start.col) {\n                vertex.range.shiftByColumns(numberOfColumns);\n                return vertex;\n            }\n            else if (column > vertex.start.col && column <= vertex.end.col) {\n                vertex.range.expandByColumns(numberOfColumns);\n                return vertex;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet) {\n        this.updateVerticesFromSheet(sourceRange.sheet, (key, vertex) => {\n            if (sourceRange.containsRange(vertex.range)) {\n                vertex.range.shiftByColumns(toRight);\n                vertex.range.shiftByRows(toBottom);\n                vertex.range.moveToSheet(toSheet);\n                return vertex;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    removeRangesInSheet(sheet) {\n        if (this.rangeMapping.has(sheet)) {\n            const ranges = this.rangeMapping.get(sheet).values();\n            this.rangeMapping.delete(sheet);\n            return ranges;\n        }\n        return [][Symbol.iterator]();\n    }\n    *rangesInSheet(sheet) {\n        const sheetMap = this.rangeMapping.get(sheet);\n        if (!sheetMap) {\n            return;\n        }\n        yield* sheetMap.values();\n    }\n    *rangeVerticesContainedInRange(sourceRange) {\n        for (const rangeVertex of this.rangesInSheet(sourceRange.sheet)) {\n            if (sourceRange.containsRange(rangeVertex.range)) {\n                yield rangeVertex;\n            }\n        }\n    }\n    /**\n     * Finds smaller range does have own vertex.\n     *\n     * @param rangeMapping - range mapping dependency\n     * @param ranges - ranges to find smaller range in\n     */\n    findSmallerRange(range) {\n        if (range.height() > 1 && Number.isFinite(range.height())) {\n            const valuesRangeEndRowLess = simpleCellAddress(range.end.sheet, range.end.col, range.end.row - 1);\n            const rowLessVertex = this.getRange(range.start, valuesRangeEndRowLess);\n            if (rowLessVertex !== undefined) {\n                const restRange = new AbsoluteCellRange(simpleCellAddress(range.start.sheet, range.start.col, range.end.row), range.end);\n                return {\n                    smallerRangeVertex: rowLessVertex,\n                    restRange,\n                };\n            }\n        }\n        return {\n            smallerRangeVertex: null,\n            restRange: range,\n        };\n    }\n    destroy() {\n        this.rangeMapping.clear();\n    }\n    *entriesFromSheet(sheet) {\n        const sheetMap = this.rangeMapping.get(sheet);\n        if (!sheetMap) {\n            return;\n        }\n        yield* sheetMap.entries();\n    }\n    removeByKey(sheet, key) {\n        this.rangeMapping.get(sheet).delete(key);\n    }\n    getByKey(sheet, key) {\n        var _a;\n        return (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.get(key);\n    }\n    updateVerticesFromSheet(sheet, fn) {\n        const updated = Array();\n        for (const [key, vertex] of this.entriesFromSheet(sheet)) {\n            const result = fn(key, vertex);\n            if (result !== undefined) {\n                this.removeByKey(sheet, key);\n                updated.push(result);\n            }\n        }\n        updated.forEach((range) => {\n            this.setRange(range);\n        });\n    }\n}\nfunction keyFromAddresses(start, end) {\n    return `${start.col},${start.row},${end.col},${end.row}`;\n}\nfunction keyFromRange(range) {\n    return keyFromAddresses(range.start, range.end);\n}\nconst compareBy = (left, right, coordinate) => {\n    const leftStart = coordinate(left.range.start);\n    const rightStart = coordinate(left.range.start);\n    if (leftStart === rightStart) {\n        const leftEnd = coordinate(left.range.end);\n        const rightEnd = coordinate(right.range.end);\n        return leftEnd - rightEnd;\n    }\n    else {\n        return leftStart - rightStart;\n    }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD;\n\n// `Array.prototype.sort` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? nativeSort.call(toObject(this))\n      : nativeSort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { UIElement } from '../i18n';\nimport { NoSheetWithIdError, NoSheetWithNameError, SheetNameAlreadyTakenError } from '../errors';\nfunction canonicalize(sheetDisplayName) {\n    return sheetDisplayName.toLowerCase();\n}\nclass Sheet {\n    constructor(id, displayName) {\n        this.id = id;\n        this.displayName = displayName;\n    }\n    get canonicalName() {\n        return canonicalize(this.displayName);\n    }\n}\nexport class SheetMapping {\n    constructor(languages) {\n        this.languages = languages;\n        this.mappingFromCanonicalName = new Map();\n        this.mappingFromId = new Map();\n        this.lastSheetId = -1;\n        this.fetch = (sheetName) => {\n            const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\n            if (sheet === undefined) {\n                throw new NoSheetWithNameError(sheetName);\n            }\n            return sheet.id;\n        };\n        this.get = (sheetName) => {\n            const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\n            if (sheet) {\n                return sheet.id;\n            }\n            else {\n                return undefined;\n            }\n        };\n        this.fetchDisplayName = (sheetId) => {\n            return this.fetchSheetById(sheetId).displayName;\n        };\n        this.sheetNamePrefix = languages.getUITranslation(UIElement.NEW_SHEET_PREFIX);\n    }\n    addSheet(newSheetDisplayName = `${this.sheetNamePrefix}${this.lastSheetId + 2}`) {\n        const newSheetCanonicalName = canonicalize(newSheetDisplayName);\n        if (this.mappingFromCanonicalName.has(newSheetCanonicalName)) {\n            throw new SheetNameAlreadyTakenError(newSheetDisplayName);\n        }\n        this.lastSheetId++;\n        const sheet = new Sheet(this.lastSheetId, newSheetDisplayName);\n        this.store(sheet);\n        return sheet.id;\n    }\n    removeSheet(sheetId) {\n        const sheet = this.fetchSheetById(sheetId);\n        if (sheetId == this.lastSheetId) {\n            --this.lastSheetId;\n        }\n        this.mappingFromCanonicalName.delete(sheet.canonicalName);\n        this.mappingFromId.delete(sheet.id);\n    }\n    getDisplayName(sheetId) {\n        const sheet = this.mappingFromId.get(sheetId);\n        if (sheet) {\n            return sheet.displayName;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getDisplayNameByName(sheetName) {\n        const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\n        if (sheet) {\n            return sheet.displayName;\n        }\n        else {\n            return undefined;\n        }\n    }\n    *displayNames() {\n        for (const sheet of this.mappingFromCanonicalName.values()) {\n            yield sheet.displayName;\n        }\n    }\n    numberOfSheets() {\n        return this.mappingFromCanonicalName.size;\n    }\n    hasSheetWithId(sheetId) {\n        return this.mappingFromId.has(sheetId);\n    }\n    hasSheetWithName(sheetName) {\n        return this.mappingFromCanonicalName.has(canonicalize(sheetName));\n    }\n    renameSheet(sheetId, newDisplayName) {\n        const sheet = this.fetchSheetById(sheetId);\n        const currentDisplayName = sheet.displayName;\n        if (currentDisplayName === newDisplayName) {\n            return undefined;\n        }\n        const sheetWithThisCanonicalName = this.mappingFromCanonicalName.get(canonicalize(newDisplayName));\n        if (sheetWithThisCanonicalName && sheetWithThisCanonicalName.id !== sheet.id) {\n            throw new SheetNameAlreadyTakenError(newDisplayName);\n        }\n        const currentCanonicalName = sheet.canonicalName;\n        this.mappingFromCanonicalName.delete(currentCanonicalName);\n        sheet.displayName = newDisplayName;\n        this.store(sheet);\n        return currentDisplayName;\n    }\n    destroy() {\n        this.mappingFromCanonicalName.clear();\n        this.mappingFromId.clear();\n    }\n    sheetNames() {\n        return Array.from(this.mappingFromId.values()).map((s) => s.displayName);\n    }\n    store(sheet) {\n        this.mappingFromId.set(sheet.id, sheet);\n        this.mappingFromCanonicalName.set(sheet.canonicalName, sheet);\n    }\n    fetchSheetById(sheetId) {\n        const sheet = this.mappingFromId.get(sheetId);\n        if (sheet === undefined) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return sheet;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { buildTranslationPackage, TranslationPackage } from './TranslationPackage';\nexport { TranslationPackage, buildTranslationPackage };\nexport var UIElement;\n(function (UIElement) {\n    UIElement[\"NEW_SHEET_PREFIX\"] = \"NEW_SHEET_PREFIX\";\n})(UIElement || (UIElement = {}));\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { ErrorType } from '../Cell';\nimport { MissingTranslationError, ProtectedFunctionTranslationError } from '../errors';\nimport { UIElement } from './index';\nexport class TranslationPackage {\n    constructor(functions, errors, ui) {\n        this.functions = functions;\n        this.errors = errors;\n        this.ui = ui;\n        this._protectedTranslations = {\n            'VERSION': 'VERSION'\n        };\n        this.checkUI();\n        this.checkErrors();\n        this.checkFunctionTranslations(this.functions);\n        Object.assign(this.functions, this._protectedTranslations);\n    }\n    extendFunctions(additionalFunctionTranslations) {\n        this.checkFunctionTranslations(additionalFunctionTranslations);\n        Object.assign(this.functions, additionalFunctionTranslations);\n    }\n    buildFunctionMapping() {\n        return Object.keys(this.functions).reduce((ret, key) => {\n            ret[this.functions[key]] = key;\n            return ret;\n        }, {});\n    }\n    buildErrorMapping() {\n        return Object.keys(this.errors).reduce((ret, key) => {\n            ret[this.errors[key]] = key;\n            return ret;\n        }, {});\n    }\n    isFunctionTranslated(key) {\n        return this.functions[key] !== undefined;\n    }\n    getFunctionTranslations(functionIds) {\n        const translations = [];\n        for (const functionId of functionIds) {\n            if (this.isFunctionTranslated(functionId)) {\n                translations.push(this.functions[functionId]);\n            }\n        }\n        return translations;\n    }\n    getFunctionTranslation(key) {\n        const val = this.functions[key];\n        if (val === undefined) {\n            throw new MissingTranslationError(`functions.${key}`);\n        }\n        else {\n            return val;\n        }\n    }\n    getMaybeFunctionTranslation(key) {\n        return this.functions[key];\n    }\n    getErrorTranslation(key) {\n        const val = this.errors[key];\n        if (val === undefined) {\n            throw new MissingTranslationError(`errors.${key}`);\n        }\n        else {\n            return val;\n        }\n    }\n    getUITranslation(key) {\n        const val = this.ui[key];\n        if (val === undefined) {\n            throw new MissingTranslationError(`ui.${key}`);\n        }\n        else {\n            return val;\n        }\n    }\n    checkUI() {\n        for (const key of Object.values(UIElement)) {\n            if (!(key in this.ui)) {\n                throw new MissingTranslationError(`ui.${key}`);\n            }\n        }\n    }\n    checkErrors() {\n        for (const key of Object.values(ErrorType)) {\n            if (!(key in this.errors)) {\n                throw new MissingTranslationError(`errors.${key}`);\n            }\n        }\n    }\n    checkFunctionTranslations(functions) {\n        const functionNames = new Set(Object.getOwnPropertyNames(functions));\n        for (const protectedTranslation of Object.getOwnPropertyNames(this._protectedTranslations)) {\n            if (functionNames.has(protectedTranslation)) {\n                throw new ProtectedFunctionTranslationError(protectedTranslation);\n            }\n        }\n    }\n}\nexport function buildTranslationPackage(rawTranslationPackage) {\n    return new TranslationPackage(Object.assign({}, rawTranslationPackage.functions), Object.assign({}, rawTranslationPackage.errors), Object.assign({}, rawTranslationPackage.ui));\n}\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.github.io/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../Cell';\nexport class ArrayData {\n    constructor(size, data, _hasOnlyNumbers) {\n        this.size = size;\n        this.data = data;\n        this._hasOnlyNumbers = _hasOnlyNumbers;\n    }\n    range() {\n        return undefined;\n    }\n    hasOnlyNumbers() {\n        return this._hasOnlyNumbers;\n    }\n    *valuesFromTopLeftCorner() {\n        for (let i = 0; i < this.size.height; i++) {\n            for (let j = 0; j < this.size.width; j++) {\n                yield this.data[i][j];\n            }\n        }\n    }\n    raw() {\n        return this.data;\n    }\n    rawNumbers() {\n        if (this.hasOnlyNumbers()) {\n            return this.data;\n        }\n        else {\n            throw new Error('Data is not only numbers');\n        }\n    }\n}\nexport class OnlyRangeData {\n    constructor(size, _range, dependencyGraph) {\n        this.size = size;\n        this._range = _range;\n        this.dependencyGraph = dependencyGraph;\n    }\n    raw() {\n        this.ensureThatComputed();\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.data;\n    }\n    rawNumbers() {\n        if (this.hasOnlyNumbers()) {\n            return this.data;\n        }\n        else {\n            throw new Error('Data is not only numbers');\n        }\n    }\n    hasOnlyNumbers() {\n        this.ensureThatComputed();\n        if (this._hasOnlyNumbers === undefined) {\n            for (const v of this.valuesFromTopLeftCorner()) {\n                if (typeof v !== 'number') {\n                    this._hasOnlyNumbers = false;\n                    break;\n                }\n            }\n            this._hasOnlyNumbers = true;\n        }\n        return this._hasOnlyNumbers;\n    }\n    range() {\n        return this._range;\n    }\n    *valuesFromTopLeftCorner() {\n        this.ensureThatComputed();\n        for (let i = 0; i < this.data.length; i++) {\n            for (let j = 0; j < this.data[0].length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield this.data[i][j];\n            }\n        }\n    }\n    ensureThatComputed() {\n        if (this.data === undefined) {\n            this.data = this.computeDataFromDependencyGraph();\n        }\n    }\n    computeDataFromDependencyGraph() {\n        const result = [];\n        let i = 0;\n        let row = [];\n        for (const cellFromRange of this._range.addresses(this.dependencyGraph)) {\n            const value = this.dependencyGraph.getCellValue(cellFromRange);\n            if (value instanceof SimpleRangeValue) {\n                row.push(new CellError(ErrorType.VALUE));\n            }\n            else if (typeof value === 'number') {\n                row.push(value);\n            }\n            else {\n                row.push(value);\n                this._hasOnlyNumbers = false;\n            }\n            ++i;\n            if (i % this.size.width === 0) {\n                i = 0;\n                result.push([...row]);\n                row = [];\n            }\n        }\n        return result;\n    }\n}\nexport class SimpleRangeValue {\n    constructor(data) {\n        this.data = data;\n    }\n    get size() {\n        return this.data.size;\n    }\n    static onlyNumbersDataWithRange(data, size, _range) {\n        return new SimpleRangeValue(new ArrayData(size, data, true));\n    }\n    static onlyNumbersDataWithoutRange(data, size) {\n        return new SimpleRangeValue(new ArrayData(size, data, true));\n    }\n    static onlyRange(range, dependencyGraph) {\n        return new SimpleRangeValue(new OnlyRangeData({ width: range.width(), height: range.height() }, range, dependencyGraph));\n    }\n    static fromScalar(scalar) {\n        const hasOnlyNumbers = (typeof scalar === 'number');\n        return new SimpleRangeValue(new ArrayData({ width: 1, height: 1 }, [[scalar]], hasOnlyNumbers));\n    }\n    width() {\n        return this.data.size.width;\n    }\n    height() {\n        return this.data.size.height;\n    }\n    raw() {\n        return this.data.raw();\n    }\n    *valuesFromTopLeftCorner() {\n        yield* this.data.valuesFromTopLeftCorner();\n    }\n    numberOfElements() {\n        return this.data.size.width * this.data.size.height;\n    }\n    hasOnlyNumbers() {\n        return this.data.hasOnlyNumbers();\n    }\n    rawNumbers() {\n        return this.data.rawNumbers();\n    }\n    range() {\n        return this.data.range();\n    }\n    sameDimensionsAs(other) {\n        return this.width() === other.width() && this.height() === other.height();\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { EmptyValue } from '../Cell';\n/**\n * Represents singleton vertex bound to all empty cells\n */\nexport class EmptyCellVertex {\n    constructor(address //might be outdated!\n    ) {\n        this.address = address;\n    }\n    /**\n     * Retrieves cell value bound to that singleton\n     */\n    getCellValue() {\n        return EmptyValue;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\n/**\n * Represents vertex which keeps static cell value\n */\nexport class ValueCellVertex {\n    constructor(cellValue) {\n        this.cellValue = cellValue;\n    }\n    /**\n     * Returns cell value stored in vertex\n     */\n    getCellValue() {\n        return this.cellValue;\n    }\n    /**\n     * Sets computed cell value stored in this vertex\n     */\n    setCellValue(cellValue) {\n        this.cellValue = cellValue;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError } from '../Cell';\nexport class ParsingErrorVertex {\n    constructor(errors, rawInput) {\n        this.errors = errors;\n        this.rawInput = rawInput;\n    }\n    getCellValue() {\n        return CellError.parsingError();\n    }\n    getFormula() {\n        return this.rawInput;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from '../../Cell';\n/**\n * Mapping from cell addresses to vertices\n *\n * Uses Map to store addresses, having minimal memory usage for sparse sheets but not necessarily constant set/lookup.\n */\nexport class SparseStrategy {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        /**\n         * Map of Maps in which actual data is stored.\n         *\n         * Key of map in first level is column number.\n         * Key of map in second level is row number.\n         */\n        this.mapping = new Map();\n    }\n    /** @inheritDoc */\n    getCell(address) {\n        const colMapping = this.mapping.get(address.col);\n        if (!colMapping) {\n            return null;\n        }\n        return colMapping.get(address.row) || null;\n    }\n    /** @inheritDoc */\n    setCell(address, newVertex) {\n        this.width = Math.max(this.width, address.col + 1);\n        this.height = Math.max(this.height, address.row + 1);\n        let colMapping = this.mapping.get(address.col);\n        if (!colMapping) {\n            colMapping = new Map();\n            this.mapping.set(address.col, colMapping);\n        }\n        colMapping.set(address.row, newVertex);\n    }\n    /** @inheritDoc */\n    has(address) {\n        const colMapping = this.mapping.get(address.col);\n        if (!colMapping) {\n            return false;\n        }\n        return !!colMapping.get(address.row);\n    }\n    /** @inheritDoc */\n    getHeight() {\n        return this.height;\n    }\n    /** @inheritDoc */\n    getWidth() {\n        return this.width;\n    }\n    removeCell(address) {\n        const colMapping = this.mapping.get(address.col);\n        if (colMapping) {\n            colMapping.delete(address.row);\n        }\n    }\n    addRows(row, numberOfRows) {\n        this.mapping.forEach((rowMapping) => {\n            const tmpMapping = new Map();\n            rowMapping.forEach((vertex, rowNumber) => {\n                if (rowNumber >= row) {\n                    tmpMapping.set(rowNumber + numberOfRows, vertex);\n                    rowMapping.delete(rowNumber);\n                }\n            });\n            tmpMapping.forEach((vertex, rowNumber) => {\n                rowMapping.set(rowNumber, vertex);\n            });\n        });\n        this.height += numberOfRows;\n    }\n    addColumns(column, numberOfColumns) {\n        const tmpMapping = new Map();\n        this.mapping.forEach((rowMapping, colNumber) => {\n            if (colNumber >= column) {\n                tmpMapping.set(colNumber + numberOfColumns, rowMapping);\n                this.mapping.delete(colNumber);\n            }\n        });\n        tmpMapping.forEach((rowMapping, colNumber) => {\n            this.mapping.set(colNumber, rowMapping);\n        });\n        this.width += numberOfColumns;\n    }\n    removeRows(removedRows) {\n        this.mapping.forEach((rowMapping) => {\n            const tmpMapping = new Map();\n            rowMapping.forEach((vertex, rowNumber) => {\n                if (rowNumber >= removedRows.rowStart) {\n                    rowMapping.delete(rowNumber);\n                    if (rowNumber > removedRows.rowEnd) {\n                        tmpMapping.set(rowNumber - removedRows.numberOfRows, vertex);\n                    }\n                }\n            });\n            tmpMapping.forEach((vertex, rowNumber) => {\n                rowMapping.set(rowNumber, vertex);\n            });\n        });\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\n    }\n    removeColumns(removedColumns) {\n        const tmpMapping = new Map();\n        this.mapping.forEach((rowMapping, colNumber) => {\n            if (colNumber >= removedColumns.columnStart) {\n                this.mapping.delete(colNumber);\n                if (colNumber > removedColumns.columnEnd) {\n                    tmpMapping.set(colNumber - removedColumns.numberOfColumns, rowMapping);\n                }\n            }\n        });\n        tmpMapping.forEach((rowMapping, colNumber) => {\n            this.mapping.set(colNumber, rowMapping);\n        });\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\n    }\n    *getEntries(sheet) {\n        for (const [colNumber, col] of this.mapping) {\n            for (const [rowNumber, value] of col) {\n                yield [simpleCellAddress(sheet, colNumber, rowNumber), value];\n            }\n        }\n    }\n    *verticesFromColumn(column) {\n        const colMapping = this.mapping.get(column);\n        if (!colMapping) {\n            return;\n        }\n        for (const [_, vertex] of colMapping) {\n            yield vertex;\n        }\n    }\n    *verticesFromRow(row) {\n        for (const colMapping of this.mapping.values()) {\n            const rowVertex = colMapping.get(row);\n            if (rowVertex) {\n                yield rowVertex;\n            }\n        }\n    }\n    *verticesFromColumnsSpan(columnsSpan) {\n        for (const column of columnsSpan.columns()) {\n            const colMapping = this.mapping.get(column);\n            if (!colMapping) {\n                continue;\n            }\n            for (const [_, vertex] of colMapping) {\n                yield vertex;\n            }\n        }\n    }\n    *verticesFromRowsSpan(rowsSpan) {\n        for (const colMapping of this.mapping.values()) {\n            for (const row of rowsSpan.rows()) {\n                const rowVertex = colMapping.get(row);\n                if (rowVertex) {\n                    yield rowVertex;\n                }\n            }\n        }\n    }\n    *entriesFromRowsSpan(rowsSpan) {\n        for (const [col, colMapping] of this.mapping.entries()) {\n            for (const row of rowsSpan.rows()) {\n                const rowVertex = colMapping.get(row);\n                if (rowVertex) {\n                    yield [simpleCellAddress(rowsSpan.sheet, col, row), rowVertex];\n                }\n            }\n        }\n    }\n    *entriesFromColumnsSpan(columnsSpan) {\n        for (const col of columnsSpan.columns()) {\n            const colMapping = this.mapping.get(col);\n            if (colMapping) {\n                for (const [row, vertex] of colMapping.entries()) {\n                    yield [simpleCellAddress(columnsSpan.sheet, col, row), vertex];\n                }\n            }\n        }\n    }\n    *vertices() {\n        for (const [_, col] of this.mapping) {\n            for (const [_, value] of col) {\n                if (value) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from '../../Cell';\n/**\n * Mapping from cell addresses to vertices\n *\n * Uses Array to store addresses, having minimal memory usage for dense sheets and constant set/lookup.\n */\nexport class DenseStrategy {\n    /**\n     * @param width - width of the stored sheet\n     * @param height - height of the stored sheet\n     */\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.mapping = new Array(height);\n        for (let i = 0; i < height; i++) {\n            this.mapping[i] = new Array(width);\n        }\n    }\n    /** @inheritDoc */\n    getCell(address) {\n        return this.getCellVertex(address.col, address.row);\n    }\n    /** @inheritDoc */\n    setCell(address, newVertex) {\n        this.width = Math.max(this.width, address.col + 1);\n        this.height = Math.max(this.height, address.row + 1);\n        const rowMapping = this.mapping[address.row];\n        if (!rowMapping) {\n            this.mapping[address.row] = new Array(this.width);\n        }\n        this.mapping[address.row][address.col] = newVertex;\n    }\n    /** @inheritDoc */\n    has(address) {\n        const row = this.mapping[address.row];\n        if (!row) {\n            return false;\n        }\n        return !!row[address.col];\n    }\n    /** @inheritDoc */\n    getHeight() {\n        return this.height;\n    }\n    /** @inheritDoc */\n    getWidth() {\n        return this.width;\n    }\n    removeCell(address) {\n        if (this.mapping[address.row] !== undefined) {\n            delete this.mapping[address.row][address.col];\n        }\n    }\n    addRows(row, numberOfRows) {\n        const newRows = [];\n        for (let i = 0; i < numberOfRows; i++) {\n            newRows.push(new Array(this.width));\n        }\n        this.mapping.splice(row, 0, ...newRows);\n        this.height += numberOfRows;\n    }\n    addColumns(column, numberOfColumns) {\n        for (let i = 0; i < this.height; i++) {\n            this.mapping[i].splice(column, 0, ...new Array(numberOfColumns));\n        }\n        this.width += numberOfColumns;\n    }\n    removeRows(removedRows) {\n        this.mapping.splice(removedRows.rowStart, removedRows.numberOfRows);\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\n    }\n    removeColumns(removedColumns) {\n        for (let i = 0; i < this.height; i++) {\n            this.mapping[i].splice(removedColumns.columnStart, removedColumns.numberOfColumns);\n        }\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\n    }\n    *getEntries(sheet) {\n        for (let y = 0; y < this.height; ++y) {\n            for (let x = 0; x < this.width; ++x) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield [simpleCellAddress(sheet, x, y), vertex];\n                }\n            }\n        }\n    }\n    *verticesFromColumn(column) {\n        for (let y = 0; y < this.height; ++y) {\n            const vertex = this.getCellVertex(column, y);\n            if (vertex) {\n                yield vertex;\n            }\n        }\n    }\n    *verticesFromRow(row) {\n        for (let x = 0; x < this.width; ++x) {\n            const vertex = this.getCellVertex(x, row);\n            if (vertex) {\n                yield vertex;\n            }\n        }\n    }\n    *verticesFromColumnsSpan(columnsSpan) {\n        for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield vertex;\n                }\n            }\n        }\n    }\n    *verticesFromRowsSpan(rowsSpan) {\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield vertex;\n                }\n            }\n        }\n    }\n    *entriesFromRowsSpan(rowsSpan) {\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield [simpleCellAddress(rowsSpan.sheet, x, y), vertex];\n                }\n            }\n        }\n    }\n    *entriesFromColumnsSpan(columnsSpan) {\n        for (let y = 0; y < this.height; ++y) {\n            for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield [simpleCellAddress(columnsSpan.sheet, x, y), vertex];\n                }\n            }\n        }\n    }\n    *vertices() {\n        for (let y = 0; y < this.height; ++y) {\n            for (let x = 0; x < this.width; ++x) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield vertex;\n                }\n            }\n        }\n    }\n    getCellVertex(x, y) {\n        const row = this.mapping[y];\n        if (row) {\n            return this.mapping[y][x] || null;\n        }\n        return null;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, EmptyValue, ErrorType, simpleCellAddress } from './Cell';\nimport { NamedExpressions } from './NamedExpressions';\nimport { SimpleRangeValue } from './interpreter/InterpreterValue';\n/**\n * A list of cells which values changed after the operation, their absolute addresses and new values.\n */\nexport class ExportedCellChange {\n    constructor(address, newValue) {\n        this.address = address;\n        this.newValue = newValue;\n    }\n    get col() {\n        return this.address.col;\n    }\n    get row() {\n        return this.address.row;\n    }\n    get sheet() {\n        return this.address.sheet;\n    }\n    get value() {\n        return this.newValue;\n    }\n}\nexport class ExportedNamedExpressionChange {\n    constructor(name, newValue) {\n        this.name = name;\n        this.newValue = newValue;\n    }\n}\nexport class DetailedCellError {\n    constructor(error, value) {\n        this.value = value;\n        this.type = error.type;\n        this.message = error.message || '';\n    }\n}\nexport class Exporter {\n    constructor(config, namedExpressions) {\n        this.config = config;\n        this.namedExpressions = namedExpressions;\n    }\n    exportChange(change) {\n        if (change.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\n            const namedExpression = this.namedExpressions.namedExpressionInAddress(change.row);\n            if (!namedExpression) {\n                throw 'Missing named expression';\n            }\n            return new ExportedNamedExpressionChange(namedExpression.displayName, this.exportValue(change.value));\n        }\n        else {\n            return new ExportedCellChange(simpleCellAddress(change.sheet, change.col, change.row), this.exportValue(change.value));\n        }\n    }\n    exportValue(value) {\n        if (value instanceof SimpleRangeValue) {\n            return this.detailedError(new CellError(ErrorType.VALUE));\n        }\n        else if (this.config.smartRounding && typeof value == 'number') {\n            return this.cellValueRounding(value);\n        }\n        else if (value instanceof CellError) {\n            return this.detailedError(value);\n        }\n        else if (value === EmptyValue) {\n            return null;\n        }\n        else {\n            return value;\n        }\n    }\n    detailedError(error) {\n        return new DetailedCellError(error, this.config.translationPackage.getErrorTranslation(error.type));\n    }\n    cellValueRounding(value) {\n        if (value === 0) {\n            return value;\n        }\n        const magnitudeMultiplierExponent = Math.floor(Math.log10(Math.abs(value)));\n        const placesMultiplier = Math.pow(10, this.config.precisionRounding - magnitudeMultiplierExponent);\n        if (value < 0) {\n            return -Math.round(-value * placesMultiplier) / placesMultiplier;\n        }\n        else {\n            return Math.round(value * placesMultiplier) / placesMultiplier;\n        }\n    }\n}\n","var $ = require('../internals/export');\n\nvar log = Math.log;\nvar LOG10E = Math.LOG10E;\n\n// `Math.log10` method\n// https://tc39.github.io/ecma262/#sec-math.log10\n$({ target: 'Math', stat: true }, {\n  log10: function log10(x) {\n    return log(x) * LOG10E;\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { AstNodeType } from './parser';\nexport class InternalNamedExpression {\n    constructor(displayName, address, added, options) {\n        this.displayName = displayName;\n        this.address = address;\n        this.added = added;\n        this.options = options;\n    }\n    normalizeExpressionName() {\n        return this.displayName.toLowerCase();\n    }\n    copy() {\n        return new InternalNamedExpression(this.displayName, this.address, this.added, this.options);\n    }\n}\nclass WorkbookStore {\n    constructor() {\n        this.mapping = new Map();\n    }\n    has(expressionName) {\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\n    }\n    isNameAvailable(expressionName) {\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\n        const namedExpression = this.mapping.get(normalizedExpressionName);\n        return !(namedExpression && namedExpression.added);\n    }\n    add(namedExpression) {\n        this.mapping.set(namedExpression.normalizeExpressionName(), namedExpression);\n    }\n    get(expressionName) {\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\n    }\n    getExisting(expressionName) {\n        const namedExpression = this.mapping.get(this.normalizeExpressionName(expressionName));\n        if (namedExpression && namedExpression.added) {\n            return namedExpression;\n        }\n        else {\n            return undefined;\n        }\n    }\n    remove(expressionName) {\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\n        const namedExpression = this.mapping.get(normalizedExpressionName);\n        if (namedExpression) {\n            namedExpression.added = false;\n        }\n    }\n    getAllNamedExpressions() {\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\n    }\n    normalizeExpressionName(expressionName) {\n        return expressionName.toLowerCase();\n    }\n}\nclass WorksheetStore {\n    constructor() {\n        this.mapping = new Map();\n    }\n    add(namedExpression) {\n        this.mapping.set(this.normalizeExpressionName(namedExpression.displayName), namedExpression);\n    }\n    get(expressionName) {\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\n    }\n    has(expressionName) {\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\n    }\n    normalizeExpressionName(expressionName) {\n        return expressionName.toLowerCase();\n    }\n    isNameAvailable(expressionName) {\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\n        return !this.mapping.has(normalizedExpressionName);\n    }\n    remove(expressionName) {\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\n        const namedExpression = this.mapping.get(normalizedExpressionName);\n        if (namedExpression) {\n            this.mapping.delete(normalizedExpressionName);\n        }\n    }\n}\nexport class NamedExpressions {\n    constructor() {\n        this.nextNamedExpressionRow = 0;\n        this.workbookStore = new WorkbookStore();\n        this.worksheetStores = new Map();\n        this.addressCache = new Map();\n    }\n    isNameAvailable(expressionName, sheetId) {\n        if (sheetId === undefined) {\n            return this.workbookStore.isNameAvailable(expressionName);\n        }\n        else {\n            return this.worksheetStore(sheetId).isNameAvailable(expressionName);\n        }\n    }\n    namedExpressionInAddress(row) {\n        const namedExpression = this.addressCache.get(row);\n        if (namedExpression && namedExpression.added) {\n            return namedExpression;\n        }\n        else {\n            return undefined;\n        }\n    }\n    namedExpressionForScope(expressionName, sheetId) {\n        if (sheetId === undefined) {\n            return this.workbookStore.getExisting(expressionName);\n        }\n        else {\n            return this.worksheetStore(sheetId).get(expressionName);\n        }\n    }\n    nearestNamedExpression(expressionName, sheetId) {\n        return this.worksheetStore(sheetId).get(expressionName) || this.workbookStore.getExisting(expressionName);\n    }\n    isExpressionInScope(expressionName, sheetId) {\n        return this.worksheetStore(sheetId).has(expressionName);\n    }\n    isNameValid(expressionName) {\n        if (/^[A-Za-z]+[0-9]+$/.test(expressionName)) {\n            return false;\n        }\n        return /^[A-Za-z\\u00C0-\\u02AF_][A-Za-z0-9\\u00C0-\\u02AF\\._]*$/.test(expressionName);\n    }\n    addNamedExpression(expressionName, sheetId, options) {\n        if (sheetId === undefined) {\n            let namedExpression = this.workbookStore.get(expressionName);\n            if (namedExpression) {\n                namedExpression.added = true;\n                namedExpression.displayName = expressionName;\n                namedExpression.options = options;\n            }\n            else {\n                namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), true, options);\n                this.workbookStore.add(namedExpression);\n            }\n            this.addressCache.set(namedExpression.address.row, namedExpression);\n            return namedExpression;\n        }\n        else {\n            const store = this.worksheetStore(sheetId);\n            const namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), true, options);\n            store.add(namedExpression);\n            this.addressCache.set(namedExpression.address.row, namedExpression);\n            return namedExpression;\n        }\n    }\n    worksheetStore(sheetId) {\n        let store = this.worksheetStores.get(sheetId);\n        if (!store) {\n            store = new WorksheetStore();\n            this.worksheetStores.set(sheetId, store);\n        }\n        return store;\n    }\n    namedExpressionOrPlaceholder(expressionName, sheetId) {\n        const namedExpression = this.worksheetStore(sheetId).get(expressionName);\n        if (namedExpression) {\n            return namedExpression;\n        }\n        else {\n            let namedExpression = this.workbookStore.get(expressionName);\n            if (namedExpression === undefined) {\n                namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), false);\n                this.workbookStore.add(namedExpression);\n            }\n            return namedExpression;\n        }\n    }\n    workbookNamedExpressionOrPlaceholder(expressionName) {\n        let namedExpression = this.workbookStore.get(expressionName);\n        if (namedExpression === undefined) {\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), false);\n            this.workbookStore.add(namedExpression);\n        }\n        return namedExpression;\n    }\n    remove(expressionName, sheetId) {\n        let store;\n        if (sheetId === undefined) {\n            store = this.workbookStore;\n        }\n        else {\n            store = this.worksheetStore(sheetId);\n        }\n        const namedExpression = store.get(expressionName);\n        if (namedExpression === undefined || !namedExpression.added) {\n            throw 'Named expression does not exist';\n        }\n        store.remove(expressionName);\n        this.addressCache.delete(namedExpression.address.row);\n    }\n    getAllNamedExpressionsNames() {\n        return this.workbookStore.getAllNamedExpressions().map((ne) => ne.displayName);\n    }\n    nextAddress() {\n        return simpleCellAddress(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, 0, this.nextNamedExpressionRow++);\n    }\n    lookupNextAddress(expressionName, sheetId) {\n        if (sheetId === undefined) {\n            const namedExpression = this.workbookStore.get(expressionName);\n            if (namedExpression) {\n                return namedExpression.address;\n            }\n        }\n        return simpleCellAddress(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, 0, this.nextNamedExpressionRow);\n    }\n}\nNamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS = -1;\nexport const doesContainRelativeReferences = (ast) => {\n    switch (ast.type) {\n        case AstNodeType.EMPTY:\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n        case AstNodeType.ERROR:\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\n            return false;\n        case AstNodeType.CELL_REFERENCE:\n            return !ast.reference.isAbsolute();\n        case AstNodeType.CELL_RANGE:\n        case AstNodeType.COLUMN_RANGE:\n        case AstNodeType.ROW_RANGE:\n            return !ast.start.isAbsolute();\n        case AstNodeType.NAMED_EXPRESSION:\n            return false;\n        case AstNodeType.PERCENT_OP:\n        case AstNodeType.PLUS_UNARY_OP:\n        case AstNodeType.MINUS_UNARY_OP: {\n            return doesContainRelativeReferences(ast.value);\n        }\n        case AstNodeType.CONCATENATE_OP:\n        case AstNodeType.EQUALS_OP:\n        case AstNodeType.NOT_EQUAL_OP:\n        case AstNodeType.LESS_THAN_OP:\n        case AstNodeType.GREATER_THAN_OP:\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n        case AstNodeType.MINUS_OP:\n        case AstNodeType.PLUS_OP:\n        case AstNodeType.TIMES_OP:\n        case AstNodeType.DIV_OP:\n        case AstNodeType.POWER_OP:\n            return doesContainRelativeReferences(ast.left) || doesContainRelativeReferences(ast.right);\n        case AstNodeType.PARENTHESIS:\n            return doesContainRelativeReferences(ast.expression);\n        case AstNodeType.FUNCTION_CALL: {\n            return ast.args.some((arg) => doesContainRelativeReferences(arg));\n        }\n    }\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { CellType, getCellType, getCellValueType } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { buildTranslationPackage } from './i18n';\nimport { normalizeAddedIndexes, normalizeRemovedIndexes } from './Operations';\nimport { EvaluationSuspendedError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, NotAFormulaError } from './errors';\nimport { AstNodeType, simpleCellAddressFromString, simpleCellAddressToString, } from './parser';\nimport { Emitter, Events } from './Emitter';\nimport { BuildEngineFactory } from './BuildEngineFactory';\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\n/**\n * This is a class for creating HyperFormula instance, all the following public methods\n * ale related to this class.\n *\n * The instance can be created only by calling one of the static methods\n * `buildFromArray`, `buildFromSheets` or `buildEmpty` and should be disposed of with the\n * `destroy` method when it's no longer needed to free the resources.\n *\n * The instance can be seen as a workbook where worksheets can be created and\n * manipulated. They are organized within a widely know structure of columns and rows\n * which can be manipulated as well. The smallest possible data unit are the cells, which\n * may contain simple values or formulas to be calculated.\n *\n * All CRUD methods are called directly on HyperFormula instance and will trigger\n * corresponding lifecycle events. The events are marked accordingly, as well as thrown\n * errors so they can be correctly handled.\n */\nexport class HyperFormula {\n    constructor(_config, _stats, _dependencyGraph, _columnSearch, _parser, _unparser, _cellContentParser, _evaluator, _lazilyTransformingAstService, _crudOperations, _exporter, _namedExpressions, _serialization, _functionRegistry) {\n        this._config = _config;\n        this._stats = _stats;\n        this._dependencyGraph = _dependencyGraph;\n        this._columnSearch = _columnSearch;\n        this._parser = _parser;\n        this._unparser = _unparser;\n        this._cellContentParser = _cellContentParser;\n        this._evaluator = _evaluator;\n        this._lazilyTransformingAstService = _lazilyTransformingAstService;\n        this._crudOperations = _crudOperations;\n        this._exporter = _exporter;\n        this._namedExpressions = _namedExpressions;\n        this._serialization = _serialization;\n        this._functionRegistry = _functionRegistry;\n        this._emitter = new Emitter();\n        this._evaluationSuspended = false;\n    }\n    /**\n     * Calls the `graph` method on the dependency graph.\n     * Allows to execute `graph` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get graph() {\n        return this.dependencyGraph.graph;\n    }\n    /**\n     * Calls the `rangeMapping` method on the dependency graph.\n     * Allows to execute `rangeMapping` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get rangeMapping() {\n        return this.dependencyGraph.rangeMapping;\n    }\n    /**\n     * Calls the `matrixMapping` method on the dependency graph.\n     * Allows to execute `matrixMapping` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get matrixMapping() {\n        return this.dependencyGraph.matrixMapping;\n    }\n    /**\n     * Calls the `sheetMapping` method on the dependency graph.\n     * Allows to execute `sheetMapping` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get sheetMapping() {\n        return this.dependencyGraph.sheetMapping;\n    }\n    /**\n     * Calls the `addressMapping` method on the dependency graph.\n     * Allows to execute `addressMapping` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get addressMapping() {\n        return this.dependencyGraph.addressMapping;\n    }\n    /** @internal */\n    get dependencyGraph() {\n        return this._dependencyGraph;\n    }\n    /** @internal */\n    get evaluator() {\n        return this._evaluator;\n    }\n    /** @internal */\n    get columnSearch() {\n        return this._columnSearch;\n    }\n    /** @internal */\n    get lazilyTransformingAstService() {\n        return this._lazilyTransformingAstService;\n    }\n    /**\n     * Returns state of the validity of the license key.\n     *\n     * @internal\n     */\n    get licenseKeyValidityState() {\n        return this._config.licenseKeyValidityState;\n    }\n    static buildFromEngineState(engine) {\n        return new HyperFormula(engine.config, engine.stats, engine.dependencyGraph, engine.columnSearch, engine.parser, engine.unparser, engine.cellContentParser, engine.evaluator, engine.lazilyTransformingAstService, engine.crudOperations, engine.exporter, engine.namedExpressions, engine.serialization, engine.functionRegistry);\n    }\n    /**\n     * Builds the engine for a sheet from a two-dimensional array representation.\n     * The engine is created with a single sheet.\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\n     * If not specified, the engine will be built with the default configuration.\n     *\n     * @param {Sheet} sheet - two-dimensional array representation of sheet\n     * @param {Partial<ConfigParams>} configInput - engine configuration\n     *\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\n     * @throws [[InvalidArgumentsError]] when sheet is not an array of arrays\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\n     *\n     * @example\n     * ```js\n     * // data represented as an array\n     * const sheetData = [\n     *  ['0', '=SUM(1,2,3)', '52'],\n     *  ['=SUM(A1:C1)', '', '=A1'],\n     *  ['2', '=SUM(A1:C1)', '91'],\n     * ];\n     *\n     * // method with optional config parameter maxColumns\n     * const hfInstance = HyperFormula.buildFromArray(sheetData, { maxColumns: 1000 });\n     * ```\n     *\n     * @category Factories\n     */\n    static buildFromArray(sheet, configInput) {\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheet(sheet, configInput));\n    }\n    /**\n     * Builds the engine from an object containing multiple sheets with names.\n     * The engine is created with one or more sheets.\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\n     * If not specified the engine will be built with the default configuration.\n     *\n     * @param {Sheet} sheets - object with sheets definition\n     * @param {Partial<ConfigParams>} configInput - engine configuration\n     *\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\n     * @throws [[InvalidArgumentsError]] when any sheet is not an array of arrays\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\n     *\n     * @example\n     * ```js\n     * // data represented as an object with sheets: Sheet1 and Sheet2\n     * const sheetData = {\n     *  'Sheet1': [\n     *    ['1', '', '=Sheet2!$A1'],\n     *    ['', '2', '=SUM(1,2,3)'],\n     *    ['=Sheet2!$A2', '2', ''],\n     *   ],\n     *  'Sheet2': [\n     *    ['', '4', '=Sheet1!$B1'],\n     *    ['', '8', '=SUM(9,3,3)'],\n     *    ['=Sheet1!$B1', '2', ''],\n     *   ],\n     * };\n     *\n     * // method with optional config parameter useColumnIndex\n     * const hfInstance = HyperFormula.buildFromSheets(sheetData, { useColumnIndex: true });\n     * ```\n     *\n     * @category Factories\n     */\n    static buildFromSheets(sheets, configInput) {\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheets(sheets, configInput));\n    }\n    /**\n     * Builds an empty engine instance.\n     * Can be configured with the optional parameter that represents a [[ConfigParams]].\n     * If not specified the engine will be built with the default configuration.\n     *\n     * @param {Partial<ConfigParams>} configInput - engine configuration\n     *\n     * @example\n     * ```js\n     * // build with no initial data and with optional config parameter maxColumns\n     * const hfInstance = HyperFormula.buildEmpty({ maxColumns: 1000 });\n     * ```\n     *\n     * @category Factories\n     */\n    static buildEmpty(configInput) {\n        return this.buildFromEngineState(BuildEngineFactory.buildEmpty(configInput));\n    }\n    /**\n     * Returns registered language from its code string.\n     *\n     * @param {string} languageCode - code string of the translation package\n     *\n     * @throws [[LanguageNotRegisteredError]] when trying to retrieve not registered language\n     *\n     * @example\n     * ```js\n     * // return registered language\n     * const language = HyperFormula.getLanguage('enGB');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getLanguage(languageCode) {\n        const val = this.registeredLanguages.get(languageCode);\n        if (val === undefined) {\n            throw new LanguageNotRegisteredError();\n        }\n        else {\n            return val;\n        }\n    }\n    /**\n     * Registers language from under given code string.\n     *\n     * @param {string} languageCode - code string of the translation package\n     * @param {RawTranslationPackage} languagePackage - translation package to be registered\n     *\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\n     * @throws [[LanguageAlreadyRegisteredError]] when given language is already registered\n     *\n     * @example\n     * ```js\n     * // return registered language\n     * HyperFormula.registerLanguage('plPL', plPL);\n     * ```\n     *\n     * @category Static Methods\n     */\n    static registerLanguage(languageCode, languagePackage) {\n        if (this.registeredLanguages.has(languageCode)) {\n            throw new LanguageAlreadyRegisteredError();\n        }\n        else {\n            this.registeredLanguages.set(languageCode, buildTranslationPackage(languagePackage));\n        }\n    }\n    /**\n     * Unregisters language that is registered under given code string.\n     *\n     * @param {string} languageCode - code string of the translation package\n     *\n     * @throws [[LanguageNotRegisteredError]] when given language is not registered\n     *\n     * @example\n     * ```js\n     * // register the language for the instance\n     * HyperFormula.registerLanguage('plPL', plPL);\n     *\n     * // unregister plPL\n     * HyperFormula.unregisterLanguage('plPL');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static unregisterLanguage(languageCode) {\n        if (this.registeredLanguages.has(languageCode)) {\n            this.registeredLanguages.delete(languageCode);\n        }\n        else {\n            throw new LanguageNotRegisteredError();\n        }\n    }\n    /**\n     * Returns all registered languages codes.\n     *\n     * @example\n     * ```js\n     * // should return all registered language codes: ['enGB', 'plPL']\n     * const registeredLangugaes = HyperFormula.getRegisteredLanguagesCodes();\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getRegisteredLanguagesCodes() {\n        return Array.from(this.registeredLanguages.keys());\n    }\n    /**\n     * Registers all functions in a given plugin with optional translations\n     *\n     * @param {FunctionPluginDefinition} plugin - plugin class\n     * @param {FunctionTranslationsPackage} translations - optional package of function names translations\n     *\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\n     *\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * // register the plugin\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\n     * ```\n     *\n     * @category Static Methods\n     */\n    static registerFunctionPlugin(plugin, translations) {\n        FunctionRegistry.registerFunctionPlugin(plugin, translations);\n    }\n    /**\n     * Unregisters all functions defined in given plugin\n     *\n     * @param {FunctionPluginDefinition} plugin - plugin class\n     *\n     * @example\n     * ```js\n     * // get the class of a plugin\n     * const registeredPluginClass = HyperFormula.getFunctionPlugin('EXAMPLE');\n     *\n     * // unregister all functions defined in a plugin of ID 'EXAMPLE'\n     * HyperFormula.unregisterFunctionPlugin(registeredPluginClass);\n     * ```\n     *\n     * @category Static Methods\n     */\n    static unregisterFunctionPlugin(plugin) {\n        FunctionRegistry.unregisterFunctionPlugin(plugin);\n    }\n    /**\n     * Registers a function with a given id if such exists in a plugin\n     *\n     * @param {string} functionId - function id, e.g. 'SUMIF'\n     * @param {FunctionPluginDefinition} plugin - plugin class\n     * @param translations\n     *\n     * @throws [[FunctionPluginValidationError]] when function with a given id does not exists in plugin or plugin class definition is not consistent with metadata\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * // register a function\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\n     * ```\n     *\n     * @category Static Methods\n     */\n    static registerFunction(functionId, plugin, translations) {\n        FunctionRegistry.registerFunction(functionId, plugin, translations);\n    }\n    /**\n     * Unregisters a function with a given id\n     *\n     * @param {string} functionId - function id, e.g. 'SUMIF'\n     *\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * // register a function\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\n     *\n     * // unregister a function\n     * HyperFormula.unregisterFunction('EXAMPLE');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static unregisterFunction(functionId) {\n        FunctionRegistry.unregisterFunction(functionId);\n    }\n    /**\n     * Clears function registry\n     *\n     * @example\n     * ```js\n     * HyperFormula.unregisterAllFunctions();\n     * ```\n     *\n     * @category Static Methods\n     */\n    static unregisterAllFunctions() {\n        FunctionRegistry.unregisterAll();\n    }\n    /**\n     * Returns translated names of all registered functions for a given language\n     *\n     * @param {string} code - language code\n     *\n     * @example\n     * ```js\n     * // return a list of function names registered for enGB\n     * const allNames = HyperFormula.getRegisteredFunctionNames('enGB');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getRegisteredFunctionNames(code) {\n        const functionIds = FunctionRegistry.getRegisteredFunctionIds();\n        const language = this.getLanguage(code);\n        return language.getFunctionTranslations(functionIds);\n    }\n    /**\n     * Returns class of a plugin used by function with given id\n     *\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\n     *\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * // register a plugin\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\n     *\n     * // return the class of a given plugin\n     * const myFunctionClass = HyperFormula.getFunctionPlugin('EXAMPLE');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getFunctionPlugin(functionId) {\n        return FunctionRegistry.getFunctionPlugin(functionId);\n    }\n    /**\n     * Returns classes of all plugins registered in this instance of HyperFormula\n     *\n     * @example\n     * ```js\n     * // return classes of all plugins\n     * const allClasses = HyperFormula.getAllFunctionPlugins();\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getAllFunctionPlugins() {\n        return FunctionRegistry.getPlugins();\n    }\n    /**\n     * Returns the cell value of a given address.\n     * Applies rounding and post-processing.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2,3)', '2'],\n     * ]);\n     *\n     * // get value of A1 cell, should be '6'\n     * const A1Value = hfInstance.getCellValue({ sheet: 0, col: 0, row: 0 });\n     *\n     * // get value of B1 cell, should be '2'\n     * const B1Value = hfInstance.getCellValue({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellValue(cellAddress) {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getCellValue(cellAddress);\n    }\n    ensureEvaluationIsNotSuspended() {\n        if (this._evaluationSuspended) {\n            throw new EvaluationSuspendedError();\n        }\n    }\n    /**\n     * Returns a normalized formula string from the cell of a given address or `undefined` for an address that does not exist and empty values.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2,3)', '0'],\n     * ]);\n     *\n     * // should return a normalized A1 cell formula: '=SUM(1,2,3)'\n     * const A1Formula = hfInstance.getCellFormula({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return a normalized B1 cell formula: 'undefined'\n     * const B1Formula = hfInstance.getCellFormula({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellFormula(cellAddress) {\n        return this._serialization.getCellFormula(cellAddress);\n    }\n    /**\n     * Returns [[CellValue]] which a serialized content of the cell of a given address either a cell formula, an explicit value, or an error.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2,3)', '0'],\n     * ]);\n     *\n     * // should return serialized content of A1 cell: '=SUM(1,2,3)'\n     * const cellA1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return serialized content of B1 cell: '0'\n     * const cellB1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellSerialized(cellAddress) {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getCellSerialized(cellAddress);\n    }\n    /**\n     * Returns an array of arrays of [[CellValue]] with values of all cells from [[Sheet]].\n     * Applies rounding and post-processing.\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @param {number} sheetId - sheet ID number\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['0', '=SUM(1,2,3)', '=A1'],\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\n     *  ['2', '=SUM(A1:C1)', '=C1'],\n     * ]);\n     *\n     * // should return all values of a sheet: [[0, 6, 0], [1, '1.0%', 0], [2, 6, 0]]\n     * const sheetValues = hfInstance.getSheetValues(0);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetValues(sheetId) {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getSheetValues(sheetId);\n    }\n    /**\n     * Returns an array with normalized formula strings from [[Sheet]] or `undefined` for a cells that have no value.\n     *\n     * @param {SimpleCellAddress} sheetId - sheet ID number\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['0', '=SUM(1,2,3)', '=A1'],\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\n     *  ['2', '=SUM(A1:C1)', '=C1'],\n     * ]);\n     *\n     * // should return all formulas of a sheet:\n     * // [\n     * //  [undefined, '=SUM(1,2,3)', '=A1'],\n     * //  [undefined, '=TEXT(A2, \"0.0%\")', '=C1'],\n     * //  [undefined, '=SUM(A1:C1)', '=C1'],\n     * // ];\n     * const sheetFormulas = hfInstance.getSheetFormulas(0);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetFormulas(sheetId) {\n        return this._serialization.getSheetFormulas(sheetId);\n    }\n    /**\n     * Returns an array of arrays of [[NoErrorCellValue]] with serialized content of cells from [[Sheet]], either a cell formula or an explicit value.\n     *\n     * @param {SimpleCellAddress} sheetId - sheet ID number\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['0', '=SUM(1,2,3)', '=A1'],\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\n     *  ['2', '=SUM(A1:C1)', '=C1'],\n     * ]);\n     *\n     * // should return:\n     * // [\n     * //  ['0', '=SUM(1,2,3)', '=A1'],\n     * //  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\n     * //  ['2', '=SUM(A1:C1)', '=C1'],\n     * // ];\n     * const serializedContent = hfInstance.getSheetSerialized(0);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetSerialized(sheetId) {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getSheetSerialized(sheetId);\n    }\n    /**\n     * Returns a map containing dimensions of all sheets for the engine instance represented as a key-value pairs where keys are sheet IDs and dimensions are returned as numbers, width and height respectively.\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   Sheet1: [\n     *    ['1', '2', '=Sheet2!$A1'],\n     *   ],\n     *   Sheet2: [\n     *    ['3'],\n     *    ['4'],\n     *   ],\n     * });\n     *\n     * // should return the dimensions of all sheets:\n     * // { Sheet1: { width: 3, height: 1 }, Sheet2: { width: 1, height: 2 } }\n     * const allSheetsDimensions = hfInstance.getAllSheetsDimensions();\n     * ```\n     *\n     * @category Sheets\n     */\n    getAllSheetsDimensions() {\n        return this._serialization.genericAllSheetsGetter((arg) => this.getSheetDimensions(arg));\n    }\n    /**\n     * Returns dimensions of a specified sheet.\n     * The sheet dimensions is represented with numbers: width and height.\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @param {number} sheetId - sheet ID number\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *    ['1', '2', '=Sheet2!$A1'],\n     * ]);\n     *\n     * // should return provided sheet's dimensions: { width: 3, height: 1 }\n     * const sheetDimensions = hfInstance.getSheetDimensions(0);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetDimensions(sheetId) {\n        return {\n            width: this.dependencyGraph.getSheetWidth(sheetId),\n            height: this.dependencyGraph.getSheetHeight(sheetId),\n        };\n    }\n    /**\n     * Returns values of all sheets in a form of an object which property keys are strings and values are arrays of arrays of [[CellValue]].\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '=A1+10', '3'],\n     * ]);\n     *\n     * // should return all sheets values: { Sheet1: [ [ 1, 11, 3 ] ] }\n     * const allSheetsValues = hfInstance.getAllSheetsValues();\n     * ```\n     *\n     * @category Sheets\n     */\n    getAllSheetsValues() {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getAllSheetsValues();\n    }\n    /**\n     * Returns formulas of all sheets in a form of an object which property keys are strings and values are arrays of arrays of strings or possibly `undefined` when the call does not contain a formula.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '=A1+10'],\n     * ]);\n     *\n     * // should return only formulas: { Sheet1: [ [ undefined, undefined, '=A1+10' ] ] }\n     * const allSheetsFormulas = hfInstance.getAllSheetsFormulas();\n     * ```\n     * @category Sheets\n     */\n    getAllSheetsFormulas() {\n        return this._serialization.getAllSheetsFormulas();\n    }\n    /**\n     * Returns formulas or values of all sheets in a form of an object which property keys are strings and values are arrays of arrays of [[CellValue]].\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '=A1+10'],\n     * ]);\n     *\n     * // should return all sheets serialized content: { Sheet1: [ [ 1, 2, '=A1+10' ] ] }\n     * const allSheetsSerialized = hfInstance.getAllSheetsSerialized();\n     * ```\n     *\n     * @category Sheets\n     */\n    getAllSheetsSerialized() {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getAllSheetsSerialized();\n    }\n    /**\n     * Updates the config with given new parameters.\n     *\n     * @param {Partial<ConfigParams>} newParams configuration options to be updated or added\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // add a config param, for example maxColumns,\n     * // you can check the configuration with getConfig method\n     * hfInstance.updateConfig({ maxColumns: 1000 });\n     * ```\n     *\n     * @category Instance\n     */\n    updateConfig(newParams) {\n        const newConfig = this._config.mergeConfig(newParams);\n        const configNewLanguage = this._config.mergeConfig({ language: newParams.language });\n        const serializedSheets = this._serialization.withNewConfig(configNewLanguage, this._namedExpressions).getAllSheetsSerialized();\n        const newEngine = BuildEngineFactory.rebuildWithConfig(newConfig, serializedSheets, this._stats);\n        this._config = newEngine.config;\n        this._stats = newEngine.stats;\n        this._dependencyGraph = newEngine.dependencyGraph;\n        this._columnSearch = newEngine.columnSearch;\n        this._parser = newEngine.parser;\n        this._unparser = newEngine.unparser;\n        this._cellContentParser = newEngine.cellContentParser;\n        this._evaluator = newEngine.evaluator;\n        this._lazilyTransformingAstService = newEngine.lazilyTransformingAstService;\n        this._crudOperations = newEngine.crudOperations;\n        this._exporter = newEngine.exporter;\n        this._namedExpressions = newEngine.namedExpressions;\n        this._serialization = newEngine.serialization;\n        this._functionRegistry = newEngine.functionRegistry;\n    }\n    /**\n     * Returns current configuration of the engine instance.\n     *\n     * @example\n     * ```js\n     * // should return all config parameters including default and those which were added\n     * const hfConfig = hfInstance.getConfig();\n     * ```\n     *\n     * @category Instance\n     */\n    getConfig() {\n        return this._config.getConfig();\n    }\n    /**\n     * Serializes and deserializes whole engine, effectively reloading it.\n     *\n     * @example\n     * ```js\n     * hfInstance.rebuildAndRecalculate();\n     * ```\n     *\n     * @category Instance\n     */\n    rebuildAndRecalculate() {\n        this.updateConfig({});\n    }\n    /**\n     * Returns a snapshot of computation time statistics.\n     * It returns a map with key-value pairs where keys are enums for stat type and time (number).\n     *\n     * @internal\n     *\n     * @category Instance\n     */\n    getStats() {\n        return this._stats.snapshot();\n    }\n    /**\n     * Undo the previous operation.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoOperationToUndoError]] when there is no operation running that can be undone\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     *  ['3', ''],\n     * ]);\n     *\n     * // perform CRUD operation, for example remove the second row\n     * hfInstance.removeRows(0, [1, 1]);\n     *\n     * // do an undo, it should return the changes\n     * const changes = hfInstance.undo();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    undo() {\n        this._crudOperations.undo();\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Re-do recently undone operation.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoOperationToRedoError]] when there is no operation running that can be re-done\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     *  ['3'],\n     * ]);\n     *\n     * // perform CRUD operation, for example remove the second row\n     * hfInstance.removeRows(0, [1, 1]);\n     *\n     * // do an undo, it should return prvious values: [['1'], ['2'], ['3']]\n     * hfInstance.undo();\n     *\n     * // do a redo, it should return the values after removing the second row: [['1'], ['3']]\n     * const changes = hfInstance.redo();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    redo() {\n        this._crudOperations.redo();\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Checks if there is at least one operation that can be undone.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     *  ['3'],\n     * ]);\n     *\n     * // perform CRUD operation, for example remove the second row\n     * hfInstance.removeRows(0, [1, 1]);\n     *\n     * // should return 'true', it is possible to undo last operation\n     * // which is removing rows in this example\n     * const isSomethingToUndo = hfInstance.isThereSomethingToUndo();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    isThereSomethingToUndo() {\n        return this._crudOperations.isThereSomethingToUndo();\n    }\n    /**\n     * Checks if there is at least one operation that can be re-done.\n     *\n     * @example\n     * ```js\n     * hfInstance.undo();\n     *\n     * // when there is an action to redo, this will return 'true'\n     * const isSomethingToRedo = hfInstance.isThereSomethingToRedo();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    isThereSomethingToRedo() {\n        return this._crudOperations.isThereSomethingToRedo();\n    }\n    /**\n     * Returns information whether it is possible to change the content in a rectangular area bounded by the box.\n     * If returns `true`, doing [[setCellContents]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside selected cells, the address is invalid or the sheet does not exist.\n     *\n     * @param {SimpleCellAddress} topLeftCornerAddress -  top left corner of block of cells\n     * @param {number} width - width of the box\n     * @param {number} height - height of the box\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // choose the address and assign it to a variable\n     * const address = { col: 0, row: 0, sheet: 0 };\n     *\n     * // should return 'true' for this example, it is possible to set content of\n     * // width 2, height 1 in the first row and column of sheet 0\n     * const isSettable = hfInstance.isItPossibleToSetCellContents(address, 2, 1);\n     * ```\n     *\n     * @category Cells\n     */\n    isItPossibleToSetCellContents(topLeftCornerAddress, width = 1, height = 1) {\n        try {\n            this._crudOperations.ensureRangeInSizeLimits(AbsoluteCellRange.spanFrom(topLeftCornerAddress, width, height));\n            for (let i = 0; i < width; i++) {\n                for (let j = 0; j < height; j++) {\n                    this._crudOperations.ensureItIsPossibleToChangeContent({\n                        col: topLeftCornerAddress.col + i,\n                        row: topLeftCornerAddress.row + j,\n                        sheet: topLeftCornerAddress.sheet\n                    });\n                }\n            }\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Sets the content for a block of cells of a given coordinates.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {SimpleCellAddress} topLeftCornerAddress - top left corner of block of cells\n     * @param {(RawCellContent[][]|RawCellContent)} cellContents - array with content\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the value is not an array of arrays or a raw cell value\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws an error when it is an attempt to set cells content inside matrices during batch operation\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '=A1'],\n     * ]);\n     *\n     * // should set the content, returns:\n     * // [{\n     * //   address: { sheet: 0, col: 3, row: 0 },\n     * //   newValue: 2,\n     * // }]\n     * const changes = hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\n     * ```\n     *\n     * @category Cells\n     */\n    setCellContents(topLeftCornerAddress, cellContents) {\n        this._crudOperations.setCellContents(topLeftCornerAddress, cellContents);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to add rows into a specified position in a given sheet.\n     * Checks against particular rules to ascertain that addRows can be called.\n     * If returns `true`, doing [[addRows]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected rows.\n     *\n     * @param {number} sheetId - sheet ID in which rows will be added\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '3'],\n     * ]);\n     *\n     * // should return 'true' for this example,\n     * // it is possible to add one row in the second row of sheet 0\n     * const isAddable = hfInstance.isItPossibleToAddRows(0, [1, 1]);\n     * ```\n     *\n     * @category Rows\n     */\n    isItPossibleToAddRows(sheetId, ...indexes) {\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\n        try {\n            this._crudOperations.ensureItIsPossibleToAddRows(sheetId, ...normalizedIndexes);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Adds multiple rows into a specified position in a given sheet.\n     * Does nothing if rows are outside of effective sheet size.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - sheet ID in which rows will be added\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws [[TargetLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values\n     * const changes = hfInstance.addRows(0, [0, 1]);\n     * ```\n     *\n     * @category Rows\n     */\n    addRows(sheetId, ...indexes) {\n        this._crudOperations.addRows(sheetId, ...indexes);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to remove rows from a specified position in a given sheet.\n     * Checks against particular rules to ascertain that removeRows can be called.\n     * If returns `true`, doing [[removeRows]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected rows.\n     *\n     * @param {number} sheetId - sheet ID from which rows will be removed\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return 'true' for this example\n     * // it is possible to remove one row from row 1 of sheet 0\n     * const isRemovable = hfInstance.isItPossibleToRemoveRows(0, [1, 1]);\n     * ```\n     *\n     * @category Rows\n     */\n    isItPossibleToRemoveRows(sheetId, ...indexes) {\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\n        try {\n            this._crudOperations.ensureItIsPossibleToRemoveRows(sheetId, ...normalizedIndexes);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Removes multiple rows from a specified position in a given sheet.\n     * Does nothing if rows are outside of the effective sheet size.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - sheet ID from which rows will be removed\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[SourceLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return: [{ sheet: 0, col: 1, row: 2, value: null }] for this example\n     * const changes = hfInstance.removeRows(0, [1, 1]);\n     * ```\n     *\n     * @category Rows\n     */\n    removeRows(sheetId, ...indexes) {\n        this._crudOperations.removeRows(sheetId, ...indexes);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to add columns into a specified position in a given sheet.\n     * Checks against particular rules to ascertain that addColumns can be called.\n     * If returns `true`, doing [[addColumns]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected columns.\n     *\n     * @param {number} sheetId - sheet ID in which columns will be added\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return 'true' for this example,\n     * // it is possible to add 1 column in sheet 0, at column 1\n     * const isAddable = hfInstance.isItPossibleToAddColumns(0, [1, 1]);\n     * ```\n     *\n     * @category Columns\n     */\n    isItPossibleToAddColumns(sheetId, ...indexes) {\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\n        try {\n            this._crudOperations.ensureItIsPossibleToAddColumns(sheetId, ...normalizedIndexes);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Adds multiple columns into a specified position in a given sheet.\n     * Does nothing if the columns are outside of the effective sheet size.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - sheet ID in which columns will be added\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws [[TargetLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=RAND()', '42'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, for this example:\n     * // [{\n     * //   address: { sheet: 0, col: 1, row: 0 },\n     * //   newValue: 0.92754862796338,\n     * // }]\n     * const changes = hfInstance.addColumns(0, [0, 1]);\n     * ```\n     *\n     * @category Columns\n     */\n    addColumns(sheetId, ...indexes) {\n        this._crudOperations.addColumns(sheetId, ...indexes);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to remove columns from a specified position in a given sheet.\n     * Checks against particular rules to ascertain that removeColumns can be called.\n     * If returns `true`, doing [[removeColumns]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected columns.\n     *\n     * @param {number} sheetId - sheet ID from which columns will be removed\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [column, amount]\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return 'true' for this example\n     * // it is possible to remove one column, in place of the second column of sheet 0\n     * const isRemovable = hfInstance.isItPossibleToRemoveColumns(0, [1, 1]);\n     * ```\n     *\n     * @category Columns\n     */\n    isItPossibleToRemoveColumns(sheetId, ...indexes) {\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\n        try {\n            this._crudOperations.ensureItIsPossibleToRemoveColumns(sheetId, ...normalizedIndexes);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Removes multiple columns from a specified position in a given sheet.\n     * Does nothing if columns are outside of the effective sheet size.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - sheet ID from which columns will be removed\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount]\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SourceLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['0', '=SUM(1,2,3)', '=A1'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, in this example it will return:\n     * // [{\n     * //   address: { sheet: 0, col: 1, row: 0 },\n     * //   newValue: { error: [CellError], value: '#REF!' },\n     * // }]\n     * const changes = hfInstance.removeColumns(0, [0, 1]);\n     * ```\n     *\n     * @category Columns\n     */\n    removeColumns(sheetId, ...indexes) {\n        this._crudOperations.removeColumns(sheetId, ...indexes);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to move cells to a specified position in a given sheet.\n     * Checks against particular rules to ascertain that moveCells can be called.\n     * If returns `true`, doing [[moveCells]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected columns, the target location has matrix or the provided address is invalid.\n     *\n     * @param {SimpleCellAddress} sourceLeftCorner - address of the upper left corner of a moved block\n     * @param {number} width - width of the cell block that is being moved\n     * @param {number} height - height of the cell block that is being moved\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // choose the coordinates and assign them to variables\n     * const source = { sheet: 0, col: 1, row: 0 };\n     * const destination = { sheet: 0, col: 3, row: 0 };\n     *\n     * // should return 'true' for this example\n     * // it is possible to move a block of width 1 and height 1\n     * // from the corner: column 1 and row 0 of sheet 0\n     * // into destination corner: column 3, row 0 of sheet 0\n     * const isMovable = hfInstance.isItPossibleToMoveCells(source, 1, 1, destination);\n     * ```\n     * @category Cells\n     */\n    isItPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        try {\n            this._crudOperations.operations.ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Moves the content of a cell block from source to the target location.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {SimpleCellAddress} sourceLeftCorner - address of the upper left corner of a moved block\n     * @param {number} width - width of the cell block that is being moved\n     * @param {number} height - height of the cell block that is being moved\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws [[SourceLocationHasMatrixError]] when the source location has matrix inside - matrix cannot be moved\n     * @throws [[TargetLocationHasMatrixError]] when the target location has matrix inside - cells cannot be replaced by the matrix\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=RAND()', '42'],\n     * ]);\n     *\n     * // choose the coordinates and assign them to variables\n     * const source = { sheet: 0, col: 1, row: 0 };\n     * const destination = { sheet: 0, col: 3, row: 0 };\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, for this example:\n     * // [{\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: 0.93524248002062,\n     * // }]\n     * const changes = hfInstance.moveCells(source, 1, 1, destination);\n     * ```\n     *\n     * @category Cells\n     */\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        this._crudOperations.moveCells(sourceLeftCorner, width, height, destinationLeftCorner);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to move a particular number of rows to a specified position in a given sheet.\n     * Checks against particular rules to ascertain that moveRows can be called.\n     * If returns `true`, doing [[moveRows]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected rows, the target location has matrix or the provided address is invalid.\n     *\n     * @param {number} sheetId - a sheet number in which the operation will be performed\n     * @param {number} startRow - number of the first row to move\n     * @param {number} numberOfRows - number of rows to move\n     * @param {number} targetRow - row number before which rows will be moved\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return 'true' for this example\n     * // it is possible to move one row from row 0 into row 2\n     * const isMovable = hfInstance.isItPossibleToMoveRows(0, 0, 1, 2);\n     * ```\n     *\n     * @category Rows\n     */\n    isItPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow) {\n        try {\n            this._crudOperations.ensureItIsPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Moves a particular number of rows to a specified position in a given sheet.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - a sheet number in which the operation will be performed\n     * @param {number} startRow - number of the first row to move\n     * @param {number} numberOfRows - number of rows to move\n     * @param {number} targetRow - row number before which rows will be moved\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SourceLocationHasMatrixError]] when the source location has matrix inside - matrix cannot be moved\n     * @throws [[TargetLocationHasMatrixError]] when the target location has matrix inside - cells cannot be replaced by the matrix\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values\n     * const changes = hfInstance.moveRows(0, 0, 1, 2);\n     * ```\n     *\n     * @category Rows\n     */\n    moveRows(sheetId, startRow, numberOfRows, targetRow) {\n        this._crudOperations.moveRows(sheetId, startRow, numberOfRows, targetRow);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to move a particular number of columns to a specified position in a given sheet.\n     * Checks against particular rules to ascertain that moveColumns can be called.\n     * If returns `true`, doing [[moveColumns]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected columns, the target location has matrix or the provided address is invalid.\n     *\n     * @param {number} sheetId - a sheet number in which the operation will be performed\n     * @param {number} startColumn - number of the first column to move\n     * @param {number} numberOfColumns - number of columns to move\n     * @param {number} targetColumn - column number before which columns will be moved\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return 'true' for this example\n     * // it is possible to move one column from column 1 into column 2 of sheet 0\n     * const isMovable = hfInstance.isItPossibleToMoveColumns(0, 1, 1, 2);\n     * ```\n     *\n     * @category Columns\n     */\n    isItPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\n        try {\n            this._crudOperations.ensureItIsPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Moves a particular number of columns to a specified position in a given sheet.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - a sheet number in which the operation will be performed\n     * @param {number} startColumn - number of the first column to move\n     * @param {number} numberOfColumns - number of columns to move\n     * @param {number} targetColumn - column number before which columns will be moved\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SourceLocationHasMatrixError]] when the source location has matrix inside - matrix cannot be moved\n     * @throws [[TargetLocationHasMatrixError]] when the target location has matrix inside - cells cannot be replaced by the matrix\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '3', '=RAND()', '=SUM(A1:C1)'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, for this example:\n     * // [{\n     * //   address: { sheet: 0, col: 1, row: 0 },\n     * //   newValue: 0.16210054671639,\n     * //  }, {\n     * //   address: { sheet: 0, col: 4, row: 0 },\n     * //   newValue: 6.16210054671639,\n     * // }]\n     * const changes = hfInstance.moveColumns(0, 1, 1, 2);\n     * ```\n     *\n     * @category Columns\n     */\n    moveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\n        this._crudOperations.moveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Stores a copy of the cell block in internal clipboard for the further paste.\n     * Returns values of cells for use in external clipboard.\n     *\n     * @param {SimpleCellAddress} sourceLeftCorner - address of the upper left corner of a copied block\n     * @param {number} width - width of the cell block being copied\n     * @param {number} height - height of the cell block being copied\n     *\n     * @throws an error while attempting to copy unsupported content type\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return: [ [ 2 ] ]\n     * const clipboardContent = hfInstance.copy({ sheet: 0, col: 1, row: 0 }, 1, 1);\n     * ```\n     *\n     * @category Clipboard\n     */\n    copy(sourceLeftCorner, width, height) {\n        this._crudOperations.copy(sourceLeftCorner, width, height);\n        return this.getRangeValues(sourceLeftCorner, width, height);\n    }\n    /**\n     * Stores information of the cell block in internal clipboard for further paste.\n     * Calling [[paste]] right after this method is equivalent to call [[moveCells]].\n     * Almost any CRUD operation called after this method will abort the cut operation.\n     * Returns values of cells for use in external clipboard.\n     *\n     * @param {SimpleCellAddress} sourceLeftCorner - address of the upper left corner of a copied block\n     * @param {number} width - width of the cell block being copied\n     * @param {number} height - height of the cell block being copied\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return values that were cut: [ [ 1 ] ]\n     * const clipboardContent = hfInstance.cut({ sheet: 0, col: 0, row: 0 }, 1, 1);\n     * ```\n     *\n     * @category Clipboard\n     */\n    cut(sourceLeftCorner, width, height) {\n        this._crudOperations.cut(sourceLeftCorner, width, height);\n        return this.getRangeValues(sourceLeftCorner, width, height);\n    }\n    /**\n     * When called after [[copy]] it will paste copied values and formulas into a cell block.\n     * When called after [[cut]] it will perform [[moveCells]] operation into the cell block.\n     * Does nothing if the clipboard is empty.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {SimpleCellAddress} targetLeftCorner - upper left address of the target cell block\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws an error while attempting to paste onto a matrix\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws [[NothingToPasteError]] when clipboard is empty\n     * @throws [[TargetLocationHasMatrixError]] when the selected target area has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // do a copy, [ [ 2 ] ] was copied\n     * hfInstance.copy({ sheet: 0, col: 0, row: 0 }, 1, 1);\n     *\n     * // do a paste, should return a list of cells which values changed\n     * // after the operation, their absolute addresses and new values\n     * const changes = hfInstance.paste({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Clipboard\n     */\n    paste(targetLeftCorner) {\n        this.ensureEvaluationIsNotSuspended();\n        this._crudOperations.paste(targetLeftCorner);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether there is something in the clipboard.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // copy desired content\n     * hfInstance.copy({ sheet: 0, col: 1, row: 0 }, 1, 1);\n     *\n     * // returns 'false', there is content in the clipboard\n     * const isClipboardEmpty = hfInstance.isClipboardEmpty();\n     * ```\n     *\n     * @category Clipboard\n     */\n    isClipboardEmpty() {\n        return this._crudOperations.isClipboardEmpty();\n    }\n    /**\n     * Clears the clipboard content.\n     *\n     * @example\n     * ```js\n     * // clears the clipboard, isClipboardEmpty() should return true if called afterwards\n     * hfInstance.clearClipboard();\n     * ```\n     *\n     * @category Clipboard\n     */\n    clearClipboard() {\n        this._crudOperations.clearClipboard();\n    }\n    /**\n     * Clears the redo stack in undoRedo history.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *   ['1', '2', '3'],\n     * ]);\n     *\n     * // do an operation, for example remove columns\n     * hfInstance.removeColumns(0, [0, 1]);\n     *\n     * // undo the operation\n     * hfInstance.undo();\n     *\n     * // redo the operation\n     * hfInstance.redo();\n     *\n     * // clear the redo stack\n     * hfInstance.clearRedoStack();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    clearRedoStack() {\n        this._crudOperations.undoRedo.clearRedoStack();\n    }\n    /**\n     * Clears the undo stack in undoRedo history.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *   ['1', '2', '3'],\n     * ]);\n     *\n     * // do an operation, for example remove columns\n     * hfInstance.removeColumns(0, [0, 1]);\n     *\n     * // undo the operation\n     * hfInstance.undo();\n     *\n     * // clear the undo stack\n     * hfInstance.clearUndoStack();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    clearUndoStack() {\n        this._crudOperations.undoRedo.clearUndoStack();\n    }\n    /**\n     * Returns the cell content of a given range in a [[CellValue]][][] format.\n     *\n     * @param {SimpleCellAddress} leftCorner - address of the upper left corner of a range\n     * @param {number} width - width of a range\n     * @param {number} height - height of a range\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2)', '2', '10'],\n     *  ['5', '6', '7'],\n     *  ['40', '30', '20'],\n     * ]);\n     *\n     *\n     * // returns calculated cells content: [ [ 3, 2 ], [ 5, 6 ] ]\n     * const rangeValues = hfInstance.getRangeValues({ sheet: 0, col: 0, row: 0 }, 2, 2);\n     * ```\n     *\n     * @category Ranges\n     */\n    getRangeValues(leftCorner, width, height) {\n        const cellRange = AbsoluteCellRange.spanFrom(leftCorner, width, height);\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellValue(address)));\n    }\n    /**\n     * Returns cell formulas in given range.\n     *\n     * @param {SimpleCellAddress} leftCorner - address of the upper left corner of a range\n     * @param {number} width - width of a range\n     * @param {number} height - height of a range\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2)', '2', '10'],\n     *  ['5', '6', '7'],\n     *  ['40', '30', '20'],\n     * ]);\n     *\n     * // returns cell formulas of a given range only:\n     * // [ [ '=SUM(1,2)', undefined ], [ undefined, undefined ] ]\n     * const rangeFormulas = hfInstance.getRangeFormulas({ sheet: 0, col: 0, row: 0 }, 2, 2);\n     * ```\n     *\n     * @category Ranges\n     */\n    getRangeFormulas(leftCorner, width, height) {\n        const cellRange = AbsoluteCellRange.spanFrom(leftCorner, width, height);\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellFormula(address)));\n    }\n    /**\n     * Returns serialized cells in given range.\n     *\n     * @param {SimpleCellAddress} leftCorner - address of the upper left corner of a range\n     * @param {number} width - width of a range\n     * @param {number} height - height of a range\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2)', '2', '10'],\n     *  ['5', '6', '7'],\n     *  ['40', '30', '20'],\n     * ]);\n     *\n     * // should return serialized cell content for the given range:\n     * // [ [ '=SUM(1,2)', 2 ], [ 5, 6 ] ]\n     * const rangeSerialized = hfInstance.getRangeSerialized({ sheet: 0, col: 0, row: 0 }, 2, 2);\n     * ```\n     *\n     * @category Ranges\n     */\n    getRangeSerialized(leftCorner, width, height) {\n        const cellRange = AbsoluteCellRange.spanFrom(leftCorner, width, height);\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellSerialized(address)));\n    }\n    /**\n     * Returns information whether it is possible to add a sheet to the engine.\n     * Checks against particular rules to ascertain that addSheet can be called.\n     * If returns `true`, doing [[addSheet]] operation won't throw any errors and it possible to add sheet with provided name.\n     * Returns `false` if the chosen name is already used.\n     *\n     * @param {string} sheetName - sheet name, case insensitive\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'false' because 'MySheet2' already exists\n     * const isAddable = hfInstance.isItPossibleToAddSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToAddSheet(sheetName) {\n        try {\n            this._crudOperations.ensureItIsPossibleToAddSheet(sheetName);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Adds a new sheet to the HyperFormula instance. Returns given or autogenerated name of a new sheet.\n     *\n     * @param {string} [sheetName] - if not specified, name will be autogenerated\n     *\n     * @fires [[sheetAdded]] after the sheet was added\n     *\n     * @throws [[SheetNameAlreadyTakenError]] when sheet with a given name already exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'MySheet3'\n     * const nameProvided = hfInstance.addSheet('MySheet3');\n     *\n     * // should return autogenerated 'Sheet4'\n     * // because no name was provided and 3 other ones already exist\n     * const generatedName = hfInstance.addSheet();\n     * ```\n     *\n     * @category Sheets\n     */\n    addSheet(sheetName) {\n        const addedSheetName = this._crudOperations.addSheet(sheetName);\n        this._emitter.emit(Events.SheetAdded, addedSheetName);\n        return addedSheetName;\n    }\n    /**\n     * Returns information whether it is possible to remove sheet for the engine.\n     * Returns `true` if the provided name of a sheet exists and therefore it can be removed, doing [[removeSheet]] operation won't throw any errors.\n     * Returns `false` if there is no sheet with a given name.\n     *\n     * @param {string} sheetName - sheet name, case insensitive\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'true' because 'MySheet2' exists and is removable\n     * const isRemovable = hfInstance.isItPossibleToRemoveSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToRemoveSheet(sheetName) {\n        try {\n            this._crudOperations.ensureSheetExists(sheetName);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Removes sheet with a specified name.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} sheetName - sheet name, case insensitive\n     *\n     * @fires [[sheetRemoved]] after the sheet was removed\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, in this example it will return:\n     * // [{\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: { error: [CellError], value: '#REF!' },\n     * // }]\n     * const changes = hfInstance.removeSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    removeSheet(sheetName) {\n        const displayName = this.sheetMapping.getDisplayNameByName(sheetName);\n        this._crudOperations.removeSheet(sheetName);\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\n        this._emitter.emit(Events.SheetRemoved, displayName, changes);\n        return changes;\n    }\n    /**\n     * Returns information whether it is possible to clear a specified sheet.\n     * If returns `true`, doing [[clearSheet]] operation won't throw any errors, provided name of a sheet exists and then its content can be cleared.\n     * Returns `false` if there is no sheet with a given name.\n     *\n     * @param {string} sheetName - sheet name, case insensitive.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'true' because 'MySheet2' exists and can be cleared\n     * const isClearable = hfInstance.isItPossibleToClearSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToClearSheet(sheetName) {\n        try {\n            this._crudOperations.ensureSheetExists(sheetName);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Clears the sheet content. Based on that the method finds the ID of a sheet to be cleared.\n     * Double-checks if the sheet exists.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} sheetName - sheet name, case insensitive.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, in this example it will return:\n     * // [{\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: 0,\n     * // }]\n     * const changes = hfInstance.clearSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    clearSheet(sheetName) {\n        this._crudOperations.ensureSheetExists(sheetName);\n        this._crudOperations.clearSheet(sheetName);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to replace the sheet content.\n     * If returns `true`, doing [[setSheetContent]] operation won't throw any errors, the provided name of a sheet exists and then its content can be replaced.\n     * Returns `false` if there is no sheet with a given name.\n     *\n     * @param {string} sheetName - sheet name, case insensitive.\n     * @param {RawCellContent[][]} values - array of new values\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'true' because 'MySheet1' exists\n     * // and the provided content can be placed in this sheet\n     * const isReplaceable = hfInstance.isItPossibleToReplaceSheetContent('MySheet1', [['50'], ['60']]);\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToReplaceSheetContent(sheetName, values) {\n        try {\n            this._crudOperations.ensureSheetExists(sheetName);\n            const sheetId = this.sheetMapping.fetch(sheetName);\n            this._crudOperations.ensureItIsPossibleToChangeSheetContents(sheetId, values);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Replaces the sheet content with new values.\n     * The new value is to be provided as an array of arrays of [[RawCellContent]].\n     * The method finds sheet ID based on the provided sheet name.\n     *\n     * @param {string} sheetName - sheet name, case insensitive.\n     * @param {RawCellContent[][]} values - array of new values\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     * @throws [[InvalidArgumentsError]] when values is not an array of arrays\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values\n     * const changes = hfInstance.setSheetContent('MySheet1', [['50'], ['60']]);\n     * ```\n     *\n     * @category Sheets\n     */\n    setSheetContent(sheetName, values) {\n        this._crudOperations.setSheetContent(sheetName, values);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Computes simple (absolute) address of a cell address based on its string representation.\n     * If sheet name is present in string representation but not present in the engine, returns `undefined`.\n     * If sheet name is not present in string representation, returns the sheet number.\n     * Returns an absolute representation of address.\n     *\n     * @param {string} cellAddress - string representation of cell address in A1 notation\n     * @param {number} sheetId - override sheet index regardless of sheet mapping\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // should return { sheet: 0, col: 0, row: 0 }\n     * const simpleCellAddress = hfInstance.simpleCellAddressFromString('A1', 0);\n     * ```\n     *\n     * @category Helpers\n     */\n    simpleCellAddressFromString(cellAddress, sheetId) {\n        return simpleCellAddressFromString(this.sheetMapping.get, cellAddress, sheetId);\n    }\n    /**\n     * Returns string representation of an absolute address in A1 notation or `undefined` if the sheet index is not present in the engine.\n     *\n     * @param {SimpleCellAddress} cellAddress - object representation of an absolute address\n     * @param {number} sheetId - if is not equal with address sheet index, string representation will contain sheet name\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // should return 'B2'\n     * const A1Notation = hfInstance.simpleCellAddressToString({ sheet: 0, col: 1, row: 1 }, 0);\n     * ```\n     *\n     * @category Helpers\n     */\n    simpleCellAddressToString(cellAddress, sheetId) {\n        return simpleCellAddressToString(this.sheetMapping.fetchDisplayName, cellAddress, sheetId);\n    }\n    /**\n     * Returns a unique sheet name assigned to the sheet of a given ID or `undefined` if the there is no sheet with a given ID.\n     *\n     * @param {number} sheetId - ID of the sheet, for which we want to retrieve name\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'MySheet2' as this sheet is the second one\n     * const sheetName = hfInstance.getSheetName(1);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetName(sheetId) {\n        return this.sheetMapping.getDisplayName(sheetId);\n    }\n    /**\n     * List all sheet names.\n     * Returns an array of sheet names as strings.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return all sheets names: ['MySheet1', 'MySheet2']\n     * const sheetNames = hfInstance.getSheetNames();\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetNames() {\n        return this.sheetMapping.sheetNames();\n    }\n    /**\n     * Returns a unique sheet ID assigned to the sheet with a given name or `undefined` if the sheet does not exist.\n     *\n     * @param {string} sheetName - name of the sheet, for which we want to retrieve ID, case insensitive.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return '0' because 'MySheet1' is of ID '0'\n     * const sheetID = hfInstance.getSheetId('MySheet1');\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetId(sheetName) {\n        return this.sheetMapping.get(sheetName);\n    }\n    /**\n     * Returns `true` whether sheet with a given name exists. The methods accepts sheet name to be checked.\n     *\n     * @param {string} sheetName - name of the sheet, case insensitive.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'true' since 'MySheet1' exists\n     * const sheetExist = hfInstance.doesSheetExist('MySheet1');\n     * ```\n     *\n     * @category Sheets\n     */\n    doesSheetExist(sheetName) {\n        return this.sheetMapping.hasSheetWithName(sheetName);\n    }\n    /**\n     * Returns type of a specified cell of a given address.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(A2:A3)', '2'],\n     * ]);\n     *\n     * // should return 'FORMULA', the cell of given coordinates is of this type\n     * const cellA1Type = hfInstance.getCellType({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'VALUE', the cell of given coordinates is of this type\n     * const cellB1Type = hfInstance.getCellType({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellType(cellAddress) {\n        const vertex = this.dependencyGraph.getCell(cellAddress);\n        return getCellType(vertex);\n    }\n    /**\n     * Returns `true` if the specified cell contains a simple value.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(A2:A3)', '2'],\n     * ]);\n     *\n     * // should return 'true' since the selected cell contains a simple value\n     * const isA1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'false' since the selected cell does not contain a simple value\n     * const isB1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    doesCellHaveSimpleValue(cellAddress) {\n        return this.getCellType(cellAddress) === CellType.VALUE;\n    }\n    /**\n     * Returns `true` if the specified cell contains a formula.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(A2:A3)', '2'],\n     * ]);\n     *\n     * // should return 'true' since the A1 cell contains a formula\n     * const A1Formula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'false' since the B1 cell does not contain a formula\n     * const B1NoFormula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    doesCellHaveFormula(cellAddress) {\n        return this.getCellType(cellAddress) === CellType.FORMULA;\n    }\n    /**\n     * Returns`true` if the specified cell is empty.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *   [null, '1'],\n     * ]);\n     *\n     * // should return 'true', cell of provided coordinates is empty\n     * const isEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'false', cell of provided coordinates is not empty\n     * const isNotEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    isCellEmpty(cellAddress) {\n        return this.getCellType(cellAddress) === CellType.EMPTY;\n    }\n    /**\n     * Returns `true` if a given cell is a part of a matrix.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *    ['{=TRANSPOSE(B1:B1)}'],\n     * ]);\n     *\n     * // should return 'true', cell of provided coordinates is a part of a matrix\n     * const isPartOfMatrix = hfInstance.isCellPartOfMatrix({ sheet: 0, col: 0, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    isCellPartOfMatrix(cellAddress) {\n        return this.getCellType(cellAddress) === CellType.MATRIX;\n    }\n    /**\n     * Returns type of the cell value of a given address.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2,3)', '2'],\n     * ]);\n     *\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 1, row: 0 });\n     *\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 0, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellValueType(cellAddress) {\n        this.ensureEvaluationIsNotSuspended();\n        const value = this.dependencyGraph.getCellValue(cellAddress);\n        return getCellValueType(value);\n    }\n    /**\n     * Returns the number of existing sheets.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return the number of sheets which is '1'\n     * const sheetsCount = hfInstance.countSheets();\n     * ```\n     *\n     * @category Sheets\n     */\n    countSheets() {\n        return this.sheetMapping.numberOfSheets();\n    }\n    /**\n     * Returns information whether it is possible to rename sheet.\n     * Returns `true` if the sheet with provided id exists and new name is available\n     * Returns `false` if sheet cannot be renamed\n     *\n     * @param {number} sheetId - a sheet number\n     * @param {string} newName - a name of the sheet to be given\n     *\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // returns true\n     * hfInstance.isItPossibleToRenameSheet(0, 'MySheet0');\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToRenameSheet(sheetId, newName) {\n        try {\n            this._crudOperations.ensureItIsPossibleToRenameSheet(sheetId, newName);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Renames a specified sheet.\n     *\n     * @param {number} sheetId - a sheet number\n     * @param {string} newName - a name of the sheet to be given, if is the same as the old one the method does nothing\n     *\n     * @fires [[sheetRenamed]] after the sheet was renamed\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @throws [[SheetNameAlreadyTakenError]] when the provided sheet name already exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // renames the sheet 'MySheet1'\n     * hfInstance.renameSheet(0, 'MySheet0');\n     * ```\n     *\n     * @category Sheets\n     */\n    renameSheet(sheetId, newName) {\n        const oldName = this._crudOperations.renameSheet(sheetId, newName);\n        if (oldName !== undefined) {\n            this._emitter.emit(Events.SheetRenamed, oldName, newName);\n        }\n    }\n    /**\n     * Runs multiple operations and recomputes formulas at the end.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {() => void} batchOperations\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // multiple operations in a single callback will trigger evaluation only once\n     * // and only one set of changes is returned as a combined result of all\n     * // the operations that were triggered within the callback\n     * const changes = hfInstance.batch(() => {\n     *  hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\n     *  hfInstance.setCellContents({ col: 4, row: 0, sheet: 0 }, [['=A1']]);\n     * });\n     * ```\n     *\n     * @category Batch\n     */\n    batch(batchOperations) {\n        this.suspendEvaluation();\n        this._crudOperations.beginUndoRedoBatchMode();\n        try {\n            batchOperations();\n        }\n        catch (e) {\n            this._crudOperations.commitUndoRedoBatchMode();\n            this.resumeEvaluation();\n            throw (e);\n        }\n        this._crudOperations.commitUndoRedoBatchMode();\n        return this.resumeEvaluation();\n    }\n    /**\n     * Suspends the dependency graph recalculation.\n     * It allows optimizing the performance.\n     * With this method, multiple CRUD operations can be done without triggering recalculation after every operation.\n     * Suspending evaluation should result in an overall faster calculation compared to recalculating after each operation separately.\n     * To resume the evaluation use [[resumeEvaluation]].\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // similar to batch() but operations are not within a callback,\n     * // one method suspends the recalculation\n     * // the second will resume calculations and return the changes\n     *\n     * // suspend the evaluation with this method\n     * hfInstance.suspendEvaluation();\n     *\n     * // perform operations\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\n     * hfInstance.setSheetContent('MySheet2', [['50'], ['60']]);\n     *\n     * // use resumeEvaluation to resume\n     * const changes = hfInstance.resumeEvaluation();\n     * ```\n     *\n     * @category Batch\n     */\n    suspendEvaluation() {\n        this._evaluationSuspended = true;\n    }\n    /**\n     * Resumes the dependency graph recalculation that was suspended with [[suspendEvaluation]].\n     * It also triggers the recalculation and returns changes that are a result of all batched operations.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // similar to batch() but operations are not within a callback,\n     * // one method suspends the recalculation\n     * // the second will resume calculations and return the changes\n     *\n     * // first, suspend the evaluation\n     * hfInstance.suspendEvaluation();\n     *\n     * // perform operations\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\n     * hfInstance.setSheetContent('MySheet2', [['50'], ['60']]);\n     *\n     * // resume the evaluation\n     * const changes = hfInstance.resumeEvaluation();\n     * ```\n     *\n     * @category Batch\n     */\n    resumeEvaluation() {\n        this._evaluationSuspended = false;\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Checks if the dependency graph recalculation process is suspended or not.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // suspend the evaluation\n     * hfInstance.suspendEvaluation();\n     *\n     * // between suspendEvaluation() and resumeEvaluation()\n     * // or inside batch() callback it will return 'true', otherwise 'false'\n     * const isEvaluationSuspended = hfInstance.isEvaluationSuspended();\n     *\n     * const changes = hfInstance.resumeEvaluation();\n     * ```\n     *\n     * @category Batch\n     */\n    isEvaluationSuspended() {\n        return this._evaluationSuspended;\n    }\n    /**\n     * Returns information whether it is possible to add named expression into a specific scope.\n     * Checks against particular rules to ascertain that addNamedExpression can be called.\n     * If returns `true`, doing [[addNamedExpression]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted.\n     *\n     * @param {string} expressionName - a name of the expression to be added\n     * @param {RawCellContent} expression - the expression\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // should return 'true' for this example,\n     * // it is possible to add named expression to global scope\n     * const isAddable = hfInstance.isItPossibleToAddNamedExpression('prettyName', '=Sheet1!$A$1+100');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    isItPossibleToAddNamedExpression(expressionName, expression, scope) {\n        try {\n            this._crudOperations.ensureItIsPossibleToAddNamedExpression(expressionName, expression, scope);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Adds a specified named expression.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} expressionName - a name of the expression to be added\n     * @param {RawCellContent} expression - the expression\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\n     *\n     * @fires [[namedExpressionAdded]] always, unless [[batch]] mode is used\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NamedExpressionNameIsAlreadyTaken]] when the named expression name is not available.\n     * @throws [[NamedExpressionNameIsInvalid]] when the named expression name is not valid\n     * @throws [[MatrixFormulasNotSupportedError]] when the named expression formula is a Matrix formula\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add own expression, scope limited to 'Sheet1', the method should return a list of cells which values\n     * // changed after the operation, their absolute addresses and new values\n     * // for this example:\n     * // [{\n     * //   name: 'prettyName',\n     * //   newValue: 142,\n     * // }]\n     * const changes = hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    addNamedExpression(expressionName, expression, scope, options) {\n        this._crudOperations.addNamedExpression(expressionName, expression, scope, options);\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\n        this._emitter.emit(Events.NamedExpressionAdded, expressionName, changes);\n        return changes;\n    }\n    /**\n     * Gets specified named expression value.\n     * Returns a [[CellValue]] or undefined if the given named expression does not exists.\n     *\n     * @param {string} expressionName - expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression, only 'Sheet1' considered as it is the scope\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     *\n     * // returns the calculated value of a passed named expression, '142' for this example\n     * const myFormula = hfInstance.getNamedExpressionValue('prettyName', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    getNamedExpressionValue(expressionName, scope) {\n        this.ensureEvaluationIsNotSuspended();\n        const sheetId = this._crudOperations.scopeId(scope);\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (namedExpression) {\n            return this._serialization.getCellValue(namedExpression.address);\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Returns a normalized formula string for given named expression or `undefined` for a named expression that does not exist or does not hold a formula.\n     *\n     * @param {string} expressionName - expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression in 'Sheet1'\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     *\n     * // returns a normalized formula string corresponding to a passed name from 'Sheet1',\n     * // '=Sheet1!A1+100' for this example\n     * const myFormula = hfInstance.getNamedExpressionFormula('prettyName', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    getNamedExpressionFormula(expressionName, scope) {\n        const sheetId = this._crudOperations.scopeId(scope);\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (namedExpression === undefined) {\n            return undefined;\n        }\n        else {\n            return this._serialization.getCellFormula(namedExpression.address);\n        }\n    }\n    /**\n     * Returns named expression a normalized formula string for given named expression or `undefined` for a named expression that does not exist or does not hold a formula.\n     *\n     * @param {string} expressionName - expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression in 'Sheet1'\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     *\n     * // returns a normalized formula string corresponding to a passed name from 'Sheet1',\n     * // '=Sheet1!$A$1+100' for this example\n     * const myFormula = hfInstance.getNamedExpression('prettyName', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    getNamedExpression(expressionName, scope) {\n        const sheetId = this._crudOperations.scopeId(scope);\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (namedExpression === undefined) {\n            return undefined;\n        }\n        const expression = this._serialization.getCellFormula(namedExpression.address);\n        return {\n            name: expressionName,\n            scope: scope,\n            expression: expression,\n            options: namedExpression.options\n        };\n    }\n    /**\n     * Returns information whether it is possible to change named expression in a specific scope.\n     * Checks against particular rules to ascertain that changeNamedExpression can be called.\n     * If returns `true`, doing [[changeNamedExpression]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted.\n     *\n     * @param {string} expressionName - an expression name, case insensitive.\n     * @param {RawCellContent} newExpression - a new expression\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\n     *\n     * // should return 'true' for this example,\n     * // it is possible to change named expression\n     * const isAddable = hfInstance.isItPossibleToChangeNamedExpression('prettyName', '=Sheet1!$A$1+100');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    isItPossibleToChangeNamedExpression(expressionName, newExpression, scope) {\n        try {\n            this._crudOperations.ensureItIsPossibleToChangeNamedExpression(expressionName, newExpression, scope);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Changes a given named expression to a specified formula.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} expressionName - an expression name, case insensitive.\n     * @param {RawCellContent} newExpression - a new expression\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NamedExpressionDoesNotExist]] when the given expression does not exist.\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     * @throws [[MatrixFormulasNotSupportedError]] when the named expression formula is a Matrix formula\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression, scope limited to 'Sheet1'\n     * hfInstance.addNamedExpression('prettyName', 'Sheet1', '=Sheet1!$A$1+100');\n     *\n     * // change the named expression\n     * const changes = hfInstance.changeNamedExpression('prettyName', '=Sheet1!$A$1+200');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    changeNamedExpression(expressionName, newExpression, scope, options) {\n        this._crudOperations.changeNamedExpressionExpression(expressionName, scope, newExpression, options);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to remove named expression from a specific scope.\n     * Checks against particular rules to ascertain that removeNamedExpression can be called.\n     * If returns `true`, doing [[removeNamedExpression]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted.\n     *\n     * @param {string} expressionName - an expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\n     *\n     * // should return 'true' for this example,\n     * // it is possible to change named expression\n     * const isAddable = hfInstance.isItPossibleToRemoveNamedExpression('prettyName');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    isItPossibleToRemoveNamedExpression(expressionName, scope) {\n        try {\n            this._crudOperations.isItPossibleToRemoveNamedExpression(expressionName, scope);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Removes a named expression.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} expressionName - expression name, case insensitive.\n     * @param {string?} sheetScope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @fires [[namedExpressionRemoved]] after the expression was removed\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NamedExpressionDoesNotExist]] when the given expression does not exist.\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     *\n     * // remove the named expression\n     * const changes = hfInstance.removeNamedExpression('prettyName', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    removeNamedExpression(expressionName, scope) {\n        const removedNamedExpression = this._crudOperations.removeNamedExpression(expressionName, scope);\n        if (removedNamedExpression) {\n            const changes = this.recomputeIfDependencyGraphNeedsIt();\n            this._emitter.emit(Events.NamedExpressionRemoved, removedNamedExpression.displayName, changes);\n            return changes;\n        }\n        else {\n            return [];\n        }\n    }\n    /**\n     * Lists all named expressions.\n     * Returns an array of expression names as strings\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     *  ['50'],\n     * ]);\n     *\n     * // add two named expressions\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!A1+100');\n     * hfInstance.addNamedExpression('prettyName2', '=Sheet1!A2+100');\n     *\n     * // list the expressions, should return: ['prettyName', 'prettyName2'] for this example\n     * const listOfExpressions = hfInstance.listNamedExpressions();\n     * ```\n     *\n     * @category Named Expressions\n     */\n    listNamedExpressions() {\n        return this._namedExpressions.getAllNamedExpressionsNames();\n    }\n    /**\n     * Returns a normalized formula.\n     *\n     * @param {string} formulaString - a formula in a proper format - it must start with \"=\"\n     *\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula, i.e does not start with \"=\"\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     *  ['50'],\n     * ]);\n     *\n     * // normalize the formula, should return '=Sheet1!A1+10' for this example\n     * const normalizedFormula = hfInstance.normalizeFormula('=SHEET1!A1+10');\n     * ```\n     *\n     * @category Helpers\n     */\n    normalizeFormula(formulaString) {\n        const [ast, address] = this.extractTemporaryFormula(formulaString);\n        if (ast === undefined) {\n            throw new NotAFormulaError();\n        }\n        return this._unparser.unparse(ast, address);\n    }\n    /**\n     * Calculates fire-and-forget formula, returns the calculated value.\n     *\n     * @param {string} formulaString -  a formula in a proper format - it must start with \"=\"\n     * @param {string} sheetName - a name of the sheet in context of which we evaluate formula, case insensitive.\n     *\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula, i.e does not start with \"=\"\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  Sheet1: [['22']],\n     *  Sheet2: [['58']],\n     * });\n     *\n     * // returns the value of calculated formula, '32' for this example\n     * const calculatedFormula = hfInstance.calculateFormula('=A1+10', 'Sheet1');\n     * ```\n     *\n     * @category Helpers\n     */\n    calculateFormula(formulaString, sheetName) {\n        this._crudOperations.ensureSheetExists(sheetName);\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        const [ast, address, dependencies] = this.extractTemporaryFormula(formulaString, sheetId);\n        if (ast === undefined) {\n            throw new NotAFormulaError();\n        }\n        const internalCellValue = this.evaluator.runAndForget(ast, address, dependencies);\n        return this._exporter.exportValue(internalCellValue);\n    }\n    /**\n     * Validates the formula.\n     * If the provided string starts with \"=\" and is a parsable formula the method returns `true`.\n     *\n     * @param {string} formulaString -  a formula in a proper format - it must start with \"=\"\n     *\n     * @example\n     * ```js\n     * // checks if the given string is a valid formula, should return 'true' for this example\n     * const isFormula = hfInstance.validateFormula('=SUM(1,2)');\n     * ```\n     *\n     * @category Helpers\n     */\n    validateFormula(formulaString) {\n        const [ast] = this.extractTemporaryFormula(formulaString);\n        if (ast === undefined) {\n            return false;\n        }\n        if (ast.type === AstNodeType.ERROR && !ast.error) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns translated names of all functions registered in this instance of HyperFormula\n     * according to the language set in the configuration\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // return translated names of all functions, assign to a variable\n     * const allNames = hfInstance.getRegisteredFunctionNames();\n     * ```\n     *\n     * @category Custom Functions\n     */\n    getRegisteredFunctionNames() {\n        const language = HyperFormula.getLanguage(this._config.language);\n        return language.getFunctionTranslations(this._functionRegistry.getRegisteredFunctionIds());\n    }\n    /**\n     * Returns class of a plugin used by function with given id\n     *\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\n     *\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // register a plugin\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\n     *\n     * // get the plugin\n     * const myPlugin = hfInstance.getFunctionPlugin('EXAMPLE');\n     * ```\n     *\n     * @category Custom Functions\n     */\n    getFunctionPlugin(functionId) {\n        return this._functionRegistry.getFunctionPlugin(functionId);\n    }\n    /**\n     * Returns classes of all plugins registered in this instance of HyperFormula\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // return classes of all plugins registered, assign to a variable\n     * const allNames = hfInstance.getAllFunctionPlugins();\n     * ```\n     *\n     * @category Custom Functions\n     */\n    getAllFunctionPlugins() {\n        return this._functionRegistry.getPlugins();\n    }\n    /**\n     * Interprets number as a date + time.\n     *\n     * @param {number} val - number of days since nullDate, should be nonnegative, fractions are interpreted as hours/minutes/seconds.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // pass the number of days since nullDate\n     * // the method should return formatted date and time, for this example:\n     * // {year: 2020, month: 1, day: 15, hours: 2, minutes: 24, seconds: 0}\n     * const dateTimeFromNumber = hfInstance.numberToDateTime(43845.1);\n     *\n     * ```\n     *\n     * @category Helpers\n     */\n    numberToDateTime(val) {\n        return this._evaluator.dateHelper.numberToSimpleDateTime(val);\n    }\n    /**\n     * Interprets number as a date.\n     *\n     * @param {number} val - number of days since nullDate, should be nonnegative, fractions are ignored.\n  \n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // pass the number of days since nullDate\n     * // the method should return formatted date, for this example:\n     * // {year: 2020, month: 1, day: 15}\n     * const dateFromNumber = hfInstance.numberToDate(43845);\n     * ```\n     *\n     * @category Helpers\n     */\n    numberToDate(val) {\n        return this._evaluator.dateHelper.numberToSimpleDate(val);\n    }\n    /**\n     * Interprets number as a time (hours/minutes/seconds).\n     *\n     * @param {number} val - time in 24h units.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // pass a number to be interpreted as a time\n     * // should return {hours: 26, minutes: 24} for this example\n     * const timeFromNumber = hfInstance.numberToTime(1.1);\n     * ```\n     *\n     * @category Helpers\n     */\n    numberToTime(val) {\n        return this._evaluator.dateHelper.numberToSimpleTime(val);\n    }\n    extractTemporaryFormula(formulaString, sheetId = 1) {\n        const parsedCellContent = this._cellContentParser.parse(formulaString);\n        const exampleTemporaryFormulaAddress = { sheet: sheetId, col: 0, row: 0 };\n        if (!(parsedCellContent instanceof CellContent.Formula)) {\n            return [undefined, exampleTemporaryFormulaAddress, []];\n        }\n        const { ast, errors, dependencies } = this._parser.parse(parsedCellContent.formula, exampleTemporaryFormulaAddress);\n        if (errors.length > 0) {\n            return [undefined, exampleTemporaryFormulaAddress, []];\n        }\n        return [ast, exampleTemporaryFormulaAddress, dependencies];\n    }\n    /**\n     * A method that subscribes to an event.\n     *\n     * @param {Event} event the name of the event to subscribe to\n     * @param {Listener} listener to be called when event is emitted\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // subscribe to a 'sheetAdded', pass a simple handler\n     * hfInstance.on('sheetAdded', ( ) => { console.log('foo') });\n     *\n     * // add a sheet to trigger an event,\n     * // console should print 'foo' after each time sheet is added in this example\n     * hfInstance.addSheet('FooBar');\n     * ```\n     *\n     * @category Events\n     */\n    on(event, listener) {\n        this._emitter.on(event, listener);\n    }\n    /**\n     * A method that subscribes to an event once.\n     *\n     * @param {Event} event the name of the event to subscribe to\n     * @param {Listener} listener to be called when event is emitted\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // subscribe to a 'sheetAdded', pass a simple handler\n     * hfInstance.once('sheetAdded', ( ) => { console.log('foo') });\n     *\n     * // call addSheet twice,\n     * // console should print 'foo' only once when the sheet is added in this example\n     * hfInstance.addSheet('FooBar');\n     * hfInstance.addSheet('FooBaz');\n     * ```\n     *\n     * @category Events\n     */\n    once(event, listener) {\n        this._emitter.once(event, listener);\n    }\n    /**\n     * A method that unsubscribe from an event or all events.\n     *\n     * @param {Event} event the name of the event to subscribe to\n     * @param {Listener} listener to be called when event is emitted\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // define a simple function to be called upon emitting an event\n     * const handler = ( ) => { console.log('baz') }\n     *\n     * // subscribe to a 'sheetAdded', pass the handler\n     * hfInstance.on('sheetAdded', handler);\n     *\n     * // add a sheet to trigger an event,\n     * // console should print 'baz' each time a sheet is added\n     * hfInstance.addSheet('FooBar');\n     *\n     * // unsubscribe from a 'sheetAdded'\n     * hfInstance.off('sheetAdded', handler);\n     *\n     * // add a sheet, the console should not print anything\n     * hfInstance.addSheet('FooBaz');\n     * ```\n     *\n     * @category Events\n     */\n    off(event, listener) {\n        this._emitter.off(event, listener);\n    }\n    /**\n     * Destroys instance of HyperFormula.\n     *\n     * @example\n     * ```js\n     * // destroys the instance\n     * hfInstance.destroy();\n     * ```\n     *\n     * @category Instance\n     */\n    destroy() {\n        this.dependencyGraph.destroy();\n        this.columnSearch.destroy();\n        this.evaluator.destroy();\n        this._parser.destroy();\n        this._lazilyTransformingAstService.destroy();\n        this._stats.destroy();\n        this._crudOperations.clearClipboard();\n    }\n    /**\n     * Runs a recomputation starting from recently changed vertices.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     */\n    recomputeIfDependencyGraphNeedsIt() {\n        if (!this._evaluationSuspended) {\n            const changes = this._crudOperations.getAndClearContentChanges();\n            const verticesToRecomputeFrom = Array.from(this.dependencyGraph.verticesToRecompute());\n            this.dependencyGraph.clearRecentlyChangedVertices();\n            if (verticesToRecomputeFrom.length > 0) {\n                changes.addAll(this.evaluator.partialRun(verticesToRecomputeFrom));\n            }\n            const exportedChanges = changes.exportChanges(this._exporter);\n            if (!changes.isEmpty()) {\n                this._emitter.emit(Events.ValuesUpdated, exportedChanges);\n            }\n            return exportedChanges;\n        }\n        else {\n            return [];\n        }\n    }\n}\n/**\n * Version of the HyperFormula.\n *\n * @category Static Properties\n */\nHyperFormula.version = process.env.HT_VERSION;\n/**\n * Latest build date.\n *\n * @category Static Properties\n */\nHyperFormula.buildDate = process.env.HT_BUILD_DATE;\n/**\n * A release date.\n *\n * @category Static Properties\n */\nHyperFormula.releaseDate = process.env.HT_RELEASE_DATE;\n/**\n * Contains all available languages to use in registerLanguage.\n *\n * @category Static Properties\n */\nHyperFormula.languages = {};\nHyperFormula.registeredLanguages = new Map();\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from './Cell';\nimport { UnableToParseError } from './errors';\nimport { fixNegativeZero, isNumberOverflow } from './interpreter/ArithmeticHelper';\nexport var CellContent;\n(function (CellContent) {\n    class Number {\n        constructor(value) {\n            this.value = value;\n            this.value = fixNegativeZero(this.value);\n        }\n    }\n    CellContent.Number = Number;\n    class String {\n        constructor(value) {\n            this.value = value;\n        }\n    }\n    CellContent.String = String;\n    class Boolean {\n        constructor(value) {\n            this.value = value;\n        }\n    }\n    CellContent.Boolean = Boolean;\n    class Empty {\n        static getSingletonInstance() {\n            if (!Empty.instance) {\n                Empty.instance = new Empty();\n            }\n            return Empty.instance;\n        }\n    }\n    CellContent.Empty = Empty;\n    class Formula {\n        constructor(formula) {\n            this.formula = formula;\n        }\n    }\n    CellContent.Formula = Formula;\n    class MatrixFormula {\n        constructor(formula) {\n            this.formula = formula;\n        }\n        formulaWithBraces() {\n            return '{' + this.formula + '}';\n        }\n    }\n    CellContent.MatrixFormula = MatrixFormula;\n    class Error {\n        constructor(errorType) {\n            this.value = new CellError(errorType);\n        }\n    }\n    CellContent.Error = Error;\n})(CellContent || (CellContent = {}));\n/**\n * Checks whether string looks like formula or not.\n *\n * @param text - formula\n */\nexport function isFormula(text) {\n    return text.startsWith('=');\n}\nexport function isBoolean(text) {\n    const tl = text.toLowerCase();\n    return tl === 'true' || tl === 'false';\n}\nexport function isMatrix(text) {\n    if (typeof text !== 'string') {\n        return false;\n    }\n    return (text.length > 1) && (text.startsWith('{')) && (text.endsWith('}'));\n}\nexport function isError(text, errorMapping) {\n    const upperCased = text.toUpperCase();\n    const errorRegex = /#[A-Za-z0-9\\/]+[?!]?/;\n    return errorRegex.test(upperCased) && Object.prototype.hasOwnProperty.call(errorMapping, upperCased);\n}\nexport class CellContentParser {\n    constructor(config, dateHelper, numberLiteralsHelper) {\n        this.config = config;\n        this.dateHelper = dateHelper;\n        this.numberLiteralsHelper = numberLiteralsHelper;\n    }\n    parse(content) {\n        if (content === undefined || content === null) {\n            return CellContent.Empty.getSingletonInstance();\n        }\n        else if (typeof content === 'number') {\n            if (isNumberOverflow(content)) {\n                return new CellContent.Error(ErrorType.NUM);\n            }\n            else {\n                return new CellContent.Number(content);\n            }\n        }\n        else if (typeof content === 'boolean') {\n            return new CellContent.Boolean(content);\n        }\n        else if (content instanceof Date) {\n            return new CellContent.Number(this.dateHelper.dateToNumber({\n                day: content.getDate(),\n                month: content.getMonth() + 1,\n                year: content.getFullYear()\n            }));\n        }\n        else if (typeof content === 'string') {\n            if (isBoolean(content)) {\n                return new CellContent.Boolean(content.toLowerCase() === 'true');\n            }\n            else if (isMatrix(content)) {\n                return new CellContent.MatrixFormula(content.substr(1, content.length - 2));\n            }\n            else if (isFormula(content)) {\n                return new CellContent.Formula(content);\n            }\n            else if (isError(content, this.config.errorMapping)) {\n                return new CellContent.Error(this.config.errorMapping[content.toUpperCase()]);\n            }\n            else {\n                const trimmedContent = content.trim();\n                if (this.numberLiteralsHelper.isNumber(trimmedContent)) {\n                    return new CellContent.Number(this.numberLiteralsHelper.numericStringToNumber(trimmedContent));\n                }\n                const parsedDateNumber = this.dateHelper.dateStringToDateNumber(trimmedContent);\n                if (parsedDateNumber !== undefined) {\n                    return new CellContent.Number(parsedDateNumber);\n                }\n                else {\n                    return new CellContent.String(content.startsWith('\\'') ? content.slice(1) : content);\n                }\n            }\n        }\n        else {\n            throw new UnableToParseError(content);\n        }\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeEndsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith\n      ? nativeEndsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, CellValueTypeOrd, EmptyValue, ErrorType, getCellValueType } from '../Cell';\nimport { collatorFromConfig } from '../StringHelper';\nimport { SimpleRangeValue } from './InterpreterValue';\nexport class ArithmeticHelper {\n    constructor(config, dateTimeHelper, numberLiteralsHelper) {\n        this.config = config;\n        this.dateTimeHelper = dateTimeHelper;\n        this.numberLiteralsHelper = numberLiteralsHelper;\n        /**\n         * Adds two numbers\n         *\n         * Implementation of adding which is used in interpreter.\n         *\n         * Errors are propagated, non-numerical values are ignored.\n         *\n         * @param left - left operand of addition\n         * @param right - right operand of addition\n         */\n        this.nonstrictadd = (left, right) => {\n            if (left instanceof CellError) {\n                return left;\n            }\n            else if (right instanceof CellError) {\n                return right;\n            }\n            else if (typeof left === 'number') {\n                if (typeof right === 'number') {\n                    return this.addWithEpsilon(left, right);\n                }\n                else {\n                    return left;\n                }\n            }\n            else if (typeof right === 'number') {\n                return right;\n            }\n            else {\n                return 0;\n            }\n        };\n        this.collator = collatorFromConfig(config);\n        this.actualEps = config.smartRounding ? config.precisionEpsilon : 0;\n    }\n    eqMatcherFunction(pattern) {\n        const regexp = this.buildRegex(pattern);\n        return (cellValue) => (typeof cellValue === 'string' && regexp.test(this.normalizeString(cellValue)));\n    }\n    neqMatcherFunction(pattern) {\n        const regexp = this.buildRegex(pattern);\n        return (cellValue) => {\n            return (typeof cellValue !== 'string' || !regexp.test(this.normalizeString(cellValue)));\n        };\n    }\n    requiresRegex(pattern) {\n        if (!this.config.useRegularExpressions && !this.config.useWildcards) {\n            return !this.config.matchWholeCell;\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const c = pattern.charAt(i);\n            if (isWildcard(c) || (this.config.useRegularExpressions && needsEscape(c))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    buildRegex(pattern) {\n        pattern = this.normalizeString(pattern);\n        let regexpStr;\n        let useWildcards = this.config.useWildcards;\n        let useRegularExpressions = this.config.useRegularExpressions;\n        if (useRegularExpressions) {\n            try {\n                RegExp(pattern);\n            }\n            catch (e) {\n                useRegularExpressions = false;\n                useWildcards = false;\n            }\n        }\n        if (useRegularExpressions) {\n            regexpStr = escapeNoCharacters(pattern, this.config.caseSensitive);\n        }\n        else if (useWildcards) {\n            regexpStr = escapeNonWildcards(pattern, this.config.caseSensitive);\n        }\n        else {\n            regexpStr = escapeAllCharacters(pattern, this.config.caseSensitive);\n        }\n        if (this.config.matchWholeCell) {\n            return RegExp('^(' + regexpStr + ')$');\n        }\n        else {\n            return RegExp(regexpStr);\n        }\n    }\n    normalizeString(str) {\n        if (!this.config.caseSensitive) {\n            str = str.toLowerCase();\n        }\n        if (!this.config.accentSensitive) {\n            str = str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        }\n        return str;\n    }\n    compare(left, right) {\n        if (typeof left === 'string' || typeof right === 'string') {\n            const leftTmp = typeof left === 'string' ? this.dateTimeHelper.dateStringToDateNumber(left) : left;\n            const rightTmp = typeof right === 'string' ? this.dateTimeHelper.dateStringToDateNumber(right) : right;\n            if (typeof leftTmp === 'number' && typeof rightTmp === 'number') {\n                return this.floatCmp(leftTmp, rightTmp);\n            }\n        }\n        if (left === EmptyValue) {\n            left = coerceEmptyToValue(right);\n        }\n        else if (right === EmptyValue) {\n            right = coerceEmptyToValue(left);\n        }\n        if (typeof left === 'string' && typeof right === 'string') {\n            return this.stringCmp(left, right);\n        }\n        else if (typeof left === 'boolean' && typeof right === 'boolean') {\n            return numberCmp(coerceBooleanToNumber(left), coerceBooleanToNumber(right));\n        }\n        else if (typeof left === 'number' && typeof right === 'number') {\n            return this.floatCmp(left, right);\n        }\n        else if (left === EmptyValue && right === EmptyValue) {\n            return 0;\n        }\n        else {\n            return numberCmp(CellValueTypeOrd(getCellValueType(left)), CellValueTypeOrd(getCellValueType(right)));\n        }\n    }\n    floatCmp(left, right) {\n        const mod = (1 + this.actualEps);\n        if ((right >= 0) && (left * mod >= right) && (left <= right * mod)) {\n            return 0;\n        }\n        else if ((right <= 0) && (left * mod <= right) && (left >= right * mod)) {\n            return 0;\n        }\n        else if (left > right) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    stringCmp(left, right) {\n        return this.collator.compare(left, right);\n    }\n    add(left, right) {\n        if (left instanceof CellError) {\n            return left;\n        }\n        else if (right instanceof CellError) {\n            return right;\n        }\n        else {\n            return this.addWithEpsilon(left, right);\n        }\n    }\n    addWithEpsilon(left, right) {\n        const ret = left + right;\n        if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\n            return 0;\n        }\n        else {\n            return ret;\n        }\n    }\n    /**\n     * Subtracts two numbers\n     *\n     * Implementation of subtracting which is used in interpreter.\n     *\n     * Errors are propagated.\n     *\n     * @param left - left operand of subtraction\n     * @param right - right operand of subtraction\n     * @param eps - precision of comparison\n     */\n    subtract(left, right) {\n        if (left instanceof CellError) {\n            return left;\n        }\n        else if (right instanceof CellError) {\n            return right;\n        }\n        else {\n            const ret = left - right;\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\n                return 0;\n            }\n            else {\n                return ret;\n            }\n        }\n    }\n    coerceScalarToNumberOrError(arg) {\n        var _a;\n        if (arg instanceof CellError) {\n            return arg;\n        }\n        return (_a = this.coerceToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE);\n    }\n    coerceToMaybeNumber(arg) {\n        var _a;\n        return (_a = this.coerceNonDateScalarToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : (typeof arg === 'string' ? this.dateTimeHelper.dateStringToDateNumber(arg) : undefined);\n    }\n    coerceNonDateScalarToMaybeNumber(arg) {\n        if (arg === EmptyValue) {\n            return 0;\n        }\n        else if (typeof arg === 'string' && this.numberLiteralsHelper.isNumber(arg)) {\n            return this.numberLiteralsHelper.numericStringToNumber(arg);\n        }\n        else {\n            if (typeof arg === 'string' && arg.length > 0 && arg.trim() === '') {\n                return undefined;\n            }\n            const coercedNumber = Number(arg);\n            if (isNaN(coercedNumber)) {\n                return undefined;\n            }\n            else {\n                return coercedNumber;\n            }\n        }\n    }\n}\nexport function coerceToRange(arg) {\n    if (arg instanceof SimpleRangeValue) {\n        return arg;\n    }\n    else {\n        return SimpleRangeValue.fromScalar(arg);\n    }\n}\nexport function coerceToRangeNumbersOrError(arg) {\n    if ((arg instanceof SimpleRangeValue && arg.hasOnlyNumbers()) || arg instanceof CellError) {\n        return arg;\n    }\n    else if (typeof arg === 'number') {\n        return SimpleRangeValue.fromScalar(arg);\n    }\n    else {\n        return null;\n    }\n}\nexport function coerceBooleanToNumber(arg) {\n    return Number(arg);\n}\nexport function coerceEmptyToValue(arg) {\n    if (typeof arg === 'string') {\n        return '';\n    }\n    else if (typeof arg === 'number') {\n        return 0;\n    }\n    else if (typeof arg === 'boolean') {\n        return false;\n    }\n    else {\n        return EmptyValue;\n    }\n}\n/**\n * Coerce scalar value to boolean if possible, or error if value is an error\n *\n * @param arg\n */\nexport function coerceScalarToBoolean(arg) {\n    if (arg instanceof SimpleRangeValue) {\n        return new CellError(ErrorType.VALUE);\n    }\n    else if (arg instanceof CellError || typeof arg === 'boolean') {\n        return arg;\n    }\n    else if (arg === EmptyValue) {\n        return false;\n    }\n    else if (typeof arg === 'number') {\n        return arg !== 0;\n    }\n    else {\n        const argUppered = arg.toUpperCase();\n        if (argUppered === 'TRUE') {\n            return true;\n        }\n        else if (argUppered === 'FALSE') {\n            return false;\n        }\n        else if (argUppered === '') {\n            return false;\n        }\n        else {\n            return null;\n        }\n    }\n}\nexport function coerceScalarToString(arg) {\n    if (arg instanceof CellError || typeof arg === 'string') {\n        return arg;\n    }\n    else if (arg === EmptyValue) {\n        return '';\n    }\n    else if (typeof arg === 'number') {\n        return arg.toString();\n    }\n    else {\n        return arg ? 'TRUE' : 'FALSE';\n    }\n}\n/**\n * Multiplies two numbers\n *\n * Implementation of multiplication which is used in interpreter.\n *\n * Errors are propagated.\n *\n * @param left - left operand of multiplication\n * @param right - right operand of multiplication\n */\nexport function multiply(left, right) {\n    if (left instanceof CellError) {\n        return left;\n    }\n    else if (right instanceof CellError) {\n        return right;\n    }\n    else {\n        return left * right;\n    }\n}\nexport function power(left, right) {\n    if (left instanceof CellError) {\n        return left;\n    }\n    else if (right instanceof CellError) {\n        return right;\n    }\n    else {\n        return Math.pow(left, right);\n    }\n}\nexport function divide(left, right) {\n    if (left instanceof CellError) {\n        return left;\n    }\n    else if (right instanceof CellError) {\n        return right;\n    }\n    else if (right === 0) {\n        return new CellError(ErrorType.DIV_BY_ZERO);\n    }\n    else {\n        return (left / right);\n    }\n}\nexport function unaryminus(value) {\n    if (value instanceof CellError) {\n        return value;\n    }\n    else {\n        return -value;\n    }\n}\nexport function percent(value) {\n    if (value instanceof CellError) {\n        return value;\n    }\n    else {\n        return value / 100;\n    }\n}\n/**\n * Returns max from two numbers\n *\n * Implementation of max function which is used in interpreter.\n *\n * Errors are propagated, non-numerical values are neutral.\n *\n * @param left - left operand of addition\n * @param right - right operand of addition\n */\nexport function max(left, right) {\n    if (left instanceof CellError) {\n        return left;\n    }\n    if (right instanceof CellError) {\n        return right;\n    }\n    if (typeof left === 'number') {\n        if (typeof right === 'number') {\n            return Math.max(left, right);\n        }\n        else {\n            return left;\n        }\n    }\n    else if (typeof right === 'number') {\n        return right;\n    }\n    else {\n        return Number.NEGATIVE_INFINITY;\n    }\n}\nexport function maxa(left, right) {\n    if (left instanceof CellError) {\n        return left;\n    }\n    if (right instanceof CellError) {\n        return right;\n    }\n    if (typeof left === 'boolean') {\n        left = coerceBooleanToNumber(left);\n    }\n    if (typeof right === 'boolean') {\n        right = coerceBooleanToNumber(right);\n    }\n    if (typeof left === 'number') {\n        if (typeof right === 'number') {\n            return Math.max(left, right);\n        }\n        else {\n            return left;\n        }\n    }\n    else if (typeof right === 'number') {\n        return right;\n    }\n    else {\n        return Number.NEGATIVE_INFINITY;\n    }\n}\n/**\n * Returns min from two numbers\n *\n * Implementation of min function which is used in interpreter.\n *\n * Errors are propagated, non-numerical values are neutral.\n *\n * @param left - left operand of addition\n * @param right - right operand of addition\n */\nexport function min(left, right) {\n    if (left instanceof CellError) {\n        return left;\n    }\n    if (right instanceof CellError) {\n        return right;\n    }\n    if (typeof left === 'number') {\n        if (typeof right === 'number') {\n            return Math.min(left, right);\n        }\n        else {\n            return left;\n        }\n    }\n    else if (typeof right === 'number') {\n        return right;\n    }\n    else {\n        return Number.POSITIVE_INFINITY;\n    }\n}\nexport function mina(left, right) {\n    if (left instanceof CellError) {\n        return left;\n    }\n    if (right instanceof CellError) {\n        return right;\n    }\n    if (typeof left === 'boolean') {\n        left = coerceBooleanToNumber(left);\n    }\n    if (typeof right === 'boolean') {\n        right = coerceBooleanToNumber(right);\n    }\n    if (typeof left === 'number') {\n        if (typeof right === 'number') {\n            return Math.min(left, right);\n        }\n        else {\n            return left;\n        }\n    }\n    else if (typeof right === 'number') {\n        return right;\n    }\n    else {\n        return Number.POSITIVE_INFINITY;\n    }\n}\nexport function numberCmp(left, right) {\n    if (left > right) {\n        return 1;\n    }\n    else if (left < right) {\n        return -1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isNumberOverflow(arg) {\n    return (isNaN(arg) || arg === Infinity || arg === -Infinity);\n}\nexport function fixNegativeZero(arg) {\n    if (arg === 0) {\n        return 0;\n    }\n    else {\n        return arg;\n    }\n}\nfunction isWildcard(c) {\n    return ['*', '?'].includes(c);\n}\nconst escapedCharacters = ['{', '}', '[', ']', '(', ')', '<', '>', '=', '.', '+', '-', ',', '\\\\', '$', '^', '!'];\nfunction needsEscape(c) {\n    return escapedCharacters.includes(c);\n}\nfunction escapeNonWildcards(pattern, caseSensitive) {\n    let str = '';\n    for (let i = 0; i < pattern.length; i++) {\n        const c = pattern.charAt(i);\n        if (c === '~') {\n            if (i == pattern.length - 1) {\n                str += '~';\n                continue;\n            }\n            const d = pattern.charAt(i + 1);\n            if (isWildcard(d) || needsEscape(d)) {\n                str += '\\\\' + d;\n                i++;\n            }\n            else {\n                str += d;\n                i++;\n            }\n        }\n        else if (isWildcard(c)) {\n            str += '.' + c;\n        }\n        else if (needsEscape(c)) {\n            str += '\\\\' + c;\n        }\n        else if (caseSensitive) {\n            str += c;\n        }\n        else {\n            str += c.toLowerCase();\n        }\n    }\n    return str;\n}\nfunction escapeAllCharacters(pattern, caseSensitive) {\n    let str = '';\n    for (let i = 0; i < pattern.length; i++) {\n        const c = pattern.charAt(i);\n        if (isWildcard(c) || needsEscape(c)) {\n            str += '\\\\' + c;\n        }\n        else if (caseSensitive) {\n            str += c;\n        }\n        else {\n            str += c.toLowerCase();\n        }\n    }\n    return str;\n}\nfunction escapeNoCharacters(pattern, caseSensitive) {\n    let str = '';\n    for (let i = 0; i < pattern.length; i++) {\n        const c = pattern.charAt(i);\n        if (isWildcard(c) || needsEscape(c)) {\n            str += c;\n        }\n        else if (caseSensitive) {\n            str += c;\n        }\n        else {\n            str += c.toLowerCase();\n        }\n    }\n    return str;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport function collatorFromConfig(config) {\n    const sensitivity = config.caseSensitive ? (config.accentSensitive ? 'variant' : 'case') : (config.accentSensitive ? 'accent' : 'base');\n    const caseFirst = config.caseFirst;\n    const ignorePunctuation = config.ignorePunctuation;\n    return new Intl.Collator(config.localeLang, { sensitivity, caseFirst, ignorePunctuation });\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { StatType } from './statistics';\nimport { ClipboardCellType } from './ClipboardOperations';\nimport { EmptyValue, invalidSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { ColumnsSpan, RowsSpan } from './Span';\nimport { ContentChanges } from './ContentChanges';\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { buildMatrixVertex } from './GraphBuilder';\nimport { EmptyCellVertex, FormulaCellVertex, MatrixVertex, ParsingErrorVertex, SparseStrategy, ValueCellVertex } from './DependencyGraph';\nimport { InvalidArgumentsError, NamedExpressionDoesNotExistError, NoRelativeAddressesAllowedError, SheetSizeLimitExceededError, SourceLocationHasMatrixError, TargetLocationHasMatrixError } from './errors';\nimport { NamedExpressionDependency } from './parser';\nimport { AddRowsTransformer } from './dependencyTransformers/AddRowsTransformer';\nimport { RemoveRowsTransformer } from './dependencyTransformers/RemoveRowsTransformer';\nimport { AddColumnsTransformer } from './dependencyTransformers/AddColumnsTransformer';\nimport { MoveCellsTransformer } from './dependencyTransformers/MoveCellsTransformer';\nimport { RemoveSheetTransformer } from './dependencyTransformers/RemoveSheetTransformer';\nimport { RemoveColumnsTransformer } from './dependencyTransformers/RemoveColumnsTransformer';\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { findBoundaries } from './Sheet';\nimport { doesContainRelativeReferences } from './NamedExpressions';\nexport class RemoveRowsCommand {\n    constructor(sheet, indexes) {\n        this.sheet = sheet;\n        this.indexes = indexes;\n    }\n    normalizedIndexes() {\n        return normalizeRemovedIndexes(this.indexes);\n    }\n    rowsSpans() {\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\n    }\n}\nexport class AddRowsCommand {\n    constructor(sheet, indexes) {\n        this.sheet = sheet;\n        this.indexes = indexes;\n    }\n    normalizedIndexes() {\n        return normalizeAddedIndexes(this.indexes);\n    }\n    rowsSpans() {\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\n    }\n}\nexport class AddColumnsCommand {\n    constructor(sheet, indexes) {\n        this.sheet = sheet;\n        this.indexes = indexes;\n    }\n    normalizedIndexes() {\n        return normalizeAddedIndexes(this.indexes);\n    }\n    columnsSpans() {\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\n    }\n}\nexport class RemoveColumnsCommand {\n    constructor(sheet, indexes) {\n        this.sheet = sheet;\n        this.indexes = indexes;\n    }\n    normalizedIndexes() {\n        return normalizeRemovedIndexes(this.indexes);\n    }\n    columnsSpans() {\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\n    }\n}\nexport class Operations {\n    constructor(dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, config) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.cellContentParser = cellContentParser;\n        this.parser = parser;\n        this.stats = stats;\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\n        this.namedExpressions = namedExpressions;\n        this.config = config;\n        this.changes = ContentChanges.empty();\n        this.allocateNamedExpressionAddressSpace();\n    }\n    removeRows(cmd) {\n        const rowsRemovals = [];\n        for (const rowsToRemove of cmd.rowsSpans()) {\n            const rowsRemoval = this.doRemoveRows(rowsToRemove);\n            if (rowsRemoval) {\n                rowsRemovals.push(rowsRemoval);\n            }\n        }\n        return rowsRemovals;\n    }\n    addRows(cmd) {\n        for (const addedRows of cmd.rowsSpans()) {\n            this.doAddRows(addedRows);\n        }\n    }\n    addColumns(cmd) {\n        for (const addedColumns of cmd.columnsSpans()) {\n            this.doAddColumns(addedColumns);\n        }\n    }\n    removeColumns(cmd) {\n        const columnsRemovals = [];\n        for (const columnsToRemove of cmd.columnsSpans()) {\n            const columnsRemoval = this.doRemoveColumns(columnsToRemove);\n            if (columnsRemoval) {\n                columnsRemovals.push(columnsRemoval);\n            }\n        }\n        return columnsRemovals;\n    }\n    removeSheet(sheetName) {\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        this.dependencyGraph.removeSheet(sheetId);\n        let version;\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new RemoveSheetTransformer(sheetId);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n        this.sheetMapping.removeSheet(sheetId);\n        this.columnSearch.removeSheet(sheetId);\n        return version;\n    }\n    clearSheet(sheetId) {\n        this.dependencyGraph.clearSheet(sheetId);\n        this.columnSearch.removeSheet(sheetId);\n    }\n    addSheet(name) {\n        const sheetId = this.sheetMapping.addSheet(name);\n        const sheet = [];\n        this.dependencyGraph.addressMapping.autoAddSheet(sheetId, sheet, findBoundaries(sheet));\n        return this.sheetMapping.fetchDisplayName(sheetId);\n    }\n    renameSheet(sheetId, newName) {\n        return this.sheetMapping.renameSheet(sheetId, newName);\n    }\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\n        const rowsToAdd = RowsSpan.fromNumberOfRows(sheet, targetRow, numberOfRows);\n        this.doAddRows(rowsToAdd);\n        if (targetRow < startRow) {\n            startRow += numberOfRows;\n        }\n        const startAddress = simpleCellAddress(sheet, 0, startRow);\n        const targetAddress = simpleCellAddress(sheet, 0, targetRow);\n        this.moveCells(startAddress, Number.POSITIVE_INFINITY, numberOfRows, targetAddress);\n        const rowsToRemove = RowsSpan.fromNumberOfRows(sheet, startRow, numberOfRows);\n        this.doRemoveRows(rowsToRemove);\n    }\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\n        const columnsToAdd = ColumnsSpan.fromNumberOfColumns(sheet, targetColumn, numberOfColumns);\n        this.doAddColumns(columnsToAdd);\n        if (targetColumn < startColumn) {\n            startColumn += numberOfColumns;\n        }\n        const startAddress = simpleCellAddress(sheet, startColumn, 0);\n        const targetAddress = simpleCellAddress(sheet, targetColumn, 0);\n        this.moveCells(startAddress, numberOfColumns, Number.POSITIVE_INFINITY, targetAddress);\n        const columnsToRemove = ColumnsSpan.fromNumberOfColumns(sheet, startColumn, numberOfColumns);\n        this.doRemoveColumns(columnsToRemove);\n    }\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        this.ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner);\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\n        this.dependencyGraph.breakNumericMatricesInRange(sourceRange);\n        this.dependencyGraph.breakNumericMatricesInRange(targetRange);\n        const toRight = destinationLeftCorner.col - sourceLeftCorner.col;\n        const toBottom = destinationLeftCorner.row - sourceLeftCorner.row;\n        const toSheet = destinationLeftCorner.sheet;\n        const currentDataAtTarget = this.getRangeClipboardCells(targetRange);\n        const valuesToRemove = this.dependencyGraph.valuesFromRange(targetRange);\n        this.columnSearch.removeValues(valuesToRemove);\n        const valuesToMove = this.dependencyGraph.valuesFromRange(sourceRange);\n        this.columnSearch.moveValues(valuesToMove, toRight, toBottom, toSheet);\n        let version;\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new MoveCellsTransformer(sourceRange, toRight, toBottom, toSheet);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n        this.dependencyGraph.moveCells(sourceRange, toRight, toBottom, toSheet);\n        const addedGlobalNamedExpressions = this.updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner);\n        return { version: version, overwrittenCellsData: currentDataAtTarget, addedGlobalNamedExpressions: addedGlobalNamedExpressions };\n    }\n    addNamedExpression(expressionName, expression, sheetId, options) {\n        this.storeNamedExpressionInCell(this.namedExpressions.lookupNextAddress(expressionName, sheetId), expression);\n        const namedExpression = this.namedExpressions.addNamedExpression(expressionName, sheetId, options);\n        this.adjustNamedExpressionEdges(namedExpression, expressionName, sheetId);\n    }\n    restoreNamedExpression(namedExpression, content, sheetId) {\n        const expressionName = namedExpression.displayName;\n        const options = namedExpression.options;\n        this.restoreCell(namedExpression.address, content);\n        const restoredNamedExpression = this.namedExpressions.addNamedExpression(expressionName, sheetId, options);\n        this.adjustNamedExpressionEdges(restoredNamedExpression, expressionName, sheetId);\n    }\n    changeNamedExpressionExpression(expressionName, newExpression, sheetId, options) {\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (!namedExpression) {\n            throw new NamedExpressionDoesNotExistError(expressionName);\n        }\n        const oldNamedExpression = namedExpression.copy();\n        namedExpression.options = options;\n        const content = this.getClipboardCell(namedExpression.address);\n        this.storeNamedExpressionInCell(namedExpression.address, newExpression);\n        return [oldNamedExpression, content];\n    }\n    removeNamedExpression(expressionName, sheetId) {\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (!namedExpression) {\n            throw new NamedExpressionDoesNotExistError(expressionName);\n        }\n        this.namedExpressions.remove(namedExpression.displayName, sheetId);\n        const content = this.getClipboardCell(namedExpression.address);\n        if (sheetId !== undefined) {\n            const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\n            this.dependencyGraph.exchangeNode(namedExpression.address, globalNamedExpression.address);\n        }\n        else {\n            this.dependencyGraph.setCellEmpty(namedExpression.address);\n        }\n        return [\n            namedExpression,\n            content\n        ];\n    }\n    ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        if (invalidSimpleCellAddress(sourceLeftCorner) ||\n            !((isPositiveInteger(width) && isPositiveInteger(height)) || isRowOrColumnRange(sourceLeftCorner, width, height)) ||\n            invalidSimpleCellAddress(destinationLeftCorner) ||\n            !this.sheetMapping.hasSheetWithId(sourceLeftCorner.sheet) ||\n            !this.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\n            throw new InvalidArgumentsError('a valid range of cells to move.');\n        }\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\n        if (targetRange.exceedsSheetSizeLimits(this.config.maxColumns, this.config.maxRows)) {\n            throw new SheetSizeLimitExceededError();\n        }\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(sourceRange)) {\n            throw new SourceLocationHasMatrixError();\n        }\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(targetRange)) {\n            throw new TargetLocationHasMatrixError();\n        }\n    }\n    restoreClipboardCells(sourceSheetId, cells) {\n        const addedNamedExpressions = [];\n        for (const [address, clipboardCell] of cells) {\n            this.restoreCell(address, clipboardCell);\n            if (clipboardCell.type === ClipboardCellType.FORMULA) {\n                const { dependencies } = this.parser.fetchCachedResult(clipboardCell.hash);\n                addedNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceSheetId, address, dependencies));\n            }\n        }\n        return addedNamedExpressions;\n    }\n    restoreCell(address, clipboardCell) {\n        switch (clipboardCell.type) {\n            case ClipboardCellType.VALUE: {\n                this.setValueToCell(clipboardCell.value, address);\n                break;\n            }\n            case ClipboardCellType.FORMULA: {\n                this.setFormulaToCellFromCache(clipboardCell.hash, address);\n                break;\n            }\n            case ClipboardCellType.EMPTY: {\n                this.setCellEmpty(address);\n                break;\n            }\n            case ClipboardCellType.PARSING_ERROR: {\n                this.setParsingErrorToCell(clipboardCell.rawInput, clipboardCell.errors, address);\n                break;\n            }\n        }\n    }\n    /**\n     * Removes multiple rows from sheet. </br>\n     * Does nothing if rows are outside of effective sheet size.\n     *\n     * @param sheet - sheet id from which rows will be removed\n     * @param rowStart - number of the first row to be deleted\n     * @param rowEnd - number of the last row to be deleted\n     * */\n    doRemoveRows(rowsToRemove) {\n        if (this.rowEffectivelyNotInSheet(rowsToRemove.rowStart, rowsToRemove.sheet)) {\n            return;\n        }\n        const removedCells = [];\n        for (const [address] of this.dependencyGraph.entriesFromRowsSpan(rowsToRemove)) {\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\n        }\n        this.dependencyGraph.removeRows(rowsToRemove);\n        let version;\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new RemoveRowsTransformer(rowsToRemove);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n        return { version: version, removedCells, rowFrom: rowsToRemove.rowStart, rowCount: rowsToRemove.numberOfRows };\n    }\n    /**\n     * Removes multiple columns from sheet. </br>\n     * Does nothing if columns are outside of effective sheet size.\n     *\n     * @param sheet - sheet id from which columns will be removed\n     * @param columnStart - number of the first column to be deleted\n     * @param columnEnd - number of the last row to be deleted\n     */\n    doRemoveColumns(columnsToRemove) {\n        if (this.columnEffectivelyNotInSheet(columnsToRemove.columnStart, columnsToRemove.sheet)) {\n            return;\n        }\n        const removedCells = [];\n        for (const [address] of this.dependencyGraph.entriesFromColumnsSpan(columnsToRemove)) {\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\n        }\n        this.dependencyGraph.removeColumns(columnsToRemove);\n        this.columnSearch.removeColumns(columnsToRemove);\n        let version;\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new RemoveColumnsTransformer(columnsToRemove);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n        return {\n            version: version,\n            removedCells,\n            columnFrom: columnsToRemove.columnStart,\n            columnCount: columnsToRemove.numberOfColumns\n        };\n    }\n    /**\n     * Add multiple rows to sheet. </br>\n     * Does nothing if rows are outside of effective sheet size.\n     *\n     * @param sheet - sheet id in which rows will be added\n     * @param row - row number above which the rows will be added\n     * @param numberOfRowsToAdd - number of rows to add\n     */\n    doAddRows(addedRows) {\n        if (this.rowEffectivelyNotInSheet(addedRows.rowStart, addedRows.sheet)) {\n            return;\n        }\n        this.dependencyGraph.addRows(addedRows);\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new AddRowsTransformer(addedRows);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n    }\n    /**\n     * Add multiple columns to sheet </br>\n     * Does nothing if columns are outside of effective sheet size\n     *\n     * @param sheet - sheet id in which columns will be added\n     * @param column - column number above which the columns will be added\n     * @param numberOfColumns - number of columns to add\n     */\n    doAddColumns(addedColumns) {\n        if (this.columnEffectivelyNotInSheet(addedColumns.columnStart, addedColumns.sheet)) {\n            return;\n        }\n        this.dependencyGraph.addColumns(addedColumns);\n        this.columnSearch.addColumns(addedColumns);\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new AddColumnsTransformer(addedColumns);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n    }\n    getClipboardCell(address) {\n        const vertex = this.dependencyGraph.getCell(address);\n        if (vertex === null || vertex instanceof EmptyCellVertex) {\n            return { type: ClipboardCellType.EMPTY };\n        }\n        else if (vertex instanceof ValueCellVertex) {\n            return { type: ClipboardCellType.VALUE, value: vertex.getCellValue() };\n        }\n        else if (vertex instanceof MatrixVertex) {\n            return { type: ClipboardCellType.VALUE, value: vertex.getMatrixCellValue(address) };\n        }\n        else if (vertex instanceof FormulaCellVertex) {\n            return {\n                type: ClipboardCellType.FORMULA,\n                hash: this.parser.computeHashFromAst(vertex.getFormula(this.lazilyTransformingAstService))\n            };\n        }\n        else if (vertex instanceof ParsingErrorVertex) {\n            return { type: ClipboardCellType.PARSING_ERROR, rawInput: vertex.rawInput, errors: vertex.errors };\n        }\n        throw Error('Trying to copy unsupported type');\n    }\n    getSheetClipboardCells(sheet) {\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\n        const arr = new Array(sheetHeight);\n        for (let i = 0; i < sheetHeight; i++) {\n            arr[i] = new Array(sheetWidth);\n            for (let j = 0; j < sheetWidth; j++) {\n                const address = simpleCellAddress(sheet, j, i);\n                arr[i][j] = this.getClipboardCell(address);\n            }\n        }\n        return arr;\n    }\n    getRangeClipboardCells(range) {\n        const result = [];\n        for (const address of range.addresses(this.dependencyGraph)) {\n            result.push([address, this.getClipboardCell(address)]);\n        }\n        return result;\n    }\n    setCellContent(address, newCellContent) {\n        const parsedCellContent = this.cellContentParser.parse(newCellContent);\n        let vertex = this.dependencyGraph.getCell(address);\n        if (vertex instanceof MatrixVertex && !vertex.isFormula() && !(parsedCellContent instanceof CellContent.Number)) {\n            this.dependencyGraph.breakNumericMatrix(vertex);\n            vertex = this.dependencyGraph.getCell(address);\n        }\n        if (vertex instanceof MatrixVertex && !vertex.isFormula() && parsedCellContent instanceof CellContent.Number) {\n            const newValue = parsedCellContent.value;\n            const oldValue = this.dependencyGraph.getCellValue(address);\n            this.dependencyGraph.graph.markNodeAsSpecialRecentlyChanged(vertex);\n            vertex.setMatrixCellValue(address, newValue);\n            this.columnSearch.change(oldValue, newValue, address);\n            this.changes.addChange(newValue, address);\n        }\n        else if (!(vertex instanceof MatrixVertex) && parsedCellContent instanceof CellContent.MatrixFormula) {\n            const { ast, errors, dependencies } = this.parser.parse(parsedCellContent.formula, address);\n            if (errors.length > 0) {\n                this.dependencyGraph.setParsingErrorToCell(address, new ParsingErrorVertex(errors, parsedCellContent.formulaWithBraces()));\n            }\n            else {\n                const newVertex = buildMatrixVertex(ast, address);\n                if (newVertex instanceof ValueCellVertex) {\n                    throw Error('What if new matrix vertex is not properly constructed?');\n                }\n                this.dependencyGraph.addNewMatrixVertex(newVertex);\n                this.dependencyGraph.processCellDependencies(absolutizeDependencies(dependencies, address), newVertex);\n                this.dependencyGraph.graph.markNodeAsSpecialRecentlyChanged(newVertex);\n            }\n        }\n        else if (!(vertex instanceof MatrixVertex)) {\n            if (parsedCellContent instanceof CellContent.Formula) {\n                const { ast, errors, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = this.parser.parse(parsedCellContent.formula, address);\n                if (errors.length > 0) {\n                    this.dependencyGraph.setParsingErrorToCell(address, new ParsingErrorVertex(errors, parsedCellContent.formula));\n                }\n                else {\n                    this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), hasVolatileFunction, hasStructuralChangeFunction);\n                }\n            }\n            else if (parsedCellContent instanceof CellContent.Empty) {\n                this.setCellEmpty(address);\n            }\n            else if (parsedCellContent instanceof CellContent.MatrixFormula) {\n                throw new Error('Cant happen');\n            }\n            else {\n                this.setValueToCell(parsedCellContent.value, address);\n            }\n        }\n        else {\n            throw new Error('Illegal operation');\n        }\n    }\n    setSheetContent(sheetId, newSheetContent) {\n        this.clearSheet(sheetId);\n        for (let i = 0; i < newSheetContent.length; i++) {\n            for (let j = 0; j < newSheetContent[i].length; j++) {\n                const address = simpleCellAddress(sheetId, j, i);\n                this.setCellContent(address, newSheetContent[i][j]);\n            }\n        }\n    }\n    setValueToCell(value, address) {\n        const oldValue = this.dependencyGraph.getCellValue(address);\n        this.dependencyGraph.setValueToCell(address, value);\n        this.columnSearch.change(oldValue, value, address);\n        this.changes.addChange(value, address);\n    }\n    setCellEmpty(address) {\n        const oldValue = this.dependencyGraph.getCellValue(address);\n        this.columnSearch.remove(oldValue, address);\n        this.changes.addChange(EmptyValue, address);\n        this.dependencyGraph.setCellEmpty(address);\n    }\n    setFormulaToCellFromCache(formulaHash, address) {\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = this.parser.fetchCachedResult(formulaHash);\n        this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), hasVolatileFunction, hasStructuralChangeFunction);\n    }\n    setParsingErrorToCell(rawInput, errors, address) {\n        this.dependencyGraph.setParsingErrorToCell(address, new ParsingErrorVertex(errors, rawInput));\n    }\n    /**\n     * Returns true if row number is outside of given sheet.\n     *\n     * @param row - row number\n     * @param sheet - sheet id number\n     */\n    rowEffectivelyNotInSheet(row, sheet) {\n        const height = this.dependencyGraph.addressMapping.getHeight(sheet);\n        return row >= height;\n    }\n    getAndClearContentChanges() {\n        const changes = this.changes;\n        this.changes = ContentChanges.empty();\n        return changes;\n    }\n    forceApplyPostponedTransformations() {\n        this.dependencyGraph.forceApplyPostponedTransformations();\n    }\n    get sheetMapping() {\n        return this.dependencyGraph.sheetMapping;\n    }\n    /**\n     * Returns true if row number is outside of given sheet.\n     *\n     * @param column - row number\n     * @param sheet - sheet id number\n     */\n    columnEffectivelyNotInSheet(column, sheet) {\n        const width = this.dependencyGraph.addressMapping.getWidth(sheet);\n        return column >= width;\n    }\n    adjustNamedExpressionEdges(namedExpression, expressionName, sheetId) {\n        if (sheetId !== undefined) {\n            const localVertex = this.dependencyGraph.fetchCellOrCreateEmpty(namedExpression.address);\n            const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\n            const globalVertex = this.dependencyGraph.fetchCellOrCreateEmpty(globalNamedExpression.address);\n            for (const adjacentNode of this.dependencyGraph.graph.adjacentNodes(globalVertex)) {\n                if ((adjacentNode instanceof FormulaCellVertex || adjacentNode instanceof MatrixVertex) && adjacentNode.cellAddress.sheet === sheetId) {\n                    const ast = adjacentNode.getFormula(this.lazilyTransformingAstService);\n                    if (ast) {\n                        const formulaAddress = adjacentNode.getAddress(this.lazilyTransformingAstService);\n                        const { dependencies } = this.parser.fetchCachedResultForAst(ast);\n                        for (const dependency of absolutizeDependencies(dependencies, formulaAddress)) {\n                            if (dependency instanceof NamedExpressionDependency && dependency.name.toLowerCase() === namedExpression.displayName.toLowerCase()) {\n                                this.dependencyGraph.graph.removeEdge(globalVertex, adjacentNode);\n                                this.dependencyGraph.graph.addEdge(localVertex, adjacentNode);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    storeNamedExpressionInCell(address, expression) {\n        const parsedCellContent = this.cellContentParser.parse(expression);\n        if (parsedCellContent instanceof CellContent.MatrixFormula) {\n            throw new Error('Matrix formulas are not supported');\n        }\n        else if (parsedCellContent instanceof CellContent.Formula) {\n            const parsingResult = this.parser.parse(parsedCellContent.formula, simpleCellAddress(-1, 0, 0));\n            if (doesContainRelativeReferences(parsingResult.ast)) {\n                throw new NoRelativeAddressesAllowedError();\n            }\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\n            this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), hasVolatileFunction, hasStructuralChangeFunction);\n        }\n        else {\n            if (parsedCellContent instanceof CellContent.Empty) {\n                this.setCellEmpty(address);\n            }\n            else {\n                this.setValueToCell(parsedCellContent.value, address);\n            }\n        }\n    }\n    updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        if (sourceLeftCorner.sheet === destinationLeftCorner.sheet) {\n            return [];\n        }\n        const addedGlobalNamedExpressions = [];\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\n        for (const formulaAddress of targetRange.addresses(this.dependencyGraph)) {\n            const vertex = this.addressMapping.fetchCell(formulaAddress);\n            if (vertex instanceof FormulaCellVertex && formulaAddress.sheet !== sourceLeftCorner.sheet) {\n                const ast = vertex.getFormula(this.lazilyTransformingAstService);\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\n                addedGlobalNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceLeftCorner.sheet, formulaAddress, dependencies));\n            }\n        }\n        return addedGlobalNamedExpressions;\n    }\n    updateNamedExpressionsForTargetAddress(sourceSheet, targetAddress, dependencies) {\n        if (sourceSheet === targetAddress.sheet) {\n            return [];\n        }\n        const addedGlobalNamedExpressions = [];\n        const vertex = this.addressMapping.fetchCell(targetAddress);\n        for (const namedExpressionDependency of absolutizeDependencies(dependencies, targetAddress)) {\n            if (!(namedExpressionDependency instanceof NamedExpressionDependency)) {\n                continue;\n            }\n            const expressionName = namedExpressionDependency.name;\n            const sourceVertex = this.dependencyGraph.fetchNamedExpressionVertex(expressionName, sourceSheet);\n            const namedExpressionInTargetScope = this.namedExpressions.isExpressionInScope(expressionName, targetAddress.sheet);\n            const targetScopeExpressionVertex = namedExpressionInTargetScope\n                ? this.dependencyGraph.fetchNamedExpressionVertex(expressionName, targetAddress.sheet)\n                : this.copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedGlobalNamedExpressions);\n            if (targetScopeExpressionVertex !== sourceVertex) {\n                this.dependencyGraph.graph.softRemoveEdge(sourceVertex, vertex);\n                this.dependencyGraph.graph.addEdge(targetScopeExpressionVertex, vertex);\n            }\n        }\n        return addedGlobalNamedExpressions;\n    }\n    allocateNamedExpressionAddressSpace() {\n        this.dependencyGraph.addressMapping.addSheet(-1, new SparseStrategy(0, 0));\n    }\n    copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedNamedExpressions) {\n        let expression = this.namedExpressions.namedExpressionForScope(expressionName);\n        if (expression === undefined) {\n            expression = this.namedExpressions.addNamedExpression(expressionName);\n            addedNamedExpressions.push(expression.normalizeExpressionName());\n            if (sourceVertex instanceof FormulaCellVertex) {\n                const parsingResult = this.parser.fetchCachedResultForAst(sourceVertex.getFormula(this.lazilyTransformingAstService));\n                const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\n                this.dependencyGraph.setFormulaToCell(expression.address, ast, absolutizeDependencies(dependencies, expression.address), hasVolatileFunction, hasStructuralChangeFunction);\n            }\n            else if (sourceVertex instanceof EmptyCellVertex) {\n                this.setCellEmpty(expression.address);\n            }\n            else if (sourceVertex instanceof ValueCellVertex) {\n                this.setValueToCell(sourceVertex.getCellValue(), expression.address);\n            }\n        }\n        return this.dependencyGraph.fetchCellOrCreateEmpty(expression.address);\n    }\n    get addressMapping() {\n        return this.dependencyGraph.addressMapping;\n    }\n}\nexport function normalizeRemovedIndexes(indexes) {\n    if (indexes.length <= 1) {\n        return indexes;\n    }\n    const sorted = indexes.sort(([a], [b]) => (a < b) ? -1 : (a > b) ? 1 : 0);\n    /* merge overlapping and adjacent indexes */\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\n        const previous = acc[acc.length - 1];\n        const lastIndex = previous[0] + previous[1];\n        if (startIndex <= lastIndex) {\n            previous[1] += Math.max(0, amount - (lastIndex - startIndex));\n        }\n        else {\n            acc.push([startIndex, amount]);\n        }\n        return acc;\n    }, [sorted[0]]);\n    /* shift further indexes */\n    let shift = 0;\n    for (let i = 0; i < merged.length; ++i) {\n        merged[i][0] -= shift;\n        shift += merged[i][1];\n    }\n    return merged;\n}\nexport function normalizeAddedIndexes(indexes) {\n    if (indexes.length <= 1) {\n        return indexes;\n    }\n    const sorted = indexes.sort(([a], [b]) => (a < b) ? -1 : (a > b) ? 1 : 0);\n    /* merge indexes with same start */\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\n        const previous = acc[acc.length - 1];\n        if (startIndex === previous[0]) {\n            previous[1] = Math.max(previous[1], amount);\n        }\n        else {\n            acc.push([startIndex, amount]);\n        }\n        return acc;\n    }, [sorted[0]]);\n    /* shift further indexes */\n    let shift = 0;\n    for (let i = 0; i < merged.length; ++i) {\n        merged[i][0] += shift;\n        shift += merged[i][1];\n    }\n    return merged;\n}\nfunction isPositiveInteger(x) {\n    return Number.isInteger(x) && x > 0;\n}\nfunction isRowOrColumnRange(leftCorner, width, height) {\n    return (leftCorner.row === 0 && isPositiveInteger(width) && height === Number.POSITIVE_INFINITY)\n        || (leftCorner.col === 0 && isPositiveInteger(height) && width === Number.POSITIVE_INFINITY);\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { InvalidArgumentsError, SheetSizeLimitExceededError } from './errors';\nvar ClipboardOperationType;\n(function (ClipboardOperationType) {\n    ClipboardOperationType[ClipboardOperationType[\"COPY\"] = 0] = \"COPY\";\n    ClipboardOperationType[ClipboardOperationType[\"CUT\"] = 1] = \"CUT\";\n})(ClipboardOperationType || (ClipboardOperationType = {}));\nexport var ClipboardCellType;\n(function (ClipboardCellType) {\n    ClipboardCellType[ClipboardCellType[\"VALUE\"] = 0] = \"VALUE\";\n    ClipboardCellType[ClipboardCellType[\"EMPTY\"] = 1] = \"EMPTY\";\n    ClipboardCellType[ClipboardCellType[\"FORMULA\"] = 2] = \"FORMULA\";\n    ClipboardCellType[ClipboardCellType[\"PARSING_ERROR\"] = 3] = \"PARSING_ERROR\";\n})(ClipboardCellType || (ClipboardCellType = {}));\nclass Clipboard {\n    constructor(sourceLeftCorner, width, height, type, content) {\n        this.sourceLeftCorner = sourceLeftCorner;\n        this.width = width;\n        this.height = height;\n        this.type = type;\n        this.content = content;\n    }\n    *getContent(leftCorner) {\n        if (this.content === undefined) {\n            return;\n        }\n        else {\n            for (let y = 0; y < this.height; ++y) {\n                for (let x = 0; x < this.width; ++x) {\n                    yield [simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y), this.content[y][x]];\n                }\n            }\n        }\n    }\n}\nexport class ClipboardOperations {\n    constructor(dependencyGraph, operations, parser, lazilyTransformingAstService, config) {\n        this.dependencyGraph = dependencyGraph;\n        this.operations = operations;\n        this.parser = parser;\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\n        this.config = config;\n    }\n    cut(leftCorner, width, height) {\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.CUT);\n    }\n    copy(leftCorner, width, height) {\n        const content = [];\n        for (let y = 0; y < height; ++y) {\n            content[y] = [];\n            for (let x = 0; x < width; ++x) {\n                const clipboardCell = this.operations.getClipboardCell(simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y));\n                content[y].push(clipboardCell);\n            }\n        }\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.COPY, content);\n    }\n    abortCut() {\n        if (this.clipboard && this.clipboard.type === ClipboardOperationType.CUT) {\n            this.clear();\n        }\n    }\n    clear() {\n        this.clipboard = undefined;\n    }\n    ensureItIsPossibleToCopyPaste(destinationLeftCorner) {\n        if (this.clipboard === undefined) {\n            return;\n        }\n        if (invalidSimpleCellAddress(destinationLeftCorner) ||\n            !this.dependencyGraph.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\n            throw new InvalidArgumentsError('a valid target address.');\n        }\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, this.clipboard.width, this.clipboard.height);\n        if (targetRange.exceedsSheetSizeLimits(this.config.maxColumns, this.config.maxRows)) {\n            throw new SheetSizeLimitExceededError();\n        }\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(targetRange)) {\n            throw new Error('It is not possible to paste onto matrix');\n        }\n    }\n    isCutClipboard() {\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.CUT;\n    }\n    isCopyClipboard() {\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.COPY;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport class ContentChanges {\n    constructor() {\n        this.changes = [];\n    }\n    static empty() {\n        return new ContentChanges();\n    }\n    addAll(other) {\n        this.changes.push(...other.changes);\n        return this;\n    }\n    addMatrixChange(newValue, address) {\n        for (const [matrixValue, cellAddress] of newValue.generateValues(address)) {\n            this.addSingleCellValue(matrixValue, cellAddress);\n        }\n    }\n    addChange(newValue, address) {\n        this.addSingleCellValue(newValue, address);\n    }\n    add(...change) {\n        this.changes.push(...change);\n    }\n    exportChanges(exporter) {\n        const ret = [];\n        this.changes.forEach((e, i) => {\n            ret[i] = exporter.exportChange(this.changes[i]);\n        });\n        return ret;\n    }\n    getChanges() {\n        return this.changes;\n    }\n    isEmpty() {\n        return this.changes === [];\n    }\n    addSingleCellValue(value, address) {\n        this.add({\n            sheet: address.sheet,\n            col: address.col,\n            row: address.row,\n            value,\n        });\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { CellError, simpleCellAddress } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { FormulaCellVertex, MatrixVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\nimport { GraphBuilderMatrixHeuristic } from './GraphBuilderMatrixHeuristic';\nimport { checkMatrixSize } from './Matrix';\nimport { StatType } from './statistics';\n/**\n * Service building the graph and mappings.\n */\nexport class GraphBuilder {\n    /**\n     * Configures the building service.\n     *\n     * @param graph - graph instance in which we want to add vertices and edges\n     * @param addressMapping - mapping from addresses to vertices\n     * @param rangeMapping - mapping from ranges to range vertices\n     * @param stats - dependency tracking building performance\n     * @param config - configuration of the sheet\n     */\n    constructor(dependencyGraph, columnSearch, parser, cellContentParser, config, stats) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.parser = parser;\n        this.cellContentParser = cellContentParser;\n        this.config = config;\n        this.stats = stats;\n        if (this.config.matrixDetection) {\n            this.buildStrategy = new MatrixDetectionStrategy(this.dependencyGraph, this.columnSearch, this.parser, this.stats, config.matrixDetectionThreshold, this.cellContentParser);\n        }\n        else {\n            this.buildStrategy = new SimpleStrategy(this.dependencyGraph, this.columnSearch, this.parser, this.stats, this.cellContentParser);\n        }\n    }\n    /**\n     * Builds graph.\n     *\n     * @param sheet - two-dimensional array representation of sheet\n     */\n    buildGraph(sheets) {\n        const dependencies = this.buildStrategy.run(sheets);\n        this.processDependencies(dependencies);\n    }\n    processDependencies(dependencies) {\n        dependencies.forEach((cellDependencies, endVertex) => {\n            this.dependencyGraph.processCellDependencies(cellDependencies, endVertex);\n        });\n    }\n}\nexport class SimpleStrategy {\n    constructor(dependencyGraph, columnIndex, parser, stats, cellContentParser) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnIndex = columnIndex;\n        this.parser = parser;\n        this.stats = stats;\n        this.cellContentParser = cellContentParser;\n    }\n    run(sheets) {\n        const dependencies = new Map();\n        for (const sheetName in sheets) {\n            const sheetId = this.dependencyGraph.getSheetId(sheetName);\n            const sheet = sheets[sheetName];\n            for (let i = 0; i < sheet.length; ++i) {\n                const row = sheet[i];\n                for (let j = 0; j < row.length; ++j) {\n                    const cellContent = row[j];\n                    const address = simpleCellAddress(sheetId, j, i);\n                    const parsedCellContent = this.cellContentParser.parse(cellContent);\n                    if (parsedCellContent instanceof CellContent.MatrixFormula) {\n                        if (this.dependencyGraph.existsVertex(address)) {\n                            continue;\n                        }\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\n                        if (parseResult.errors.length > 0) {\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formulaWithBraces());\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                        else {\n                            const vertex = buildMatrixVertex(parseResult.ast, address);\n                            dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\n                            this.dependencyGraph.addMatrixVertex(address, vertex);\n                        }\n                    }\n                    else if (parsedCellContent instanceof CellContent.Formula) {\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\n                        if (parseResult.errors.length > 0) {\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formula);\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                        else {\n                            const vertex = new FormulaCellVertex(parseResult.ast, address, 0);\n                            dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\n                            this.dependencyGraph.addVertex(address, vertex);\n                            if (parseResult.hasVolatileFunction) {\n                                this.dependencyGraph.markAsVolatile(vertex);\n                            }\n                            if (parseResult.hasStructuralChangeFunction) {\n                                this.dependencyGraph.markAsDependentOnStructureChange(vertex);\n                            }\n                        }\n                    }\n                    else if (parsedCellContent instanceof CellContent.Empty) {\n                        /* we don't care about empty cells here */\n                    }\n                    else {\n                        const vertex = new ValueCellVertex(parsedCellContent.value);\n                        this.columnIndex.add(parsedCellContent.value, address);\n                        this.dependencyGraph.addVertex(address, vertex);\n                    }\n                }\n            }\n        }\n        return dependencies;\n    }\n}\nexport class MatrixDetectionStrategy {\n    constructor(dependencyGraph, columnSearch, parser, stats, threshold, cellContentParser) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.parser = parser;\n        this.stats = stats;\n        this.threshold = threshold;\n        this.cellContentParser = cellContentParser;\n    }\n    run(sheets) {\n        const dependencies = new Map();\n        const matrixHeuristic = new GraphBuilderMatrixHeuristic(this.dependencyGraph, this.columnSearch, this.threshold, this.cellContentParser);\n        for (const sheetName in sheets) {\n            const sheetId = this.dependencyGraph.getSheetId(sheetName);\n            const sheet = sheets[sheetName];\n            matrixHeuristic.addSheet(sheetId, {\n                width: this.dependencyGraph.getSheetWidth(sheetId),\n                height: this.dependencyGraph.getSheetHeight(sheetId),\n            });\n            for (let i = 0; i < sheet.length; ++i) {\n                const row = sheet[i];\n                for (let j = 0; j < row.length; ++j) {\n                    const cellContent = row[j];\n                    const address = simpleCellAddress(sheetId, j, i);\n                    const parsedCellContent = this.cellContentParser.parse(cellContent);\n                    if (parsedCellContent instanceof CellContent.MatrixFormula) {\n                        if (this.dependencyGraph.existsVertex(address)) {\n                            continue;\n                        }\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\n                        if (parseResult.errors.length > 0) {\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formulaWithBraces());\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                        else {\n                            const vertex = buildMatrixVertex(parseResult.ast, address);\n                            dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\n                            this.dependencyGraph.addMatrixVertex(address, vertex);\n                        }\n                    }\n                    else if (parsedCellContent instanceof CellContent.Formula) {\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\n                        if (parseResult.errors.length > 0) {\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formula);\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                        else {\n                            const vertex = new FormulaCellVertex(parseResult.ast, address, 0);\n                            dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                    }\n                    else if (parsedCellContent instanceof CellContent.Empty) {\n                        /* we don't care about empty cells here */\n                    }\n                    else if (parsedCellContent instanceof CellContent.Number) {\n                        matrixHeuristic.add(address);\n                    }\n                    else {\n                        const vertex = new ValueCellVertex(parsedCellContent.value);\n                        this.columnSearch.add(parsedCellContent.value, address);\n                        this.dependencyGraph.addVertex(address, vertex);\n                    }\n                }\n            }\n        }\n        this.stats.start(StatType.MATRIX_DETECTION);\n        const notMatrices = matrixHeuristic.run(sheets);\n        for (let i = notMatrices.length - 1; i >= 0; --i) {\n            const elem = notMatrices[i];\n            for (const address of elem.cells.reverse()) {\n                const value = sheets[this.dependencyGraph.getSheetName(address.sheet)][address.row][address.col];\n                const vertex = new ValueCellVertex(Number(value));\n                this.columnSearch.add(Number(value), address);\n                this.dependencyGraph.addVertex(address, vertex);\n            }\n        }\n        this.stats.end(StatType.MATRIX_DETECTION);\n        return dependencies;\n    }\n}\nexport function buildMatrixVertex(ast, formulaAddress) {\n    const size = checkMatrixSize(ast, formulaAddress);\n    if (size instanceof CellError) {\n        return new ValueCellVertex(size);\n    }\n    return new MatrixVertex(formulaAddress, size.width, size.height, ast);\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { simpleCellAddress } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { MatrixVertex } from './DependencyGraph';\nimport { Matrix, MatrixSize } from './Matrix';\nexport class Array2d {\n    constructor(size) {\n        this._size = size;\n        this.array = new Array(size.height);\n        for (let y = 0; y < size.height; ++y) {\n            this.array[y] = new Array(size.width);\n        }\n    }\n    static fromArray(input) {\n        const size = new MatrixSize(input[0].length, input.length);\n        const array = new Array2d(size);\n        for (let i = 0; i < size.height; ++i) {\n            for (let j = 0; j < size.width; ++j) {\n                array.set(j, i, input[i][j]);\n            }\n        }\n        return array;\n    }\n    set(x, y, value) {\n        this.array[y][x] = value;\n    }\n    get(x, y) {\n        const row = this.array[y];\n        if (!row) {\n            return null;\n        }\n        return row[x] || null;\n    }\n    size() {\n        return this._size;\n    }\n}\nexport class GraphBuilderMatrixHeuristic {\n    constructor(dependencyGraph, columnSearch, threshold, cellContentParser) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.threshold = threshold;\n        this.cellContentParser = cellContentParser;\n        this.mapping = new Map();\n    }\n    addSheet(id, size) {\n        this.mapping.set(id, new Array2d(size));\n    }\n    add(cellAddress) {\n        if (!this.mapping.has(cellAddress.sheet)) {\n            throw Error(`Sheet with id: ${cellAddress.sheet} does not exists`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.mapping.get(cellAddress.sheet).set(cellAddress.col, cellAddress.row, true);\n    }\n    run(sheets) {\n        const notMatrices = [];\n        const scanResult = this.findMatrices();\n        scanResult.forEach((elem) => {\n            if (!elem.isMatrix || elem.range.size() < this.threshold) {\n                notMatrices.push(elem);\n                return;\n            }\n            const possibleMatrix = elem.range;\n            const matrixVertex = MatrixVertex.fromRange(possibleMatrix);\n            const sheet = sheets[this.dependencyGraph.getSheetName(possibleMatrix.start.sheet)];\n            const matrix = this.matrixFromPlainValues(possibleMatrix, sheet);\n            matrixVertex.setCellValue(matrix);\n            this.dependencyGraph.addMatrixVertex(matrixVertex.getAddress(), matrixVertex);\n            this.columnSearch.add(matrix, matrixVertex.getAddress());\n        });\n        this.mapping.clear();\n        return notMatrices;\n    }\n    matrixFromPlainValues(range, sheet) {\n        const values = new Array(range.height());\n        for (let i = 0; i < range.height(); ++i) {\n            values[i] = new Array(range.width());\n        }\n        for (const address of range.addresses(this.dependencyGraph)) {\n            const cellContent = sheet[address.row][address.col];\n            const parsedCellContent = this.cellContentParser.parse(cellContent);\n            if (parsedCellContent instanceof CellContent.Number) {\n                values[address.row - range.start.row][address.col - range.start.col] = parsedCellContent.value;\n            }\n            else {\n                throw new Error('Range contains not numeric values');\n            }\n        }\n        return new Matrix(values);\n    }\n    findMatrices() {\n        const result = [];\n        this.mapping.forEach((m, sheet) => {\n            for (const possibleMatrix of findMatrices(sheet, m)) {\n                result.push(possibleMatrix);\n            }\n        });\n        return result;\n    }\n}\nexport function findMatrices(sheet, input) {\n    const size = input.size();\n    const result = new Map();\n    const colours = new Array2d(size);\n    let colour = 0;\n    for (let y = size.height - 1; y >= 0; --y) {\n        for (let x = size.width - 1; x >= 0; --x) {\n            const value = input.get(x, y);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const [right, rightColour] = [input.get(x + 1, y), colours.get(x + 1, y)];\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const [bottom, bottomColour] = [input.get(x, y + 1), colours.get(x, y + 1)];\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const [diag, diagColour] = [input.get(x + 1, y + 1), colours.get(x + 1, y + 1)];\n            if (!value) {\n                colours.set(x, y, 0);\n                if (rightColour === bottomColour) {\n                    // 0 1\n                    // 1 *\n                    if (result.has(rightColour)) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        result.get(rightColour).isMatrix = false;\n                    }\n                }\n            }\n            else if (value !== right && rightColour === bottomColour) {\n                // 1 2\n                // 2 *\n                colours.set(x, y, ++colour);\n                result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n                if (result.has(rightColour)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    result.get(rightColour).isMatrix = false;\n                }\n            }\n            else if (value !== diag) {\n                if (right === value && right === bottom) {\n                    // 1 1\n                    // 1 0\n                    if (result.has(rightColour)) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        result.get(rightColour).isMatrix = false;\n                    }\n                    if (result.has(bottomColour)) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        result.get(bottomColour).isMatrix = false;\n                    }\n                    colours.set(x, y, ++colour);\n                    result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n                }\n                else if (right !== value && bottom === value) {\n                    // 1 0\n                    // 1 0\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    if (result.has(bottomColour) && result.get(bottomColour).isMatrix) {\n                        colours.set(x, y, bottomColour);\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        const old = result.get(bottomColour);\n                        old.cells.push(simpleCellAddress(sheet, x, y));\n                        result.set(bottomColour, possibleMatrix(old.range.withStart(simpleCellAddress(sheet, x, y)), true, old.cells));\n                    }\n                    else {\n                        colours.set(x, y, ++colour);\n                        result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n                    }\n                }\n                else if (right === value && bottom !== value) {\n                    // 1 1\n                    // 0 0\n                    colours.set(x, y, rightColour);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const old = result.get(rightColour);\n                    old.cells.push(simpleCellAddress(sheet, x, y));\n                    result.set(rightColour, possibleMatrix(old.range.withStart(simpleCellAddress(sheet, x, y)), true, old.cells));\n                }\n                else {\n                    colours.set(x, y, ++colour);\n                    result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n                }\n            }\n            else if (value === diag && diagColour === rightColour && diagColour === bottomColour) {\n                // 1 1\n                // 1 1\n                colours.set(x, y, rightColour);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const old = result.get(rightColour);\n                old.cells.push(simpleCellAddress(sheet, x, y));\n                result.set(rightColour, possibleMatrix(old.range.withStart(simpleCellAddress(sheet, x, y)), true, old.cells));\n            }\n            else if (value === diag) {\n                colours.set(x, y, ++colour);\n                result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n            }\n        }\n    }\n    return result.values();\n}\nfunction possibleMatrix(range, isMatrix, cells) {\n    return {\n        isMatrix,\n        range,\n        cells,\n    };\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport class AddRowsTransformer extends Transformer {\n    constructor(rowsSpan) {\n        super();\n        this.rowsSpan = rowsSpan;\n    }\n    get sheet() {\n        return this.rowsSpan.sheet;\n    }\n    isIrreversible() {\n        return false;\n    }\n    transformColumnRangeAst(ast, _formulaAddress) {\n        return ast;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformColumnRange(_start, _end, _formulaAddress) {\n        throw Error('Not implemented');\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\n        // Case 4 and 5\n        if ((absoluteDependencySheet !== this.rowsSpan.sheet)\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\n            return false;\n        }\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n        // Case 3\n        if ((absoluteDependencySheet === this.rowsSpan.sheet)\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\n            if (this.rowsSpan.rowStart <= absolutizedDependencyAddress.row) {\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n            }\n            else {\n                return false;\n            }\n        }\n        // Case 2\n        if ((formulaAddress.sheet === this.rowsSpan.sheet)\n            && (absoluteDependencySheet !== this.rowsSpan.sheet)) {\n            if (dependencyAddress.isRowAbsolute()) {\n                return false;\n            }\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\n                return false;\n            }\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n        }\n        // Case 1\n        if (dependencyAddress.isRowAbsolute()) {\n            if (dependencyAddress.row < this.rowsSpan.rowStart) { // Case Aa\n                return false;\n            }\n            else { // Case Ab\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n            }\n        }\n        else {\n            if (absolutizedDependencyAddress.row < this.rowsSpan.rowStart) {\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Raa\n                    return false;\n                }\n                else { // Case Rab\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n                }\n            }\n            else {\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Rba\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n                }\n                else { // Case Rbb\n                    return false;\n                }\n            }\n        }\n    }\n    fixNodeAddress(address) {\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\n            return Object.assign(Object.assign({}, address), { row: address.row + this.rowsSpan.numberOfRows });\n        }\n        else {\n            return address;\n        }\n    }\n    transformRange(start, end, formulaAddress) {\n        const newStart = this.transformCellAddress(start, formulaAddress);\n        const newEnd = this.transformCellAddress(end, formulaAddress);\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            return ErrorType.REF;\n        }\n        else if (newStart || newEnd) {\n            return [newStart || start, newEnd || end];\n        }\n        else {\n            return false;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../Cell';\nimport { AstNodeType, buildCellErrorAst, CellAddress, } from '../parser';\nexport class Transformer {\n    performEagerTransformations(graph, parser) {\n        for (const node of graph.matrixFormulaNodes()) {\n            const [newAst, newAddress] = this.transformSingleAst(node.getFormula(), node.getAddress());\n            const cachedAst = parser.rememberNewAst(newAst);\n            node.setFormula(cachedAst);\n            node.setAddress(newAddress);\n        }\n    }\n    transformSingleAst(ast, address) {\n        const newAst = this.transformAst(ast, address);\n        const newAddress = this.fixNodeAddress(address);\n        return [newAst, newAddress];\n    }\n    transformAst(ast, address) {\n        switch (ast.type) {\n            case AstNodeType.CELL_REFERENCE: {\n                return this.transformCellReferenceAst(ast, address);\n            }\n            case AstNodeType.CELL_RANGE: {\n                return this.transformCellRangeAst(ast, address);\n            }\n            case AstNodeType.COLUMN_RANGE: {\n                return this.transformColumnRangeAst(ast, address);\n            }\n            case AstNodeType.ROW_RANGE: {\n                return this.transformRowRangeAst(ast, address);\n            }\n            case AstNodeType.EMPTY:\n            case AstNodeType.ERROR:\n            case AstNodeType.NUMBER:\n            case AstNodeType.NAMED_EXPRESSION:\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\n            case AstNodeType.STRING: {\n                return ast;\n            }\n            case AstNodeType.PERCENT_OP: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, value: this.transformAst(ast.value, address) });\n            }\n            case AstNodeType.MINUS_UNARY_OP: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, value: this.transformAst(ast.value, address) });\n            }\n            case AstNodeType.PLUS_UNARY_OP: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, value: this.transformAst(ast.value, address) });\n            }\n            case AstNodeType.FUNCTION_CALL: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, procedureName: ast.procedureName, args: ast.args.map((arg) => this.transformAst(arg, address)) });\n            }\n            case AstNodeType.PARENTHESIS: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, expression: this.transformAst(ast.expression, address) });\n            }\n            default: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, left: this.transformAst(ast.left, address), right: this.transformAst(ast.right, address) });\n            }\n        }\n    }\n    transformCellReferenceAst(ast, formulaAddress) {\n        const newCellAddress = this.transformCellAddress(ast.reference, formulaAddress);\n        if (newCellAddress instanceof CellAddress) {\n            return Object.assign(Object.assign({}, ast), { reference: newCellAddress });\n        }\n        else if (newCellAddress === ErrorType.REF) {\n            return buildCellErrorAst(new CellError(ErrorType.REF));\n        }\n        else {\n            return ast;\n        }\n    }\n    transformCellRangeAst(ast, formulaAddress) {\n        const newRange = this.transformCellRange(ast.start, ast.end, formulaAddress);\n        if (Array.isArray(newRange)) {\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\n        }\n        else if (newRange === ErrorType.REF) {\n            return buildCellErrorAst(new CellError(ErrorType.REF));\n        }\n        else {\n            return ast;\n        }\n    }\n    transformColumnRangeAst(ast, formulaAddress) {\n        const newRange = this.transformColumnRange(ast.start, ast.end, formulaAddress);\n        if (Array.isArray(newRange)) {\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\n        }\n        else if (newRange === ErrorType.REF) {\n            return buildCellErrorAst(new CellError(ErrorType.REF));\n        }\n        else {\n            return ast;\n        }\n    }\n    transformRowRangeAst(ast, formulaAddress) {\n        const newRange = this.transformRowRange(ast.start, ast.end, formulaAddress);\n        if (Array.isArray(newRange)) {\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\n        }\n        else if (newRange === ErrorType.REF) {\n            return buildCellErrorAst(new CellError(ErrorType.REF));\n        }\n        else {\n            return ast;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport class RemoveRowsTransformer extends Transformer {\n    constructor(rowsSpan) {\n        super();\n        this.rowsSpan = rowsSpan;\n    }\n    get sheet() {\n        return this.rowsSpan.sheet;\n    }\n    isIrreversible() {\n        return true;\n    }\n    transformColumnRangeAst(ast, _formulaAddress) {\n        return ast;\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\n        // Case 4\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\n            return false;\n        }\n        // Case 3 -- removed row in same sheet where dependency is but formula in different\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\n            const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n            if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) { // 3.ARa\n                return false;\n            }\n            else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) { // 3.ARb\n                return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n            }\n        }\n        // Case 2 -- removed row in same sheet where formula but dependency in different sheet\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\n            if (dependencyAddress.isRowAbsolute()) { // 2.A\n                return false;\n            }\n            else {\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // 2.Ra\n                    return false;\n                }\n                else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 2.Rb\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n                }\n            }\n        }\n        // Case 1 -- same sheet\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\n            if (dependencyAddress.isRowAbsolute()) {\n                if (dependencyAddress.row < this.rowsSpan.rowStart) { // 1.Aa\n                    return false;\n                }\n                else if (dependencyAddress.row > this.rowsSpan.rowEnd) { // 1.Ab\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n                }\n            }\n            else {\n                const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n                if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Raa\n                        return false;\n                    }\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rab\n                        return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n                    }\n                }\n                else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Rba\n                        return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n                    }\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rbb\n                        return false;\n                    }\n                }\n            }\n        }\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\n        return ErrorType.REF;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformColumnRange(_start, _end, _formulaAddress) {\n        throw Error('Not implemented');\n    }\n    fixNodeAddress(address) {\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\n            return Object.assign(Object.assign({}, address), { row: address.row - this.rowsSpan.numberOfRows });\n        }\n        else {\n            return address;\n        }\n    }\n    transformRange(start, end, formulaAddress) {\n        const startSheet = absoluteSheetReference(start, formulaAddress);\n        let actualStart = start;\n        let actualEnd = end;\n        if (this.rowsSpan.sheet === startSheet) {\n            const startSCA = start.toSimpleRowAddress(formulaAddress);\n            const endSCA = end.toSimpleRowAddress(formulaAddress);\n            if (this.rowsSpan.rowStart <= startSCA.row && this.rowsSpan.rowEnd >= endSCA.row) {\n                return ErrorType.REF;\n            }\n            if (startSCA.row >= this.rowsSpan.rowStart && startSCA.row <= this.rowsSpan.rowEnd) {\n                actualStart = start.shiftedByRows(this.rowsSpan.rowEnd - startSCA.row + 1);\n            }\n            if (endSCA.row >= this.rowsSpan.rowStart && endSCA.row <= this.rowsSpan.rowEnd) {\n                actualEnd = end.shiftedByRows(-(endSCA.row - this.rowsSpan.rowStart + 1));\n            }\n        }\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\n        if (newStart === false && newEnd === false) {\n            return [actualStart, actualEnd];\n        }\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            throw Error('Cannot happen');\n        }\n        else {\n            return [newStart || actualStart, newEnd || actualEnd];\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport class AddColumnsTransformer extends Transformer {\n    constructor(columnsSpan) {\n        super();\n        this.columnsSpan = columnsSpan;\n    }\n    get sheet() {\n        return this.columnsSpan.sheet;\n    }\n    isIrreversible() {\n        return false;\n    }\n    transformRowRangeAst(ast, _formulaAddress) {\n        return ast;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(_start, _end, _formulaAddress) {\n        throw Error('Not implemented');\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\n        // Case 4 and 5\n        if ((absoluteDependencySheet !== this.columnsSpan.sheet)\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\n            return false;\n        }\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n        // Case 3\n        if ((absoluteDependencySheet === this.columnsSpan.sheet)\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\n            if (this.columnsSpan.columnStart <= absolutizedDependencyAddress.col) {\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n            }\n            else {\n                return false;\n            }\n        }\n        // Case 2\n        if ((formulaAddress.sheet === this.columnsSpan.sheet)\n            && (absoluteDependencySheet !== this.columnsSpan.sheet)) {\n            if (dependencyAddress.isColumnAbsolute()) {\n                return false;\n            }\n            if (formulaAddress.col < this.columnsSpan.columnStart) {\n                return false;\n            }\n            return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n        }\n        // Case 1\n        if (dependencyAddress.isColumnAbsolute()) {\n            if (dependencyAddress.col < this.columnsSpan.columnStart) { // Case Aa\n                return false;\n            }\n            else { // Case Ab\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n            }\n        }\n        else {\n            const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n            if (absolutizedDependencyAddress.col < this.columnsSpan.columnStart) {\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Raa\n                    return false;\n                }\n                else { // Case Rab\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n                }\n            }\n            else {\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Rba\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n                }\n                else { // Case Rbb\n                    return false;\n                }\n            }\n        }\n    }\n    fixNodeAddress(address) {\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\n            return Object.assign(Object.assign({}, address), { col: address.col + this.columnsSpan.numberOfColumns });\n        }\n        else {\n            return address;\n        }\n    }\n    transformRange(start, end, formulaAddress) {\n        const newStart = this.transformCellAddress(start, formulaAddress);\n        const newEnd = this.transformCellAddress(end, formulaAddress);\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            return ErrorType.REF;\n        }\n        else if (newStart || newEnd) {\n            return [newStart || start, newEnd || end];\n        }\n        else {\n            return false;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { Transformer } from './Transformer';\nimport { CellAddress } from '../parser';\nimport { ErrorType, simpleCellAddress } from '../Cell';\nimport { RowAddress } from '../parser/RowAddress';\nexport class MoveCellsTransformer extends Transformer {\n    constructor(sourceRange, toRight, toBottom, toSheet) {\n        super();\n        this.sourceRange = sourceRange;\n        this.toRight = toRight;\n        this.toBottom = toBottom;\n        this.toSheet = toSheet;\n        this.dependentFormulaTransformer = new DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet);\n    }\n    isIrreversible() {\n        return true;\n    }\n    get sheet() {\n        return this.sourceRange.sheet;\n    }\n    transformSingleAst(ast, address) {\n        if (this.sourceRange.addressInRange(address)) {\n            const newAst = this.transformAst(ast, address);\n            return [newAst, this.fixNodeAddress(address)];\n        }\n        else {\n            return this.dependentFormulaTransformer.transformSingleAst(ast, address);\n        }\n    }\n    fixNodeAddress(address) {\n        return simpleCellAddress(this.toSheet, address.col + this.toRight, address.row + this.toBottom);\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        return this.transformAddress(dependencyAddress, formulaAddress);\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformAddress(dependencyAddress, formulaAddress) {\n        const sourceRange = this.sourceRange;\n        const targetRange = sourceRange.shifted(this.toRight, this.toBottom);\n        if (dependencyAddress instanceof CellAddress) {\n            const absoluteDependencyAddress = dependencyAddress.toSimpleCellAddress(formulaAddress);\n            if (sourceRange.addressInRange(absoluteDependencyAddress)) { // If dependency is internal, move only absolute dimensions\n                return dependencyAddress.shiftAbsoluteDimensions(this.toRight, this.toBottom);\n            }\n            else if (targetRange.addressInRange(absoluteDependencyAddress)) { // If dependency is external and moved range overrides it return REF\n                return ErrorType.REF;\n            }\n        }\n        return dependencyAddress.shiftRelativeDimensions(-this.toRight, -this.toBottom);\n    }\n    transformRange(start, end, formulaAddress) {\n        const newStart = this.transformAddress(start, formulaAddress);\n        const newEnd = this.transformAddress(end, formulaAddress);\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            return ErrorType.REF;\n        }\n        else if (newStart || newEnd) {\n            return [newStart || start, newEnd || end];\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass DependentFormulaTransformer extends Transformer {\n    constructor(sourceRange, toRight, toBottom, toSheet) {\n        super();\n        this.sourceRange = sourceRange;\n        this.toRight = toRight;\n        this.toBottom = toBottom;\n        this.toSheet = toSheet;\n    }\n    get sheet() {\n        return this.sourceRange.sheet;\n    }\n    isIrreversible() {\n        return true;\n    }\n    fixNodeAddress(address) {\n        return address;\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        if (this.shouldMove(dependencyAddress, formulaAddress)) {\n            return dependencyAddress.moved(this.toSheet, this.toRight, this.toBottom);\n        }\n        return false;\n    }\n    shouldMove(dependencyAddress, formulaAddress) {\n        if (dependencyAddress instanceof CellAddress) {\n            return this.sourceRange.addressInRange(dependencyAddress.toSimpleCellAddress(formulaAddress));\n        }\n        else if (dependencyAddress instanceof RowAddress) {\n            return this.sourceRange.rowInRange(dependencyAddress.toSimpleRowAddress(formulaAddress)) && !this.sourceRange.isFinite();\n        }\n        else {\n            return this.sourceRange.columnInRange(dependencyAddress.toSimpleColumnAddress(formulaAddress)) && !this.sourceRange.isFinite();\n        }\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRange(start, end, formulaAddress) {\n        const newStart = this.transformCellAddress(start, formulaAddress);\n        const newEnd = this.transformCellAddress(end, formulaAddress);\n        if (newStart && newEnd) {\n            return [newStart, newEnd];\n        }\n        return false;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { Transformer } from './Transformer';\nimport { ErrorType } from '../Cell';\nexport class RemoveSheetTransformer extends Transformer {\n    constructor(sheet) {\n        super();\n        this.sheet = sheet;\n    }\n    isIrreversible() {\n        return true;\n    }\n    performEagerTransformations(graph, _parser) {\n        for (const node of graph.matrixFormulaNodes()) {\n            const [newAst] = this.transformSingleAst(node.getFormula(), node.getAddress());\n            node.setFormula(newAst);\n        }\n    }\n    fixNodeAddress(address) {\n        return address;\n    }\n    transformCellAddress(dependencyAddress, _formulaAddress) {\n        if (dependencyAddress.sheet === this.sheet) {\n            return ErrorType.REF;\n        }\n        return false;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        const newStart = this.transformCellAddress(start, formulaAddress);\n        const newEnd = this.transformCellAddress(end, formulaAddress);\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            return ErrorType.REF;\n        }\n        else if (newStart || newEnd) {\n            return [newStart || start, newEnd || end];\n        }\n        else {\n            return false;\n        }\n    }\n    transformColumnRange(start, _end, _formulaAddress) {\n        if (start.sheet === this.sheet || start.sheet === this.sheet) {\n            return ErrorType.REF;\n        }\n        return false;\n    }\n    transformRowRange(start, _end, _formulaAddress) {\n        if (start.sheet === this.sheet || start.sheet === this.sheet) {\n            return ErrorType.REF;\n        }\n        return false;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport class RemoveColumnsTransformer extends Transformer {\n    constructor(columnsSpan) {\n        super();\n        this.columnsSpan = columnsSpan;\n    }\n    isIrreversible() {\n        return true;\n    }\n    get sheet() {\n        return this.columnsSpan.sheet;\n    }\n    transformRowRangeAst(ast, _formulaAddress) {\n        return ast;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(_start, _end, _formulaAddress) {\n        throw Error('Not implemented');\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\n        // Case 4\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\n            return false;\n        }\n        // Case 3 -- removed column in same sheet where dependency is but formula in different\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\n            const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n            if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) { // 3.ARa\n                return false;\n            }\n            else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) { // 3.ARb\n                return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n            }\n        }\n        // Case 2 -- removed column in same sheet where formula but dependency in different sheet\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\n            if (dependencyAddress.isColumnAbsolute()) { // 2.A\n                return false;\n            }\n            else {\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // 2.Ra\n                    return false;\n                }\n                else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 2.Rb\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n                }\n            }\n        }\n        // Case 1 -- same sheet\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\n            if (dependencyAddress.isColumnAbsolute()) {\n                if (dependencyAddress.col < this.columnsSpan.columnStart) { // 1.Aa\n                    return false;\n                }\n                else if (dependencyAddress.col > this.columnsSpan.columnEnd) { // 1.Ab\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n                }\n            }\n            else {\n                const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n                if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) {\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Raa\n                        return false;\n                    }\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rab\n                        return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n                    }\n                }\n                else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) {\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Rba\n                        return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n                    }\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rbb\n                        return false;\n                    }\n                }\n            }\n        }\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\n        return ErrorType.REF;\n    }\n    fixNodeAddress(address) {\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\n            return Object.assign(Object.assign({}, address), { col: address.col - this.columnsSpan.numberOfColumns });\n        }\n        else {\n            return address;\n        }\n    }\n    transformRange(start, end, formulaAddress) {\n        const startSheet = absoluteSheetReference(start, formulaAddress);\n        let actualStart = start;\n        let actualEnd = end;\n        if (this.columnsSpan.sheet === startSheet) {\n            const startSCA = start.toSimpleColumnAddress(formulaAddress);\n            const endSCA = end.toSimpleColumnAddress(formulaAddress);\n            if (this.columnsSpan.columnStart <= startSCA.col && this.columnsSpan.columnEnd >= endSCA.col) {\n                return ErrorType.REF;\n            }\n            if (startSCA.col >= this.columnsSpan.columnStart && startSCA.col <= this.columnsSpan.columnEnd) {\n                actualStart = start.shiftedByColumns(this.columnsSpan.columnEnd - startSCA.col + 1);\n            }\n            if (endSCA.col >= this.columnsSpan.columnStart && endSCA.col <= this.columnsSpan.columnEnd) {\n                actualEnd = end.shiftedByColumns(-(endSCA.col - this.columnsSpan.columnStart + 1));\n            }\n        }\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\n        if (newStart === false && newEnd === false) {\n            return [actualStart, actualEnd];\n        }\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            throw Error('Cannot happen');\n        }\n        else {\n            return [newStart || actualStart, newEnd || actualEnd];\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { InvalidArgumentsError } from './errors';\nexport function validateAsSheet(sheet) {\n    if (!Array.isArray(sheet)) {\n        throw new InvalidArgumentsError('an array of arrays.');\n    }\n    for (let i = 0; i < sheet.length; i++) {\n        if (!Array.isArray(sheet[i])) {\n            throw new InvalidArgumentsError('an array of arrays.');\n        }\n    }\n}\n/**\n * Returns actual width, height and fill ratio of a sheet\n *\n * @param sheet - two-dimmensional array sheet representation\n */\nexport function findBoundaries(sheet) {\n    let width = 0;\n    let height = 0;\n    let cellsCount = 0;\n    for (let currentRow = 0; currentRow < sheet.length; currentRow++) {\n        let currentRowWidth = 0;\n        for (let currentCol = 0; currentCol < sheet[currentRow].length; currentCol++) {\n            const currentValue = sheet[currentRow][currentCol];\n            if (currentValue === undefined || currentValue === null) {\n                continue;\n            }\n            currentRowWidth = currentCol + 1;\n            ++cellsCount;\n        }\n        width = Math.max(width, currentRowWidth);\n        if (currentRowWidth > 0) {\n            height = currentRow + 1;\n        }\n    }\n    const sheetSize = width * height;\n    return {\n        height: height,\n        width: width,\n        fill: sheetSize === 0 ? 0 : cellsCount / sheetSize,\n    };\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { TinyEmitter } from 'tiny-emitter';\nexport var Events;\n(function (Events) {\n    Events[\"SheetAdded\"] = \"sheetAdded\";\n    Events[\"SheetRemoved\"] = \"sheetRemoved\";\n    Events[\"SheetRenamed\"] = \"sheetRenamed\";\n    Events[\"NamedExpressionAdded\"] = \"namedExpressionAdded\";\n    Events[\"NamedExpressionRemoved\"] = \"namedExpressionRemoved\";\n    Events[\"ValuesUpdated\"] = \"valuesUpdated\";\n})(Events || (Events = {}));\nexport class Emitter extends TinyEmitter {\n    emit(event, ...args) {\n        super.emit(event, ...args);\n        return this;\n    }\n}\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { LazilyTransformingAstService } from './LazilyTransformingAstService';\nimport { CellContentParser } from './CellContentParser';\nimport { Exporter } from './CellValue';\nimport { buildColumnSearchStrategy } from './ColumnSearch/ColumnSearchStrategy';\nimport { Config } from './Config';\nimport { DateTimeHelper } from './DateTimeHelper';\nimport { CrudOperations } from './CrudOperations';\nimport { DependencyGraph } from './DependencyGraph';\nimport { Evaluator } from './Evaluator';\nimport { GraphBuilder } from './GraphBuilder';\nimport { UIElement } from './i18n';\nimport { NamedExpressions } from './NamedExpressions';\nimport { NumberLiteralHelper } from './NumberLiteralHelper';\nimport { buildLexerConfig, ParserWithCaching, Unparser } from './parser';\nimport { Serialization } from './Serialization';\nimport { EmptyStatistics, Statistics, StatType } from './statistics';\nimport { SheetSizeLimitExceededError } from './errors';\nimport { findBoundaries, validateAsSheet } from './Sheet';\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\nexport class BuildEngineFactory {\n    static buildEngine(config, sheets = {}, stats = config.useStats ? new Statistics() : new EmptyStatistics()) {\n        stats.start(StatType.BUILD_ENGINE_TOTAL);\n        const namedExpressions = new NamedExpressions();\n        const functionRegistry = new FunctionRegistry(config);\n        const lazilyTransformingAstService = new LazilyTransformingAstService(stats);\n        const dependencyGraph = DependencyGraph.buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats);\n        const columnSearch = buildColumnSearchStrategy(dependencyGraph, config, stats);\n        const sheetMapping = dependencyGraph.sheetMapping;\n        const addressMapping = dependencyGraph.addressMapping;\n        for (const sheetName in sheets) {\n            if (Object.prototype.hasOwnProperty.call(sheets, sheetName)) {\n                const sheet = sheets[sheetName];\n                validateAsSheet(sheet);\n                const boundaries = findBoundaries(sheet);\n                if (boundaries.height > config.maxRows || boundaries.width > config.maxColumns) {\n                    throw new SheetSizeLimitExceededError();\n                }\n                const sheetId = sheetMapping.addSheet(sheetName);\n                addressMapping.autoAddSheet(sheetId, sheet, boundaries);\n            }\n        }\n        const parser = new ParserWithCaching(config, functionRegistry, sheetMapping.get);\n        const unparser = new Unparser(config, buildLexerConfig(config), sheetMapping.fetchDisplayName, namedExpressions);\n        const dateHelper = new DateTimeHelper(config);\n        const numberLiteralHelper = new NumberLiteralHelper(config);\n        const cellContentParser = new CellContentParser(config, dateHelper, numberLiteralHelper);\n        const crudOperations = new CrudOperations(config, stats, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions);\n        stats.measure(StatType.GRAPH_BUILD, () => {\n            const graphBuilder = new GraphBuilder(dependencyGraph, columnSearch, parser, cellContentParser, config, stats);\n            graphBuilder.buildGraph(sheets);\n        });\n        lazilyTransformingAstService.undoRedo = crudOperations.undoRedo;\n        lazilyTransformingAstService.parser = parser;\n        const evaluator = new Evaluator(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralHelper, functionRegistry, namedExpressions);\n        evaluator.run();\n        const exporter = new Exporter(config, namedExpressions);\n        const serialization = new Serialization(dependencyGraph, unparser, config, exporter);\n        stats.end(StatType.BUILD_ENGINE_TOTAL);\n        return {\n            config,\n            stats,\n            dependencyGraph,\n            columnSearch,\n            parser,\n            unparser,\n            cellContentParser,\n            evaluator,\n            lazilyTransformingAstService,\n            crudOperations,\n            exporter,\n            namedExpressions,\n            serialization,\n            functionRegistry,\n        };\n    }\n    static buildFromSheets(sheets, configInput) {\n        const config = new Config(configInput);\n        return this.buildEngine(config, sheets);\n    }\n    static buildFromSheet(sheet, configInput) {\n        const config = new Config(configInput);\n        const newsheetprefix = config.translationPackage.getUITranslation(UIElement.NEW_SHEET_PREFIX) + '1';\n        return this.buildEngine(config, { [newsheetprefix]: sheet });\n    }\n    static buildEmpty(configInput) {\n        return this.buildEngine(new Config(configInput));\n    }\n    static rebuildWithConfig(config, sheets, stats) {\n        return this.buildEngine(config, sheets, stats);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { StatType } from './statistics';\nexport class LazilyTransformingAstService {\n    constructor(stats) {\n        this.stats = stats;\n        this.transformations = [];\n    }\n    version() {\n        return this.transformations.length;\n    }\n    addTransformation(transformation) {\n        this.transformations.push(transformation);\n        return this.version();\n    }\n    applyTransformations(ast, address, version) {\n        this.stats.start(StatType.TRANSFORM_ASTS_POSTPONED);\n        for (let v = version; v < this.transformations.length; v++) {\n            const transformation = this.transformations[v];\n            if (transformation.isIrreversible()) {\n                this.undoRedo.storeDataForVersion(v, address, this.parser.computeHashFromAst(ast));\n            }\n            const [newAst, newAddress] = transformation.transformSingleAst(ast, address);\n            ast = newAst;\n            address = newAddress;\n        }\n        const cachedAst = this.parser.rememberNewAst(ast);\n        this.stats.end(StatType.TRANSFORM_ASTS_POSTPONED);\n        return [cachedAst, address, this.transformations.length];\n    }\n    *getTransformationsFrom(version, filter) {\n        for (let v = version; v < this.transformations.length; v++) {\n            const transformation = this.transformations[v];\n            if (!filter || filter(transformation)) {\n                yield transformation;\n            }\n        }\n    }\n    destroy() {\n        this.parser = undefined;\n        this.transformations = [];\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\nimport { ColumnIndex } from './ColumnIndex';\nexport function buildColumnSearchStrategy(dependencyGraph, config, statistics) {\n    if (config.useColumnIndex) {\n        return new ColumnIndex(dependencyGraph, config, statistics);\n    }\n    else {\n        return new ColumnBinarySearch(dependencyGraph, config);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { rangeLowerBound } from '../interpreter/binarySearch';\nexport class ColumnBinarySearch {\n    constructor(dependencyGraph, config) {\n        this.dependencyGraph = dependencyGraph;\n        this.config = config;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars \n    add(value, address) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    remove(value, address) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    change(oldValue, newValue, address) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addColumns(columnsSpan) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removeColumns(columnsSpan) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removeSheet(sheetId) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    moveValues(sourceRange, toRight, toBottom, toSheet) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removeValues(range) { }\n    destroy() { }\n    find(key, range, sorted) {\n        if (range.height() < this.config.vlookupThreshold || !sorted) {\n            const values = this.computeListOfValuesInRange(range);\n            const index = values.indexOf(key);\n            return index < 0 ? index : index + range.start.row;\n        }\n        else {\n            return rangeLowerBound(range, key, this.dependencyGraph);\n        }\n    }\n    advancedFind(keyMatcher, range) {\n        const values = this.computeListOfValuesInRange(range);\n        for (let i = 0; i < values.length; i++) {\n            if (keyMatcher(values[i])) {\n                return i + range.start.row;\n            }\n        }\n        return -1;\n    }\n    computeListOfValuesInRange(range) {\n        const values = [];\n        for (const cellFromRange of range.addresses(this.dependencyGraph)) {\n            const value = this.dependencyGraph.getScalarValue(cellFromRange);\n            values.push(value);\n        }\n        return values;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from '../Cell';\n/*\n* If key exists returns first index of key element in range of sorted values\n* Otherwise returns first index of greatest element smaller than key\n* assuming sorted values in range\n* */\nexport function rangeLowerBound(range, key, dependencyGraph) {\n    let start = range.start.row;\n    let end = range.end.row;\n    while (start <= end) {\n        const center = Math.floor((start + end) / 2);\n        const cmp = compare(key, dependencyGraph.getCellValue(simpleCellAddress(range.sheet, range.start.col, center)));\n        if (cmp > 0) {\n            start = center + 1;\n        }\n        else if (cmp < 0) {\n            end = center - 1;\n        }\n        else if (start != center) {\n            end = center;\n        }\n        else {\n            return center;\n        }\n    }\n    return end;\n}\n/*\n* If key exists returns first index of key element in sorted array\n* Otherwise returns first index of greatest element smaller than key\n* assuming sorted array\n* */\nexport function lowerBound(values, key) {\n    let start = 0;\n    let end = values.length - 1;\n    while (start <= end) {\n        const center = Math.floor((start + end) / 2);\n        const cmp = compare(key, values[center]);\n        if (cmp > 0) {\n            start = center + 1;\n        }\n        else if (cmp < 0) {\n            end = center - 1;\n        }\n        else if (start != center) {\n            end = center;\n        }\n        else {\n            return center;\n        }\n    }\n    return end;\n}\n/*\n* numbers < strings < false < true\n* */\nexport function compare(left, right) {\n    if (typeof left === typeof right) {\n        return (left < right ? -1 : (left > right ? 1 : 0));\n    }\n    if (typeof left === 'number' && typeof right === 'string') {\n        return -1;\n    }\n    if (typeof left === 'number' && typeof right === 'boolean') {\n        return -1;\n    }\n    if (typeof left === 'string' && typeof right === 'number') {\n        return 1;\n    }\n    if (typeof left === 'string' && typeof right === 'boolean') {\n        return -1;\n    }\n    return 1;\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, movedSimpleCellAddress } from '../Cell';\nimport { Matrix } from '../Matrix';\nimport { StatType } from '../statistics';\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\nimport { AddRowsTransformer } from '../dependencyTransformers/AddRowsTransformer';\nimport { RemoveRowsTransformer } from '../dependencyTransformers/RemoveRowsTransformer';\nimport { SimpleRangeValue } from '../interpreter/InterpreterValue';\nexport class ColumnIndex {\n    constructor(dependencyGraph, config, stats) {\n        this.dependencyGraph = dependencyGraph;\n        this.config = config;\n        this.stats = stats;\n        this.index = new Map();\n        this.transformingService = this.dependencyGraph.lazilyTransformingAstService;\n        this.binarySearchStrategy = new ColumnBinarySearch(dependencyGraph, config);\n    }\n    add(value, address) {\n        if (value instanceof Matrix) {\n            for (const [matrixValue, cellAddress] of value.generateValues(address)) {\n                this.addSingleCellValue(matrixValue, cellAddress);\n            }\n        }\n        else if (!(value instanceof CellError || value instanceof SimpleRangeValue)) {\n            this.addSingleCellValue(value, address);\n        }\n    }\n    remove(value, address) {\n        if (!value) {\n            return;\n        }\n        if (value instanceof Matrix) {\n            for (const [matrixValue, cellAddress] of value.generateValues(address)) {\n                this.removeSingleValue(matrixValue, cellAddress);\n            }\n        }\n        else {\n            this.removeSingleValue(value, address);\n        }\n    }\n    change(oldValue, newValue, address) {\n        if (oldValue === newValue) {\n            return;\n        }\n        this.remove(oldValue, address);\n        this.add(newValue, address);\n    }\n    moveValues(sourceRange, toRight, toBottom, toSheet) {\n        for (const [value, address] of sourceRange) {\n            const targetAddress = movedSimpleCellAddress(address, toSheet, toRight, toBottom);\n            this.remove(value, address);\n            this.add(value, targetAddress);\n        }\n    }\n    removeValues(range) {\n        for (const [value, address] of range) {\n            this.remove(value, address);\n        }\n    }\n    find(key, range, sorted) {\n        this.ensureRecentData(range.sheet, range.start.col, key);\n        const columnMap = this.getColumnMap(range.sheet, range.start.col);\n        if (!columnMap) {\n            return -1;\n        }\n        const valueIndex = columnMap.get(key);\n        if (!valueIndex) {\n            return this.binarySearchStrategy.find(key, range, sorted);\n        }\n        const index = upperBound(valueIndex.index, range.start.row);\n        const rowNumber = valueIndex.index[index];\n        return rowNumber <= range.end.row ? rowNumber : this.binarySearchStrategy.find(key, range, sorted);\n    }\n    advancedFind(keyMatcher, range) {\n        return this.binarySearchStrategy.advancedFind(keyMatcher, range);\n    }\n    addColumns(columnsSpan) {\n        const sheetIndex = this.index.get(columnsSpan.sheet);\n        if (!sheetIndex) {\n            return;\n        }\n        sheetIndex.splice(columnsSpan.columnStart, 0, ...Array(columnsSpan.numberOfColumns));\n    }\n    removeColumns(columnsSpan) {\n        const sheetIndex = this.index.get(columnsSpan.sheet);\n        if (!sheetIndex) {\n            return;\n        }\n        sheetIndex.splice(columnsSpan.columnStart, columnsSpan.numberOfColumns);\n    }\n    removeSheet(sheetId) {\n        this.index.delete(sheetId);\n    }\n    getColumnMap(sheet, col) {\n        if (!this.index.has(sheet)) {\n            this.index.set(sheet, []);\n        }\n        const sheetMap = this.index.get(sheet); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n        let columnMap = sheetMap[col];\n        if (!columnMap) {\n            columnMap = new Map();\n            sheetMap[col] = columnMap;\n        }\n        return columnMap;\n    }\n    getValueIndex(sheet, col, value) {\n        const columnMap = this.getColumnMap(sheet, col);\n        let index = this.getColumnMap(sheet, col).get(value);\n        if (!index) {\n            index = {\n                version: this.transformingService.version(),\n                index: [],\n            };\n            columnMap.set(value, index);\n        }\n        return index;\n    }\n    ensureRecentData(sheet, col, value) {\n        const valueIndex = this.getValueIndex(sheet, col, value);\n        const actualVersion = this.transformingService.version();\n        if (valueIndex.version === actualVersion) {\n            return;\n        }\n        const relevantTransformations = this.transformingService.getTransformationsFrom(valueIndex.version, (transformation) => {\n            return transformation.sheet === sheet && (transformation instanceof AddRowsTransformer || transformation instanceof RemoveRowsTransformer);\n        });\n        for (const transformation of relevantTransformations) {\n            if (transformation instanceof AddRowsTransformer) {\n                this.addRows(col, transformation.rowsSpan, value);\n            }\n            else if (transformation instanceof RemoveRowsTransformer) {\n                this.removeRows(col, transformation.rowsSpan, value);\n            }\n        }\n        valueIndex.version = actualVersion;\n    }\n    destroy() {\n        this.index.clear();\n    }\n    addSingleCellValue(value, address) {\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\n            this.ensureRecentData(address.sheet, address.col, value);\n            const valueIndex = this.getValueIndex(address.sheet, address.col, value);\n            this.addValue(valueIndex, address.row);\n        });\n    }\n    removeSingleValue(value, address) {\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\n            this.ensureRecentData(address.sheet, address.col, value);\n            const columnMap = this.getColumnMap(address.sheet, address.col);\n            const valueIndex = columnMap.get(value);\n            if (!valueIndex) {\n                return;\n            }\n            const index = upperBound(valueIndex.index, address.row);\n            valueIndex.index.splice(index, 1);\n            if (valueIndex.index.length === 0) {\n                columnMap.delete(value);\n            }\n            if (columnMap.size === 0) {\n                delete this.index.get(address.sheet)[address.col]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            }\n        });\n    }\n    addRows(col, rowsSpan, value) {\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\n        this.shiftRows(valueIndex, rowsSpan.rowStart, rowsSpan.numberOfRows);\n    }\n    removeRows(col, rowsSpan, value) {\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\n        this.removeRowsFromValues(valueIndex, rowsSpan);\n        this.shiftRows(valueIndex, rowsSpan.rowEnd + 1, -rowsSpan.numberOfRows);\n    }\n    addValue(valueIndex, rowNumber) {\n        const rowIndex = lowerBound(valueIndex.index, rowNumber);\n        const value = valueIndex.index[rowIndex];\n        if (value === rowNumber) {\n            /* do not add same row twice */\n            return;\n        }\n        if (rowIndex === valueIndex.index.length - 1) {\n            valueIndex.index.push(rowNumber);\n        }\n        else {\n            valueIndex.index.splice(rowIndex + 1, 0, rowNumber);\n        }\n    }\n    removeRowsFromValues(rows, rowsSpan) {\n        const start = upperBound(rows.index, rowsSpan.rowStart);\n        const end = lowerBound(rows.index, rowsSpan.rowEnd);\n        if (rows.index[start] <= rowsSpan.rowEnd) {\n            rows.index.splice(start, end - start + 1);\n        }\n    }\n    shiftRows(rows, afterRow, numberOfRows) {\n        const index = upperBound(rows.index, afterRow);\n        for (let i = index; i < rows.index.length; ++i) {\n            rows.index[i] += numberOfRows;\n        }\n    }\n}\n/*\n* If key exists returns index of key\n* Otherwise returns index of smallest element greater than key\n* assuming sorted array and no repetitions\n* */\nexport function upperBound(values, key) {\n    let start = 0;\n    let end = values.length - 1;\n    while (start <= end) {\n        const center = Math.floor((start + end) / 2);\n        if (key > values[center]) {\n            start = center + 1;\n        }\n        else if (key < values[center]) {\n            end = center - 1;\n        }\n        else {\n            return center;\n        }\n    }\n    return start;\n}\n/*\n* If key exists returns index of key\n* Otherwise returns index of greatest element smaller than key\n* assuming sorted array and no repetitions\n* */\nexport function lowerBound(values, key) {\n    let start = 0;\n    let end = values.length - 1;\n    while (start <= end) {\n        const center = Math.floor((start + end) / 2);\n        if (key > values[center]) {\n            start = center + 1;\n        }\n        else if (key < values[center]) {\n            end = center - 1;\n        }\n        else {\n            return center;\n        }\n    }\n    return end;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _licenseKeyValidityState;\nimport { defaultParseToDateTime } from './DateTimeDefault';\nimport { instanceOfSimpleDate } from './DateTimeHelper';\nimport { ConfigValueTooSmallError, ConfigValueTooBigError, ExpectedValueOfTypeError, ExpectedOneOfValuesError } from './errors';\nimport { AlwaysDense } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\nimport { defaultStringifyDateTime, defaultStringifyDuration } from './format/format';\nimport { HyperFormula } from './HyperFormula';\nimport { checkLicenseKeyValidity } from './helpers/licenseKeyValidator';\nconst PossibleGPUModeString = ['gpu', 'cpu', 'dev'];\nexport class Config {\n    constructor({ accentSensitive, caseSensitive, caseFirst, chooseAddressMappingPolicy, dateFormats, timeFormats, functionArgSeparator, decimalSeparator, thousandSeparator, language, licenseKey, functionPlugins, gpuMode, ignorePunctuation, leapYear1900, localeLang, smartRounding, matrixDetection, matrixDetectionThreshold, nullYear, parseDateTime, stringifyDateTime, stringifyDuration, precisionEpsilon, precisionRounding, useColumnIndex, vlookupThreshold, nullDate, useStats, undoLimit, useRegularExpressions, useWildcards, matchWholeCell, maxRows, maxColumns } = {}) {\n        /**\n         * Set automatically based on licenseKey checking result.\n         *\n         * @internal\n         */\n        _licenseKeyValidityState.set(this, void 0);\n        this.accentSensitive = this.valueFromParam(accentSensitive, 'boolean', 'accentSensitive');\n        this.caseSensitive = this.valueFromParam(caseSensitive, 'boolean', 'caseSensitive');\n        this.caseFirst = this.valueFromParam(caseFirst, ['upper', 'lower', 'false'], 'caseFirst');\n        this.ignorePunctuation = this.valueFromParam(ignorePunctuation, 'boolean', 'ignorePunctuation');\n        this.chooseAddressMappingPolicy = chooseAddressMappingPolicy !== null && chooseAddressMappingPolicy !== void 0 ? chooseAddressMappingPolicy : Config.defaultConfig.chooseAddressMappingPolicy;\n        this.dateFormats = this.valueFromParamCheck(dateFormats, Array.isArray, 'array', 'dateFormats');\n        this.timeFormats = this.valueFromParamCheck(timeFormats, Array.isArray, 'array', 'timeFormats');\n        this.functionArgSeparator = this.valueFromParam(functionArgSeparator, 'string', 'functionArgSeparator');\n        this.decimalSeparator = this.valueFromParam(decimalSeparator, ['.', ','], 'decimalSeparator');\n        this.language = this.valueFromParam(language, 'string', 'language');\n        this.licenseKey = this.valueFromParam(licenseKey, 'string', 'licenseKey');\n        __classPrivateFieldSet(this, _licenseKeyValidityState, checkLicenseKeyValidity(this.licenseKey));\n        this.thousandSeparator = this.valueFromParam(thousandSeparator, ['', ',', ' ', '.'], 'thousandSeparator');\n        this.localeLang = this.valueFromParam(localeLang, 'string', 'localeLang');\n        this.functionPlugins = functionPlugins !== null && functionPlugins !== void 0 ? functionPlugins : Config.defaultConfig.functionPlugins;\n        this.gpuMode = this.valueFromParam(gpuMode, PossibleGPUModeString, 'gpuMode');\n        this.smartRounding = this.valueFromParam(smartRounding, 'boolean', 'smartRounding');\n        this.matrixDetection = this.valueFromParam(matrixDetection, 'boolean', 'matrixDetection');\n        this.matrixDetectionThreshold = this.valueFromParam(matrixDetectionThreshold, 'number', 'matrixDetectionThreshold');\n        this.validateNumberToBeAtLeast(this.matrixDetectionThreshold, 'matrixDetectionThreshold', 1);\n        this.nullYear = this.valueFromParam(nullYear, 'number', 'nullYear');\n        this.validateNumberToBeAtLeast(this.nullYear, 'nullYear', 0);\n        this.validateNumberToBeAtMost(this.nullYear, 'nullYear', 100);\n        this.precisionRounding = this.valueFromParam(precisionRounding, 'number', 'precisionRounding');\n        this.validateNumberToBeAtLeast(this.precisionRounding, 'precisionRounding', 0);\n        this.precisionEpsilon = this.valueFromParam(precisionEpsilon, 'number', 'precisionEpsilon');\n        this.validateNumberToBeAtLeast(this.precisionEpsilon, 'precisionEpsilon', 0);\n        this.useColumnIndex = this.valueFromParam(useColumnIndex, 'boolean', 'useColumnIndex');\n        this.useStats = this.valueFromParam(useStats, 'boolean', 'useStats');\n        this.vlookupThreshold = this.valueFromParam(vlookupThreshold, 'number', 'vlookupThreshold');\n        this.validateNumberToBeAtLeast(this.vlookupThreshold, 'vlookupThreshold', 1);\n        this.parseDateTime = this.valueFromParam(parseDateTime, 'function', 'parseDateTime');\n        this.stringifyDateTime = this.valueFromParam(stringifyDateTime, 'function', 'stringifyDateTime');\n        this.stringifyDuration = this.valueFromParam(stringifyDuration, 'function', 'stringifyDuration');\n        this.translationPackage = HyperFormula.getLanguage(this.language);\n        this.errorMapping = this.translationPackage.buildErrorMapping();\n        this.nullDate = this.valueFromParamCheck(nullDate, instanceOfSimpleDate, 'IDate', 'nullDate');\n        this.leapYear1900 = this.valueFromParam(leapYear1900, 'boolean', 'leapYear1900');\n        this.undoLimit = this.valueFromParam(undoLimit, 'number', 'undoLimit');\n        this.useRegularExpressions = this.valueFromParam(useRegularExpressions, 'boolean', 'useRegularExpressions');\n        this.useWildcards = this.valueFromParam(useWildcards, 'boolean', 'useWildcards');\n        this.matchWholeCell = this.valueFromParam(matchWholeCell, 'boolean', 'matchWholeCell');\n        this.validateNumberToBeAtLeast(this.undoLimit, 'undoLimit', 0);\n        this.maxRows = this.valueFromParam(maxRows, 'number', 'maxRows');\n        this.validateNumberToBeAtLeast(this.maxRows, 'maxRows', 1);\n        this.maxColumns = this.valueFromParam(maxColumns, 'number', 'maxColumns');\n        this.validateNumberToBeAtLeast(this.maxColumns, 'maxColumns', 1);\n        this.checkIfParametersNotInConflict({ value: this.decimalSeparator, name: 'decimalSeparator' }, { value: this.functionArgSeparator, name: 'functionArgSeparator' }, { value: this.thousandSeparator, name: 'thousandSeparator' });\n    }\n    /**\n     * Proxied property to its private counterpart. This makes the property\n     * as accessible as the other Config options but without ability to change the value.\n     *\n     * @internal\n     */\n    get licenseKeyValidityState() {\n        return __classPrivateFieldGet(this, _licenseKeyValidityState);\n    }\n    getConfig() {\n        return this;\n    }\n    mergeConfig(init) {\n        const mergedConfig = Object.assign({}, this.getConfig(), init);\n        return new Config(mergedConfig);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    valueFromParam(inputValue, expectedType, paramName) {\n        if (typeof inputValue === 'undefined') {\n            return Config.defaultConfig[paramName];\n        }\n        else if (typeof expectedType === 'string') {\n            if (typeof inputValue === expectedType) {\n                return inputValue;\n            }\n            else {\n                throw new ExpectedValueOfTypeError(expectedType, paramName);\n            }\n        }\n        else {\n            if (expectedType.includes(inputValue)) {\n                return inputValue;\n            }\n            else {\n                throw new ExpectedOneOfValuesError(expectedType.map((val) => '\\'' + val + '\\'').join(' '), paramName);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    valueFromParamCheck(inputValue, typeCheck, expectedType, paramName) {\n        if (typeCheck(inputValue)) {\n            return inputValue;\n        }\n        else if (typeof inputValue === 'undefined') {\n            return Config.defaultConfig[paramName];\n        }\n        else {\n            throw new ExpectedValueOfTypeError(expectedType, paramName);\n        }\n    }\n    checkIfParametersNotInConflict(...params) {\n        const valuesMap = new Map();\n        params.forEach((param) => {\n            const names = valuesMap.get(param.value) || [];\n            names.push(param.name);\n            valuesMap.set(param.value, names);\n        });\n        const duplicates = [];\n        for (const entry of valuesMap.values()) {\n            if (entry.length > 1) {\n                duplicates.push(entry);\n            }\n        }\n        if (duplicates.length > 0) {\n            const paramNames = duplicates.map(entry => `[${entry.sort()}]`).join('; ');\n            throw new Error(`Config initialization failed. Parameters in conflict: ${paramNames}`);\n        }\n    }\n    validateNumberToBeAtLeast(value, paramName, minimum) {\n        if (value < minimum) {\n            throw new ConfigValueTooSmallError(paramName, minimum);\n        }\n    }\n    validateNumberToBeAtMost(value, paramName, maximum) {\n        if (value > maximum) {\n            throw new ConfigValueTooBigError(paramName, maximum);\n        }\n    }\n}\n_licenseKeyValidityState = new WeakMap();\nConfig.defaultConfig = {\n    accentSensitive: false,\n    caseSensitive: false,\n    caseFirst: 'lower',\n    ignorePunctuation: false,\n    chooseAddressMappingPolicy: new AlwaysDense(),\n    dateFormats: ['DD/MM/YYYY', 'DD/MM/YY'],\n    timeFormats: ['hh:mm', 'hh:mm:ss.sss'],\n    functionArgSeparator: ',',\n    decimalSeparator: '.',\n    thousandSeparator: '',\n    language: 'enGB',\n    licenseKey: '',\n    functionPlugins: [],\n    gpuMode: 'gpu',\n    leapYear1900: false,\n    smartRounding: true,\n    localeLang: 'en',\n    matrixDetection: true,\n    matrixDetectionThreshold: 100,\n    nullYear: 30,\n    parseDateTime: defaultParseToDateTime,\n    stringifyDateTime: defaultStringifyDateTime,\n    stringifyDuration: defaultStringifyDuration,\n    precisionEpsilon: 1e-13,\n    precisionRounding: 14,\n    useColumnIndex: false,\n    useStats: false,\n    vlookupThreshold: 20,\n    nullDate: { year: 1899, month: 12, day: 30 },\n    undoLimit: 20,\n    useRegularExpressions: false,\n    useWildcards: true,\n    matchWholeCell: true,\n    maxRows: 40000,\n    maxColumns: 18278\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar global = require('../internals/global');\nvar redefineAll = require('../internals/redefine-all');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar collection = require('../internals/collection');\nvar collectionWeak = require('../internals/collection-weak');\nvar isObject = require('../internals/is-object');\nvar enforceIternalState = require('../internals/internal-state').enforce;\nvar NATIVE_WEAK_MAP = require('../internals/native-weak-map');\n\nvar IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\nvar isExtensible = Object.isExtensible;\nvar InternalWeakMap;\n\nvar wrapper = function (init) {\n  return function WeakMap() {\n    return init(this, arguments.length ? arguments[0] : undefined);\n  };\n};\n\n// `WeakMap` constructor\n// https://tc39.github.io/ecma262/#sec-weakmap-constructor\nvar $WeakMap = module.exports = collection('WeakMap', wrapper, collectionWeak);\n\n// IE11 WeakMap frozen keys fix\n// We can't use feature detection because it crash some old IE builds\n// https://github.com/zloirock/core-js/issues/485\nif (NATIVE_WEAK_MAP && IS_IE11) {\n  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);\n  InternalMetadataModule.REQUIRED = true;\n  var WeakMapPrototype = $WeakMap.prototype;\n  var nativeDelete = WeakMapPrototype['delete'];\n  var nativeHas = WeakMapPrototype.has;\n  var nativeGet = WeakMapPrototype.get;\n  var nativeSet = WeakMapPrototype.set;\n  redefineAll(WeakMapPrototype, {\n    'delete': function (key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeDelete.call(this, key) || state.frozen['delete'](key);\n      } return nativeDelete.call(this, key);\n    },\n    has: function has(key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeHas.call(this, key) || state.frozen.has(key);\n      } return nativeHas.call(this, key);\n    },\n    get: function get(key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeHas.call(this, key) ? nativeGet.call(this, key) : state.frozen.get(key);\n      } return nativeGet.call(this, key);\n    },\n    set: function set(key, value) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        nativeHas.call(this, key) ? nativeSet.call(this, key, value) : state.frozen.set(key, value);\n      } else nativeSet.call(this, key, value);\n      return this;\n    }\n  });\n}\n","'use strict';\nvar redefineAll = require('../internals/redefine-all');\nvar getWeakData = require('../internals/internal-metadata').getWeakData;\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar ArrayIterationModule = require('../internals/array-iteration');\nvar $has = require('../internals/has');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\nvar find = ArrayIterationModule.find;\nvar findIndex = ArrayIterationModule.findIndex;\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (store) {\n  return store.frozen || (store.frozen = new UncaughtFrozenStore());\n};\n\nvar UncaughtFrozenStore = function () {\n  this.entries = [];\n};\n\nvar findUncaughtFrozen = function (store, key) {\n  return find(store.entries, function (it) {\n    return it[0] === key;\n  });\n};\n\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.entries.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = findIndex(this.entries, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.entries.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        id: id++,\n        frozen: undefined\n      });\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var data = getWeakData(anObject(key), true);\n      if (data === true) uncaughtFrozenStore(state).set(key, value);\n      else data[state.id] = value;\n      return that;\n    };\n\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        var state = getInternalState(this);\n        if (!isObject(key)) return false;\n        var data = getWeakData(key);\n        if (data === true) return uncaughtFrozenStore(state)['delete'](key);\n        return data && $has(data, state.id) && delete data[state.id];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        var state = getInternalState(this);\n        if (!isObject(key)) return false;\n        var data = getWeakData(key);\n        if (data === true) return uncaughtFrozenStore(state).has(key);\n        return data && $has(data, state.id);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.3.3.3 WeakMap.prototype.get(key)\n      get: function get(key) {\n        var state = getInternalState(this);\n        if (isObject(key)) {\n          var data = getWeakData(key);\n          if (data === true) return uncaughtFrozenStore(state).get(key);\n          return data ? data[state.id] : undefined;\n        }\n      },\n      // 23.3.3.5 WeakMap.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key, value);\n      }\n    } : {\n      // 23.4.3.1 WeakSet.prototype.add(value)\n      add: function add(value) {\n        return define(this, value, true);\n      }\n    });\n\n    return C;\n  }\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport function defaultParseToDateTime(dateTimeString, dateFormat, timeFormat) {\n    dateTimeString = dateTimeString.replace(/\\s\\s+/g, ' ').trim().toLowerCase();\n    let ampmtoken = dateTimeString.substring(dateTimeString.length - 2);\n    if (ampmtoken === 'am' || ampmtoken === 'pm') {\n        dateTimeString = dateTimeString.substring(0, dateTimeString.length - 2).trim();\n    }\n    else {\n        ampmtoken = dateTimeString.substring(dateTimeString.length - 1);\n        if (ampmtoken === 'a' || ampmtoken === 'p') {\n            dateTimeString = dateTimeString.substring(0, dateTimeString.length - 1).trim();\n        }\n        else {\n            ampmtoken = undefined;\n        }\n    }\n    const dateItems = dateTimeString.split(/[ /.-]/g);\n    if (dateItems.length >= 2 && dateItems[dateItems.length - 2].includes(':')) {\n        dateItems[dateItems.length - 2] = dateItems[dateItems.length - 2] + '.' + dateItems[dateItems.length - 1];\n        dateItems.pop();\n    }\n    const timeItems = dateItems[dateItems.length - 1].split(':');\n    if (ampmtoken !== undefined) {\n        timeItems.push(ampmtoken);\n    }\n    if (dateItems.length === 1) {\n        return defaultParseToTime(timeItems, timeFormat);\n    }\n    if (timeItems.length === 1) {\n        return defaultParseToDate(dateItems, dateFormat);\n    }\n    const parsedDate = defaultParseToDate(dateItems.slice(0, dateItems.length - 1), dateFormat);\n    const parsedTime = defaultParseToTime(timeItems, timeFormat);\n    if (parsedDate === undefined) {\n        return undefined;\n    }\n    else if (parsedTime === undefined) {\n        return undefined;\n    }\n    else {\n        return Object.assign(Object.assign({}, parsedDate), parsedTime);\n    }\n}\nexport const secondsExtendedRegexp = /^ss\\.(s+|0+)$/;\nexport function defaultParseToTime(timeItems, timeFormat) {\n    timeFormat = timeFormat.toLowerCase();\n    if (timeFormat.endsWith('am/pm')) {\n        timeFormat = timeFormat.substring(0, timeFormat.length - 5).trim();\n    }\n    else if (timeFormat.endsWith('a/p')) {\n        timeFormat = timeFormat.substring(0, timeFormat.length - 3).trim();\n    }\n    const formatItems = timeFormat.split(':');\n    let ampm = undefined;\n    if (timeItems[timeItems.length - 1] === 'am' || timeItems[timeItems.length - 1] === 'a') {\n        ampm = false;\n        timeItems.pop();\n    }\n    else if (timeItems[timeItems.length - 1] === 'pm' || timeItems[timeItems.length - 1] === 'p') {\n        ampm = true;\n        timeItems.pop();\n    }\n    let fractionOfSecondPrecision = 0;\n    if (formatItems.length >= 1 && secondsExtendedRegexp.test(formatItems[formatItems.length - 1])) {\n        fractionOfSecondPrecision = formatItems[formatItems.length - 1].length - 3;\n        formatItems[formatItems.length - 1] = 'ss';\n    }\n    if (timeItems.length !== formatItems.length) {\n        return undefined;\n    }\n    const hourIndex = formatItems.indexOf('hh');\n    const minuteIndex = formatItems.indexOf('mm');\n    const secondIndex = formatItems.indexOf('ss');\n    const hourString = hourIndex !== -1 ? timeItems[hourIndex] : '0';\n    if (!/^\\d+$/.test(hourString)) {\n        return undefined;\n    }\n    let hours = Number(hourString);\n    if (ampm !== undefined) {\n        if (hours < 0 || hours > 12) {\n            return undefined;\n        }\n        hours = hours % 12;\n        if (ampm) {\n            hours = hours + 12;\n        }\n    }\n    const minuteString = minuteIndex !== -1 ? timeItems[minuteIndex] : '0';\n    if (!/^\\d+$/.test(minuteString)) {\n        return undefined;\n    }\n    const minutes = Number(minuteString);\n    const secondString = secondIndex !== -1 ? timeItems[secondIndex] : '0';\n    if (!/^\\d+(\\.\\d+)?$/.test(secondString)) {\n        return undefined;\n    }\n    let seconds = Number(secondString);\n    seconds = Math.round(seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n    return { hours, minutes, seconds };\n}\nexport function defaultParseToDate(dateItems, dateFormat) {\n    const formatItems = dateFormat.toLowerCase().split(/[ /.-]/g);\n    if (dateItems.length !== formatItems.length) {\n        return undefined;\n    }\n    const monthIndex = formatItems.indexOf('mm');\n    const dayIndex = formatItems.indexOf('dd');\n    const yearIndexLong = formatItems.indexOf('yyyy');\n    const yearIndexShort = formatItems.indexOf('yy');\n    if (!(monthIndex in dateItems) || !(dayIndex in dateItems) ||\n        (!(yearIndexLong in dateItems) && !(yearIndexShort in dateItems))) {\n        return undefined;\n    }\n    if (yearIndexLong in dateItems && yearIndexShort in dateItems) {\n        return undefined;\n    }\n    let year;\n    if (yearIndexLong in dateItems) {\n        const yearString = dateItems[yearIndexLong];\n        if (/^\\d+$/.test(yearString)) {\n            year = Number(yearString);\n            if (year < 1000 || year > 9999) {\n                return undefined;\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    else {\n        const yearString = dateItems[yearIndexShort];\n        if (/^\\d+$/.test(yearString)) {\n            year = Number(yearString);\n            if (year < 0 || year > 99) {\n                return undefined;\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    const monthString = dateItems[monthIndex];\n    if (!/^\\d+$/.test(monthString)) {\n        return undefined;\n    }\n    const month = Number(monthString);\n    const dayString = dateItems[dayIndex];\n    if (!/^\\d+$/.test(dayString)) {\n        return undefined;\n    }\n    const day = Number(dayString);\n    return { year, month, day };\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nconst numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst prefSumDays = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 303, 334];\nexport function instanceOfSimpleDate(obj) {\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\n        return 'year' in obj && typeof obj.year === 'number' && 'month' in obj && typeof obj.month === 'number' && 'day' in obj && typeof obj.day === 'number';\n    }\n    else {\n        return false;\n    }\n}\nexport function instanceOfSimpleTime(obj) {\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\n        return 'hours' in obj && typeof obj.hours === 'number' && 'minutes' in obj && typeof obj.minutes === 'number' && 'seconds' in obj && typeof obj.seconds === 'number';\n    }\n    else {\n        return false;\n    }\n}\nexport const maxDate = { year: 9999, month: 12, day: 31 };\nexport class DateTimeHelper {\n    constructor(config) {\n        this.config = config;\n        this.minDateAboluteValue = this.dateToNumberFromZero(config.nullDate);\n        this.maxDateValue = this.dateToNumber(maxDate);\n        // code below fixes epochYearStart while being leapYear1900 sensitive\n        // if nullDate is earlier than fateful 28 Feb 1900 and 1900 is not supposed to be leap year, then we should\n        // add two days (this is the config default)\n        // otherwise only one day\n        if (!config.leapYear1900 && 0 <= this.dateToNumber({ year: 1900, month: 2, day: 28 })) {\n            this.epochYearZero = this.numberToSimpleDate(2).year;\n        }\n        else {\n            this.epochYearZero = this.numberToSimpleDate(1).year;\n        }\n        this.parseDateTime = config.parseDateTime;\n    }\n    getWithinBounds(dayNumber) {\n        return (dayNumber <= this.maxDateValue) && (dayNumber >= 0);\n    }\n    dateStringToDateNumber(dateTimeString) {\n        const dateTime = this.parseDateTimeFromFormats(dateTimeString, this.config.dateFormats, this.config.timeFormats);\n        if (dateTime === undefined) {\n            return undefined;\n        }\n        return (instanceOfSimpleTime(dateTime) ? this.timeToNumber(dateTime) : 0) +\n            (instanceOfSimpleDate(dateTime) ? this.dateToNumber(dateTime) : 0);\n    }\n    parseSingleFormat(dateString, dateFormat, timeFormat) {\n        const dateTime = this.parseDateTime(dateString, dateFormat, timeFormat);\n        if (instanceOfSimpleDate(dateTime)) {\n            if (dateTime.year >= 0 && dateTime.year < 100) {\n                if (dateTime.year < this.getNullYear()) {\n                    dateTime.year += 2000;\n                }\n                else {\n                    dateTime.year += 1900;\n                }\n            }\n            if (!this.isValidDate(dateTime)) {\n                return undefined;\n            }\n        }\n        return dateTime;\n    }\n    parseDateTimeFromFormats(dateString, dateFormats, timeFormats) {\n        for (const dateFormat of dateFormats) {\n            for (const timeFormat of timeFormats) {\n                const dateTime = this.parseSingleFormat(dateString, dateFormat, timeFormat);\n                if (dateTime !== undefined) {\n                    return dateTime;\n                }\n            }\n        }\n        return undefined;\n    }\n    getNullYear() {\n        return this.config.nullYear;\n    }\n    getEpochYearZero() {\n        return this.epochYearZero;\n    }\n    isValidDate(date) {\n        if (isNaN(date.year) || isNaN(date.month) || isNaN(date.day)) {\n            return false;\n        }\n        else if (date.day !== Math.round(date.day) || date.month !== Math.round(date.month) || date.year !== Math.round(date.year)) {\n            return false;\n        }\n        else if (date.year < 1582) { // Gregorian calendar start\n            return false;\n        }\n        else if (date.month < 1 || date.month > 12) {\n            return false;\n        }\n        else if (date.day < 1) {\n            return false;\n        }\n        else if (this.isLeapYear(date.year) && date.month === 2) {\n            return date.day <= 29;\n        }\n        else {\n            return date.day <= numDays[date.month - 1];\n        }\n    }\n    dateToNumber(date) {\n        return this.dateToNumberFromZero(date) - this.minDateAboluteValue;\n    }\n    timeToNumber(time) {\n        return ((time.seconds / 60 + time.minutes) / 60 + time.hours) / 24;\n    }\n    numberToSimpleDate(arg) {\n        const dateNumber = arg + this.minDateAboluteValue;\n        let year = Math.floor(dateNumber / 365.2425);\n        if (this.dateToNumberFromZero({ year: year + 1, month: 1, day: 1 }) <= dateNumber) {\n            year++;\n        }\n        else if (this.dateToNumberFromZero({ year: year - 1, month: 1, day: 1 }) > dateNumber) {\n            year--;\n        }\n        const dayOfYear = dateNumber - this.dateToNumberFromZero({ year, month: 1, day: 1 });\n        const month = dayToMonth((this.isLeapYear(year) && dayOfYear >= 59) ? dayOfYear - 1 : dayOfYear);\n        const day = dayOfYear - prefSumDays[month];\n        return { year, month: month + 1, day: day + 1 };\n    }\n    numberToSimpleTime(arg) {\n        arg = Math.round(arg * 24 * 60 * 60 * 100000) / (24 * 60 * 60 * 100000);\n        arg *= 24;\n        const hours = Math.floor(arg);\n        arg -= hours;\n        arg *= 60;\n        const minutes = Math.floor(arg);\n        arg -= minutes;\n        arg *= 60;\n        const seconds = Math.round(arg * 100000) / 100000;\n        return { hours, minutes, seconds };\n    }\n    numberToSimpleDateTime(arg) {\n        return Object.assign(Object.assign({}, this.numberToSimpleDate(Math.floor(arg))), this.numberToSimpleTime(arg % 1));\n    }\n    leapYearsCount(year) {\n        return Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400) + (this.config.leapYear1900 && year >= 1900 ? 1 : 0);\n    }\n    dateToNumberFromZero(date) {\n        return 365 * date.year + prefSumDays[date.month - 1] + date.day - 1 + (date.month <= 2 ? this.leapYearsCount(date.year - 1) : this.leapYearsCount(date.year));\n    }\n    isLeapYear(year) {\n        if (year % 4) {\n            return false;\n        }\n        else if (year % 100) {\n            return true;\n        }\n        else if (year % 400) {\n            return year === 1900 && this.config.leapYear1900;\n        }\n        else {\n            return true;\n        }\n    }\n}\nfunction dayToMonth(dayOfYear) {\n    let month = 0;\n    if (prefSumDays[month + 6] <= dayOfYear) {\n        month += 6;\n    }\n    if (prefSumDays[month + 3] <= dayOfYear) {\n        month += 3;\n    }\n    if (prefSumDays[month + 2] <= dayOfYear) {\n        month += 2;\n    }\n    else if (prefSumDays[month + 1] <= dayOfYear) {\n        month += 1;\n    }\n    return month;\n}\nexport function endOfMonth(date) {\n    return { year: date.year, month: date.month, day: numDays[date.month - 1] };\n}\nexport function offsetMonth(date, offset) {\n    const totalM = 12 * date.year + date.month - 1 + offset;\n    return { year: Math.floor(totalM / 12), month: totalM % 12 + 1, day: date.day };\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { DenseStrategy } from './DenseStrategy';\nimport { SparseStrategy } from './SparseStrategy';\nexport class DenseSparseChooseBasedOnThreshold {\n    constructor(threshold) {\n        this.threshold = threshold;\n    }\n    call(fill) {\n        if (fill > this.threshold) {\n            return DenseStrategy;\n        }\n        else {\n            return SparseStrategy;\n        }\n    }\n}\nexport class AlwaysSparse {\n    call() {\n        return SparseStrategy;\n    }\n}\nexport class AlwaysDense {\n    call() {\n        return DenseStrategy;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { secondsExtendedRegexp } from '../DateTimeDefault';\nimport { parseForDateTimeFormat, parseForNumberFormat, TokenType } from './parser';\nexport function format(value, formatArg, config, dateHelper) {\n    const tryDateTime = config.stringifyDateTime(dateHelper.numberToSimpleDateTime(value), formatArg); // default points to defaultStringifyDateTime()\n    if (tryDateTime !== undefined) {\n        return tryDateTime;\n    }\n    const tryDuration = config.stringifyDuration(dateHelper.numberToSimpleTime(value), formatArg);\n    if (tryDuration !== undefined) {\n        return tryDuration;\n    }\n    const expression = parseForNumberFormat(formatArg);\n    if (expression !== undefined) {\n        return numberFormat(expression.tokens, value);\n    }\n    return formatArg;\n}\nexport function padLeft(number, size) {\n    let result = number + '';\n    while (result.length < size) {\n        result = '0' + result;\n    }\n    return result;\n}\nexport function padRight(number, size) {\n    let result = number + '';\n    while (result.length < size) {\n        result = result + '0';\n    }\n    return result;\n}\nfunction countChars(text, char) {\n    return text.split(char).length - 1;\n}\nfunction numberFormat(tokens, value) {\n    let result = '';\n    for (let i = 0; i < tokens.length; ++i) {\n        const token = tokens[i];\n        if (token.type === TokenType.FREE_TEXT) {\n            result += token.value;\n            continue;\n        }\n        const tokenParts = token.value.split('.');\n        const integerFormat = tokenParts[0];\n        const decimalFormat = tokenParts[1] || '';\n        const separator = tokenParts[1] ? '.' : '';\n        /* get fixed-point number without trailing zeros */\n        const valueParts = Number(value.toFixed(decimalFormat.length)).toString().split('.');\n        let integerPart = valueParts[0] || '';\n        let decimalPart = valueParts[1] || '';\n        if (integerFormat.length > integerPart.length) {\n            const padSize = countChars(integerFormat.substr(0, integerFormat.length - integerPart.length), '0');\n            integerPart = padLeft(integerPart, padSize + integerPart.length);\n        }\n        const padSize = countChars(decimalFormat.substr(decimalPart.length, decimalFormat.length - decimalPart.length), '0');\n        decimalPart = padRight(decimalPart, padSize + decimalPart.length);\n        result += integerPart + separator + decimalPart;\n    }\n    return result;\n}\nexport function defaultStringifyDuration(time, formatArg) {\n    const expression = parseForDateTimeFormat(formatArg);\n    if (expression === undefined) {\n        return undefined;\n    }\n    const tokens = expression.tokens;\n    let result = '';\n    for (const token of tokens) {\n        if (token.type === TokenType.FREE_TEXT) {\n            result += token.value;\n            continue;\n        }\n        if (secondsExtendedRegexp.test(token.value)) {\n            const fractionOfSecondPrecision = token.value.length - 3;\n            result += (time.seconds < 10 ? '0' : '') + Math.round(time.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n            continue;\n        }\n        switch (token.value.toLowerCase()) {\n            case 'h':\n            case 'hh': {\n                result += padLeft(time.hours, token.value.length);\n                time.hours = 0;\n                break;\n            }\n            case '[hh]': {\n                result += padLeft(time.hours, token.value.length - 2);\n                time.hours = 0;\n                break;\n            }\n            case 'm':\n            case 'mm': {\n                result += padLeft(time.minutes, token.value.length);\n                time.minutes = 0;\n                break;\n            }\n            case '[mm]': {\n                result += padLeft(time.minutes + 60 * time.hours, token.value.length - 2);\n                time.minutes = 0;\n                time.hours = 0;\n                break;\n            }\n            /* seconds */\n            case 's':\n            case 'ss': {\n                result += padLeft(time.seconds, token.value.length);\n                break;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n    return result;\n}\nexport function defaultStringifyDateTime(dateTime, formatArg) {\n    const expression = parseForDateTimeFormat(formatArg);\n    if (expression === undefined) {\n        return undefined;\n    }\n    const tokens = expression.tokens;\n    let result = '';\n    let minutes = false;\n    const ampm = tokens.some((token) => token.type === TokenType.FORMAT &&\n        (token.value === 'a/p' || token.value === 'A/P' || token.value === 'am/pm' || token.value === 'AM/PM'));\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n        if (token.type === TokenType.FREE_TEXT) {\n            result += token.value;\n            continue;\n        }\n        if (secondsExtendedRegexp.test(token.value)) {\n            const fractionOfSecondPrecision = token.value.length - 3;\n            result += (dateTime.seconds < 10 ? '0' : '') + Math.round(dateTime.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n            continue;\n        }\n        switch (token.value.toLowerCase()) {\n            /* hours*/\n            case 'h':\n            case 'hh': {\n                minutes = true;\n                result += padLeft(ampm ? (dateTime.hours + 11) % 12 + 1 : dateTime.hours, token.value.length);\n                break;\n            }\n            /* days */\n            case 'd':\n            case 'dd': {\n                result += padLeft(dateTime.day, token.value.length);\n                break;\n            }\n            /* seconds */\n            case 's':\n            case 'ss': {\n                result += padLeft(Math.round(dateTime.seconds), token.value.length);\n                break;\n            }\n            /* minutes / months */\n            case 'm':\n            case 'mm': {\n                if (i + 1 < tokens.length && tokens[i + 1].value.startsWith(':')) {\n                    minutes = true;\n                }\n                if (minutes) {\n                    result += padLeft(dateTime.minutes, token.value.length);\n                }\n                else {\n                    result += padLeft(dateTime.month, token.value.length);\n                }\n                minutes = true;\n                break;\n            }\n            /* years */\n            case 'yy': {\n                result += padLeft(dateTime.year % 100, token.value.length);\n                break;\n            }\n            case 'yyyy': {\n                result += dateTime.year;\n                break;\n            }\n            /* AM / PM */\n            case 'am/pm':\n            case 'a/p': {\n                const [am, pm] = token.value.split('/');\n                result += dateTime.hours < 12 ? am : pm;\n                break;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n    return result;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nconst dateFormatRegex = /(\\\\.|dd|DD|d|D|mm|MM|m|M|YYYY|YY|yyyy|yy|HH|hh|H|h|ss(\\.(0+|s+))?|s|AM\\/PM|am\\/pm|A\\/P|a\\/p|\\[mm]|\\[MM]|\\[hh]|\\[HH])/g;\nconst numberFormatRegex = /(\\\\.|[#0]+(\\.[#0]*)?)/g;\nexport var TokenType;\n(function (TokenType) {\n    TokenType[\"FORMAT\"] = \"FORMAT\";\n    TokenType[\"FREE_TEXT\"] = \"FREE_TEXT\";\n})(TokenType || (TokenType = {}));\nexport function formatToken(type, value) {\n    return {\n        type,\n        value,\n    };\n}\nexport var FormatExpressionType;\n(function (FormatExpressionType) {\n    FormatExpressionType[\"DATE\"] = \"DATE\";\n    FormatExpressionType[\"NUMBER\"] = \"NUMBER\";\n    FormatExpressionType[\"STRING\"] = \"STRING\";\n})(FormatExpressionType || (FormatExpressionType = {}));\nfunction matchDateFormat(str) {\n    dateFormatRegex.lastIndex = 0;\n    const tokens = [];\n    let m;\n    do {\n        m = dateFormatRegex.exec(str);\n        if (m !== null) {\n            tokens.push(m);\n        }\n    } while (m);\n    return tokens;\n}\nfunction matchNumberFormat(str) {\n    numberFormatRegex.lastIndex = 0;\n    const numberFormatToken = numberFormatRegex.exec(str);\n    if (numberFormatToken !== null) {\n        return [numberFormatToken];\n    }\n    else {\n        return [];\n    }\n}\nfunction createTokens(regexTokens, str) {\n    const tokens = [];\n    let start = 0;\n    for (let i = 0; i < regexTokens.length; ++i) {\n        const token = regexTokens[i];\n        if (token.index !== start) {\n            const beforeToken = str.substr(start, token.index - start);\n            tokens.push(formatToken(TokenType.FREE_TEXT, beforeToken));\n        }\n        if (token[0].startsWith('\\\\')) {\n            tokens.push(formatToken(TokenType.FREE_TEXT, token[0]));\n        }\n        else {\n            tokens.push(formatToken(TokenType.FORMAT, token[0]));\n        }\n        start = token.index + token[0].length;\n    }\n    const lastToken = regexTokens[regexTokens.length - 1];\n    if (lastToken.index + lastToken[0].length < str.length) {\n        const afterLastToken = str.substr(lastToken.index + lastToken[0].length, str.length);\n        tokens.push(formatToken(TokenType.FREE_TEXT, afterLastToken));\n    }\n    return tokens;\n}\nexport function parseForDateTimeFormat(str) {\n    const dateFormatTokens = matchDateFormat(str);\n    if (dateFormatTokens.every((elem) => isEscapeToken(elem))) {\n        return undefined;\n    }\n    else {\n        return {\n            type: FormatExpressionType.DATE,\n            tokens: createTokens(dateFormatTokens, str),\n        };\n    }\n}\nexport function parseForNumberFormat(str) {\n    const numberFormatTokens = matchNumberFormat(str);\n    if (numberFormatTokens.every((elem) => isEscapeToken(elem))) {\n        return undefined;\n    }\n    else {\n        return {\n            type: FormatExpressionType.NUMBER,\n            tokens: createTokens(numberFormatTokens, str),\n        };\n    }\n}\nexport function parse(str) {\n    var _a, _b;\n    return (_b = (_a = parseForDateTimeFormat(str)) !== null && _a !== void 0 ? _a : parseForNumberFormat(str)) !== null && _b !== void 0 ? _b : {\n        type: FormatExpressionType.STRING,\n        tokens: [{\n                type: TokenType.FREE_TEXT,\n                value: str,\n            }],\n    };\n}\nexport function isEscapeToken(token) {\n    return token[0].startsWith('\\\\');\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $every = require('../internals/array-iteration').every;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('every');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('every');\n\n// `Array.prototype.every` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.every\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { checkKeySchema, extractTime } from './licenseKeyHelper';\n/**\n * List of all not valid messages which may occur.\n */\nconst consoleMessages = {\n    invalid: () => 'The license key for HyperFormula is invalid.',\n    expired: ({ keyValidityDate }) => 'The license key for HyperFormula expired' +\n        ` on ${keyValidityDate}, and is not valid for the installed version.`,\n    missing: () => 'The license key for HyperFormula is missing.',\n};\nlet _notified = false;\n/**\n * Checks if the provided license key is grammatically valid or not expired.\n *\n * @param {string} licenseKey The license key to check.\n * @returns {LicenseKeyValidityState} Returns the checking state.\n */\nexport function checkLicenseKeyValidity(licenseKey) {\n    const messageDescriptor = {\n        template: \"missing\" /* MISSING */,\n        vars: {},\n    };\n    if (licenseKey === 'non-commercial-and-evaluation' || licenseKey === 'agpl-v3' || licenseKey === 'internal-use-in-handsontable') {\n        messageDescriptor.template = \"valid\" /* VALID */;\n    }\n    else if (typeof licenseKey === 'string' && checkKeySchema(licenseKey)) {\n        const [day, month, year] = (process.env.HT_RELEASE_DATE || '').split('/');\n        const releaseDays = Math.floor(new Date(`${month}/${day}/${year}`).getTime() / 8.64e7);\n        const keyValidityDays = extractTime(licenseKey);\n        messageDescriptor.vars.keyValidityDate = formatDate(new Date((keyValidityDays + 1) * 8.64e7));\n        if (releaseDays > keyValidityDays) {\n            messageDescriptor.template = \"expired\" /* EXPIRED */;\n        }\n        else {\n            messageDescriptor.template = \"valid\" /* VALID */;\n        }\n    }\n    else if (licenseKey !== '') {\n        messageDescriptor.template = \"invalid\" /* INVALID */;\n    }\n    if (!_notified && messageDescriptor.template !== \"valid\" /* VALID */) {\n        console.warn(consoleMessages[messageDescriptor.template](messageDescriptor.vars));\n        _notified = true;\n    }\n    return messageDescriptor.template;\n}\n/**\n * Formats a Date instance to hard-coded format MMMM DD, YYYY.\n *\n * @param {Date} date The date to format.\n * @returns {string}\n */\nfunction formatDate(date) {\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    const month = monthNames[date.getMonth()];\n    const day = date.getDate();\n    const year = date.getFullYear();\n    return `${month} ${day}, ${year}`;\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\n// @ts-nocheck\n/* eslint-disable */\nconst _rl = '\\x6C\\x65\\x6E\\x67\\x74\\x68';\nconst _hd = (v) => parseInt(v, 16);\nconst _pi = (v) => parseInt(v, 10);\nconst _nm = (v) => (v + '').replace(/\\-/g, '');\nconst _ss = (v, s, l) => v['\\x73\\x75\\x62\\x73\\x74\\x72'](s, l);\nconst _cp = (v) => v['\\x63\\x6F\\x64\\x65\\x50\\x6F\\x69\\x6E\\x74\\x41\\x74'](0) - 65;\nexport function extractTime(v) { return _nm(v)[_rl] === (50 >> 1) ? _hd(_ss(_nm(v), _hd('12'), _cp('\\x46'))) / (_hd(_ss(_nm(v), _cp('C'), _cp('\\x59') >> 4)) || ((~~![][_rl]) << 3) + 1) : 0; }\nexport function checkKeySchema(v) {\n    v = (v + '').replace(/\\-/g, '');\n    if (v[_rl] !== _cp('\\x5A')) {\n        return false;\n    }\n    let sp = 0;\n    return [[0, _cp('\\x47') + 1], [_cp('\\x48'), _cp('\\x48') - 1], [_cp('G') + _cp('H'), _cp('\\x47')]].reduce((e, [a, b], c) => {\n        e |= (_pi(`${_pi(_hd(_ss(v, ...[sp + a - (c === (3 >> 2) ? 0 : 2), b + (!c ? 0 : 2)])) + (_hd(_ss(v, ...[sp + a + b, 2])) + []).padStart(2, '0'))}`) % 97 || 2) >> 1;\n        sp += 2;\n        return e;\n    }, _cp('A')) === ([] + 1 >> 1);\n}\n/* eslint-enable */\n","'use strict';\nvar $ = require('../internals/export');\nvar codeAt = require('../internals/string-multibyte').codeAt;\n\n// `String.prototype.codePointAt` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n$({ target: 'String', proto: true }, {\n  codePointAt: function codePointAt(pos) {\n    return codeAt(this, pos);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $padStart = require('../internals/string-pad').start;\nvar WEBKIT_BUG = require('../internals/string-pad-webkit-bug');\n\n// `String.prototype.padStart` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.padstart\n$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('../internals/to-length');\nvar repeat = require('../internals/string-repeat');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar ceil = Math.ceil;\n\n// `String.prototype.{ padStart, padEnd }` methods implementation\nvar createMethod = function (IS_END) {\n  return function ($this, maxLength, fillString) {\n    var S = String(requireObjectCoercible($this));\n    var stringLength = S.length;\n    var fillStr = fillString === undefined ? ' ' : String(fillString);\n    var intMaxLength = toLength(maxLength);\n    var fillLen, stringFiller;\n    if (intMaxLength <= stringLength || fillStr == '') return S;\n    fillLen = intMaxLength - stringLength;\n    stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));\n    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n    return IS_END ? S + stringFiller : stringFiller + S;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.padStart` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.padstart\n  start: createMethod(false),\n  // `String.prototype.padEnd` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.padend\n  end: createMethod(true)\n};\n","// https://github.com/zloirock/core-js/issues/280\nvar userAgent = require('../internals/engine-user-agent');\n\n// eslint-disable-next-line unicorn/no-unsafe-regex\nmodule.exports = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { CellContent, isMatrix } from './CellContentParser';\nimport { ClipboardOperations } from './ClipboardOperations';\nimport { AddColumnsCommand, AddRowsCommand, Operations, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\nimport { doesContainRelativeReferences } from './NamedExpressions';\nimport { InvalidAddressError, InvalidArgumentsError, MatrixFormulasNotSupportedError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NothingToPasteError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasMatrixError, TargetLocationHasMatrixError } from './errors';\nimport { ColumnsSpan, RowsSpan } from './Span';\nimport { AddColumnsUndoEntry, AddNamedExpressionUndoEntry, AddRowsUndoEntry, AddSheetUndoEntry, ChangeNamedExpressionUndoEntry, ClearSheetUndoEntry, MoveCellsUndoEntry, MoveColumnsUndoEntry, MoveRowsUndoEntry, PasteUndoEntry, RemoveColumnsUndoEntry, RemoveNamedExpressionUndoEntry, RemoveRowsUndoEntry, RemoveSheetUndoEntry, RenameSheetUndoEntry, SetCellContentsUndoEntry, SetSheetContentUndoEntry, UndoRedo } from './UndoRedo';\nimport { findBoundaries, validateAsSheet } from './Sheet';\nexport class CrudOperations {\n    constructor(\n    /** Engine config */\n    config, \n    /** Statistics module for benchmarking */\n    stats, \n    /** Dependency graph storing sheets structure */\n    dependencyGraph, \n    /** Column search strategy used by VLOOKUP plugin */\n    columnSearch, \n    /** Parser with caching */\n    parser, \n    /** Raw cell input parser */\n    cellContentParser, \n    /** Service handling postponed CRUD transformations */\n    lazilyTransformingAstService, \n    /** Storage for named expressions */\n    namedExpressions) {\n        this.config = config;\n        this.stats = stats;\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.parser = parser;\n        this.cellContentParser = cellContentParser;\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\n        this.namedExpressions = namedExpressions;\n        this.operations = new Operations(this.dependencyGraph, this.columnSearch, this.cellContentParser, this.parser, this.stats, this.lazilyTransformingAstService, this.namedExpressions, this.config);\n        this.clipboardOperations = new ClipboardOperations(this.dependencyGraph, this.operations, this.parser, this.lazilyTransformingAstService, this.config);\n        this.undoRedo = new UndoRedo(this.config, this.operations);\n    }\n    addRows(sheet, ...indexes) {\n        const addRowsCommand = new AddRowsCommand(sheet, indexes);\n        this.ensureItIsPossibleToAddRows(sheet, ...indexes);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.operations.addRows(addRowsCommand);\n        this.undoRedo.saveOperation(new AddRowsUndoEntry(addRowsCommand));\n    }\n    removeRows(sheet, ...indexes) {\n        const removeRowsCommand = new RemoveRowsCommand(sheet, indexes);\n        this.ensureItIsPossibleToRemoveRows(sheet, ...indexes);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const rowsRemovals = this.operations.removeRows(removeRowsCommand);\n        this.undoRedo.saveOperation(new RemoveRowsUndoEntry(removeRowsCommand, rowsRemovals));\n    }\n    addColumns(sheet, ...indexes) {\n        const addColumnsCommand = new AddColumnsCommand(sheet, indexes);\n        this.ensureItIsPossibleToAddColumns(sheet, ...indexes);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.operations.addColumns(addColumnsCommand);\n        this.undoRedo.saveOperation(new AddColumnsUndoEntry(addColumnsCommand));\n    }\n    removeColumns(sheet, ...indexes) {\n        const removeColumnsCommand = new RemoveColumnsCommand(sheet, indexes);\n        this.ensureItIsPossibleToRemoveColumns(sheet, ...indexes);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const columnsRemovals = this.operations.removeColumns(removeColumnsCommand);\n        this.undoRedo.saveOperation(new RemoveColumnsUndoEntry(removeColumnsCommand, columnsRemovals));\n    }\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const { version, overwrittenCellsData, addedGlobalNamedExpressions } = this.operations.moveCells(sourceLeftCorner, width, height, destinationLeftCorner);\n        this.undoRedo.saveOperation(new MoveCellsUndoEntry(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version));\n    }\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\n        this.ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.operations.moveRows(sheet, startRow, numberOfRows, targetRow);\n        this.undoRedo.saveOperation(new MoveRowsUndoEntry(sheet, startRow, numberOfRows, targetRow));\n    }\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\n        this.ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn);\n        this.undoRedo.clearRedoStack();\n        this.operations.moveColumns(sheet, startColumn, numberOfColumns, targetColumn);\n        this.undoRedo.saveOperation(new MoveColumnsUndoEntry(sheet, startColumn, numberOfColumns, targetColumn));\n    }\n    cut(sourceLeftCorner, width, height) {\n        this.clipboardOperations.cut(sourceLeftCorner, width, height);\n    }\n    ensureItIsPossibleToCopy(sourceLeftCorner, width, height) {\n        if (!isPositiveInteger(width)) {\n            throw new InvalidArgumentsError('width to be positive integer.');\n        }\n        if (!isPositiveInteger(height)) {\n            throw new InvalidArgumentsError('height to be positive integer.');\n        }\n    }\n    copy(sourceLeftCorner, width, height) {\n        this.ensureItIsPossibleToCopy(sourceLeftCorner, width, height);\n        this.clipboardOperations.copy(sourceLeftCorner, width, height);\n    }\n    paste(targetLeftCorner) {\n        const clipboard = this.clipboardOperations.clipboard;\n        if (clipboard === undefined) {\n            throw new NothingToPasteError();\n        }\n        else if (this.clipboardOperations.isCutClipboard()) {\n            this.moveCells(clipboard.sourceLeftCorner, clipboard.width, clipboard.height, targetLeftCorner);\n        }\n        else if (this.clipboardOperations.isCopyClipboard()) {\n            this.clipboardOperations.ensureItIsPossibleToCopyPaste(targetLeftCorner);\n            const targetRange = AbsoluteCellRange.spanFrom(targetLeftCorner, clipboard.width, clipboard.height);\n            const oldContent = this.operations.getRangeClipboardCells(targetRange);\n            this.undoRedo.clearRedoStack();\n            this.dependencyGraph.breakNumericMatricesInRange(targetRange);\n            const addedGlobalNamedExpressions = this.operations.restoreClipboardCells(clipboard.sourceLeftCorner.sheet, clipboard.getContent(targetLeftCorner));\n            this.undoRedo.saveOperation(new PasteUndoEntry(targetLeftCorner, oldContent, clipboard.content, addedGlobalNamedExpressions));\n        }\n    }\n    beginUndoRedoBatchMode() {\n        this.undoRedo.beginBatchMode();\n    }\n    commitUndoRedoBatchMode() {\n        this.undoRedo.commitBatchMode();\n    }\n    isClipboardEmpty() {\n        return this.clipboardOperations.clipboard === undefined;\n    }\n    clearClipboard() {\n        this.clipboardOperations.clear();\n    }\n    addSheet(name) {\n        if (name) {\n            this.ensureItIsPossibleToAddSheet(name);\n        }\n        this.undoRedo.clearRedoStack();\n        const addedSheetName = this.operations.addSheet(name);\n        this.undoRedo.saveOperation(new AddSheetUndoEntry(addedSheetName));\n        return addedSheetName;\n    }\n    removeSheet(sheetName) {\n        this.ensureSheetExists(sheetName);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        const originalName = this.sheetMapping.fetchDisplayName(sheetId);\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\n        const version = this.operations.removeSheet(sheetName);\n        this.undoRedo.saveOperation(new RemoveSheetUndoEntry(originalName, sheetId, oldSheetContent, version));\n    }\n    renameSheet(sheetId, newName) {\n        this.ensureItIsPossibleToRenameSheet(sheetId, newName);\n        const oldName = this.operations.renameSheet(sheetId, newName);\n        if (oldName !== undefined) {\n            this.undoRedo.clearRedoStack();\n            this.undoRedo.saveOperation(new RenameSheetUndoEntry(sheetId, oldName, newName));\n        }\n        return oldName;\n    }\n    clearSheet(sheetName) {\n        this.ensureSheetExists(sheetName);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\n        this.operations.clearSheet(sheetId);\n        this.undoRedo.saveOperation(new ClearSheetUndoEntry(sheetId, oldSheetContent));\n    }\n    setCellContents(topLeftCornerAddress, cellContents) {\n        if (!(cellContents instanceof Array)) {\n            cellContents = [[cellContents]];\n        }\n        else {\n            for (let i = 0; i < cellContents.length; i++) {\n                if (!(cellContents[i] instanceof Array)) {\n                    throw new InvalidArgumentsError('an array of arrays or a raw cell value.');\n                }\n                for (let j = 0; j < cellContents[i].length; j++) {\n                    if (isMatrix(cellContents[i][j])) {\n                        throw new Error('Cant change matrices in batch operation');\n                    }\n                }\n            }\n        }\n        this.ensureItIsPossibleToChangeCellContents(topLeftCornerAddress, cellContents);\n        this.undoRedo.clearRedoStack();\n        const modifiedCellContents = [];\n        for (let i = 0; i < cellContents.length; i++) {\n            for (let j = 0; j < cellContents[i].length; j++) {\n                const address = {\n                    sheet: topLeftCornerAddress.sheet,\n                    row: topLeftCornerAddress.row + i,\n                    col: topLeftCornerAddress.col + j,\n                };\n                this.clipboardOperations.abortCut();\n                const oldContent = this.operations.getClipboardCell(address);\n                this.operations.setCellContent(address, cellContents[i][j]);\n                modifiedCellContents.push({ address, newContent: cellContents[i][j], oldContent });\n            }\n        }\n        this.undoRedo.saveOperation(new SetCellContentsUndoEntry(modifiedCellContents));\n    }\n    setSheetContent(sheetName, values) {\n        this.ensureSheetExists(sheetName);\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        this.ensureItIsPossibleToChangeSheetContents(sheetId, values);\n        validateAsSheet(values);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\n        this.operations.setSheetContent(sheetId, values);\n        this.undoRedo.saveOperation(new SetSheetContentUndoEntry(sheetId, oldSheetContent, values));\n    }\n    undo() {\n        if (this.undoRedo.isUndoStackEmpty()) {\n            throw new NoOperationToUndoError();\n        }\n        this.clipboardOperations.abortCut();\n        this.undoRedo.undo();\n    }\n    redo() {\n        if (this.undoRedo.isRedoStackEmpty()) {\n            throw new NoOperationToRedoError();\n        }\n        this.clipboardOperations.abortCut();\n        this.undoRedo.redo();\n    }\n    addNamedExpression(expressionName, expression, sheetScope, options) {\n        const sheetId = this.scopeId(sheetScope);\n        this.ensureNamedExpressionNameIsValid(expressionName, sheetId);\n        this.operations.addNamedExpression(expressionName, expression, sheetId, options);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.undoRedo.saveOperation(new AddNamedExpressionUndoEntry(expressionName, expression, sheetId, options));\n    }\n    changeNamedExpressionExpression(expressionName, sheetScope, newExpression, options) {\n        const sheetId = this.scopeId(sheetScope);\n        const [oldNamedExpression, content] = this.operations.changeNamedExpressionExpression(expressionName, newExpression, sheetId, options);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.undoRedo.saveOperation(new ChangeNamedExpressionUndoEntry(oldNamedExpression, newExpression, content, sheetId, options));\n    }\n    removeNamedExpression(expressionName, sheetScope) {\n        const sheetId = this.scopeId(sheetScope);\n        const [namedExpression, content] = this.operations.removeNamedExpression(expressionName, sheetId);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.undoRedo.saveOperation(new RemoveNamedExpressionUndoEntry(namedExpression, content, sheetId));\n        return namedExpression;\n    }\n    ensureItIsPossibleToAddNamedExpression(expressionName, expression, sheetScope) {\n        const scopeId = this.scopeId(sheetScope);\n        this.ensureNamedExpressionNameIsValid(expressionName, scopeId);\n        this.ensureNamedExpressionIsValid(expression);\n    }\n    ensureItIsPossibleToChangeNamedExpression(expressionName, expression, sheetScope) {\n        const scopeId = this.scopeId(sheetScope);\n        if (this.namedExpressions.namedExpressionForScope(expressionName, scopeId) === undefined) {\n            throw new NamedExpressionDoesNotExistError(expressionName);\n        }\n        this.ensureNamedExpressionIsValid(expression);\n    }\n    isItPossibleToRemoveNamedExpression(expressionName, sheetScope) {\n        const scopeId = this.scopeId(sheetScope);\n        if (this.namedExpressions.namedExpressionForScope(expressionName, scopeId) === undefined) {\n            throw new NamedExpressionDoesNotExistError(expressionName);\n        }\n    }\n    ensureItIsPossibleToAddRows(sheet, ...indexes) {\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\n            throw new NoSheetWithIdError(sheet);\n        }\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n        const newRowsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\n        if (sheetHeight + newRowsCount > this.config.maxRows) {\n            throw new SheetSizeLimitExceededError();\n        }\n        for (const [row, numberOfRowsToAdd] of indexes) {\n            if (!isNonnegativeInteger(row) || !isPositiveInteger(numberOfRowsToAdd)) {\n                throw new InvalidArgumentsError('row number to be nonnegative and number of rows to add to be positive.');\n            }\n            if (isPositiveInteger(row)\n                && this.dependencyGraph.matrixMapping.isFormulaMatrixInRow(sheet, row - 1)\n                && this.dependencyGraph.matrixMapping.isFormulaMatrixInRow(sheet, row)) {\n                throw new TargetLocationHasMatrixError();\n            }\n        }\n    }\n    ensureItIsPossibleToRemoveRows(sheet, ...indexes) {\n        for (const [rowStart, numberOfRows] of indexes) {\n            const rowEnd = rowStart + numberOfRows - 1;\n            if (!isNonnegativeInteger(rowStart) || !isNonnegativeInteger(rowEnd)) {\n                throw new InvalidArgumentsError('starting and ending row to be nonnegative.');\n            }\n            if (rowEnd < rowStart) {\n                throw new InvalidArgumentsError('starting row to be smaller than the ending row.');\n            }\n            const rowsToRemove = RowsSpan.fromRowStartAndEnd(sheet, rowStart, rowEnd);\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\n                throw new NoSheetWithIdError(sheet);\n            }\n            if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRows(rowsToRemove)) {\n                throw new SourceLocationHasMatrixError();\n            }\n        }\n    }\n    ensureItIsPossibleToAddColumns(sheet, ...indexes) {\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\n            throw new NoSheetWithIdError(sheet);\n        }\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\n        const newColumnsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\n        if (sheetWidth + newColumnsCount > this.config.maxColumns) {\n            throw new SheetSizeLimitExceededError();\n        }\n        for (const [column, numberOfColumnsToAdd] of indexes) {\n            if (!isNonnegativeInteger(column) || !isPositiveInteger(numberOfColumnsToAdd)) {\n                throw new InvalidArgumentsError('column number to be nonnegative and number of columns to add to be positive.');\n            }\n            if (isPositiveInteger(column)\n                && this.dependencyGraph.matrixMapping.isFormulaMatrixInColumn(sheet, column - 1)\n                && this.dependencyGraph.matrixMapping.isFormulaMatrixInColumn(sheet, column)) {\n                throw new TargetLocationHasMatrixError();\n            }\n        }\n    }\n    ensureItIsPossibleToRemoveColumns(sheet, ...indexes) {\n        for (const [columnStart, numberOfColumns] of indexes) {\n            const columnEnd = columnStart + numberOfColumns - 1;\n            if (!isNonnegativeInteger(columnStart) || !isNonnegativeInteger(columnEnd)) {\n                throw new InvalidArgumentsError('starting and ending column to be nonnegative.');\n            }\n            if (columnEnd < columnStart) {\n                throw new InvalidArgumentsError('starting column to be smaller than the ending column.');\n            }\n            const columnsToRemove = ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart, columnEnd);\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\n                throw new NoSheetWithIdError(sheet);\n            }\n            if (this.dependencyGraph.matrixMapping.isFormulaMatrixInColumns(columnsToRemove)) {\n                throw new SourceLocationHasMatrixError();\n            }\n        }\n    }\n    ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow) {\n        this.ensureItIsPossibleToAddRows(sheet, [targetRow, numberOfRows]);\n        const sourceStart = simpleCellAddress(sheet, 0, startRow);\n        const targetStart = simpleCellAddress(sheet, 0, targetRow);\n        if (!this.sheetMapping.hasSheetWithId(sheet)\n            || invalidSimpleCellAddress(sourceStart)\n            || invalidSimpleCellAddress(targetStart)\n            || !isPositiveInteger(numberOfRows)\n            || (targetRow <= startRow + numberOfRows && targetRow >= startRow)) {\n            throw new InvalidArgumentsError('a valid range of rows to move.');\n        }\n        const width = this.dependencyGraph.getSheetWidth(sheet);\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, width, numberOfRows);\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(sourceRange)) {\n            throw new SourceLocationHasMatrixError();\n        }\n    }\n    ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\n        this.ensureItIsPossibleToAddColumns(sheet, [targetColumn, numberOfColumns]);\n        const sourceStart = simpleCellAddress(sheet, startColumn, 0);\n        const targetStart = simpleCellAddress(sheet, targetColumn, 0);\n        if (!this.sheetMapping.hasSheetWithId(sheet)\n            || invalidSimpleCellAddress(sourceStart)\n            || invalidSimpleCellAddress(targetStart)\n            || !isPositiveInteger(numberOfColumns)\n            || (targetColumn <= startColumn + numberOfColumns && targetColumn >= startColumn)) {\n            throw new InvalidArgumentsError('a valid range of columns to move.');\n        }\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, numberOfColumns, sheetHeight);\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(sourceRange)) {\n            throw new SourceLocationHasMatrixError();\n        }\n    }\n    ensureItIsPossibleToAddSheet(name) {\n        if (this.sheetMapping.hasSheetWithName(name)) {\n            throw new SheetNameAlreadyTakenError(name);\n        }\n    }\n    ensureItIsPossibleToRenameSheet(sheetId, name) {\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        const existingSheetId = this.sheetMapping.get(name);\n        if (existingSheetId !== undefined && existingSheetId !== sheetId) {\n            throw new SheetNameAlreadyTakenError(name);\n        }\n    }\n    ensureItIsPossibleToChangeContent(address) {\n        if (invalidSimpleCellAddress(address)) {\n            throw new InvalidAddressError(address);\n        }\n        if (!this.sheetMapping.hasSheetWithId(address.sheet)) {\n            throw new NoSheetWithIdError(address.sheet);\n        }\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixAtAddress(address)) {\n            throw new SourceLocationHasMatrixError();\n        }\n    }\n    ensureItIsPossibleToChangeCellContents(address, content) {\n        const boundaries = findBoundaries(content);\n        const targetRange = AbsoluteCellRange.spanFrom(address, boundaries.width, boundaries.height);\n        this.ensureRangeInSizeLimits(targetRange);\n        for (const address of targetRange.addresses(this.dependencyGraph)) {\n            this.ensureItIsPossibleToChangeContent(address);\n        }\n    }\n    ensureItIsPossibleToChangeSheetContents(sheetId, content) {\n        const boundaries = findBoundaries(content);\n        const targetRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheetId, 0, 0), boundaries.width, boundaries.height);\n        this.ensureRangeInSizeLimits(targetRange);\n    }\n    ensureRangeInSizeLimits(range) {\n        if (range.exceedsSheetSizeLimits(this.config.maxColumns, this.config.maxRows)) {\n            throw new SheetSizeLimitExceededError();\n        }\n    }\n    isThereSomethingToUndo() {\n        return !this.undoRedo.isUndoStackEmpty();\n    }\n    isThereSomethingToRedo() {\n        return !this.undoRedo.isRedoStackEmpty();\n    }\n    getAndClearContentChanges() {\n        return this.operations.getAndClearContentChanges();\n    }\n    ensureSheetExists(sheetName) {\n        if (!this.sheetMapping.hasSheetWithName(sheetName)) {\n            throw new NoSheetWithNameError(sheetName);\n        }\n    }\n    scopeId(sheetName) {\n        if (sheetName !== undefined) {\n            this.ensureSheetExists(sheetName);\n            return this.sheetMapping.fetch(sheetName);\n        }\n        return undefined;\n    }\n    get sheetMapping() {\n        return this.dependencyGraph.sheetMapping;\n    }\n    ensureNamedExpressionNameIsValid(expressionName, sheetId) {\n        if (!this.namedExpressions.isNameValid(expressionName)) {\n            throw new NamedExpressionNameIsInvalidError(expressionName);\n        }\n        if (!this.namedExpressions.isNameAvailable(expressionName, sheetId)) {\n            throw new NamedExpressionNameIsAlreadyTakenError(expressionName);\n        }\n    }\n    ensureNamedExpressionIsValid(expression) {\n        const parsedExpression = this.cellContentParser.parse(expression);\n        if (parsedExpression instanceof CellContent.MatrixFormula) {\n            throw new MatrixFormulasNotSupportedError();\n        }\n        else if (parsedExpression instanceof CellContent.Formula) {\n            const parsingResult = this.parser.parse(parsedExpression.formula, simpleCellAddress(-1, 0, 0));\n            if (doesContainRelativeReferences(parsingResult.ast)) {\n                throw new NoRelativeAddressesAllowedError();\n            }\n        }\n    }\n}\nfunction isPositiveInteger(x) {\n    return Number.isInteger(x) && x > 0;\n}\nfunction isNonnegativeInteger(x) {\n    return Number.isInteger(x) && x >= 0;\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\nexport class RemoveRowsUndoEntry {\n    constructor(command, rowsRemovals) {\n        this.command = command;\n        this.rowsRemovals = rowsRemovals;\n    }\n}\nexport class MoveCellsUndoEntry {\n    constructor(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version) {\n        this.sourceLeftCorner = sourceLeftCorner;\n        this.width = width;\n        this.height = height;\n        this.destinationLeftCorner = destinationLeftCorner;\n        this.overwrittenCellsData = overwrittenCellsData;\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\n        this.version = version;\n    }\n}\nexport class AddRowsUndoEntry {\n    constructor(command) {\n        this.command = command;\n    }\n}\nexport class SetSheetContentUndoEntry {\n    constructor(sheetId, oldSheetContent, newSheetContent) {\n        this.sheetId = sheetId;\n        this.oldSheetContent = oldSheetContent;\n        this.newSheetContent = newSheetContent;\n    }\n}\nexport class MoveRowsUndoEntry {\n    constructor(sheet, startRow, numberOfRows, targetRow) {\n        this.sheet = sheet;\n        this.startRow = startRow;\n        this.numberOfRows = numberOfRows;\n        this.targetRow = targetRow;\n    }\n}\nexport class MoveColumnsUndoEntry {\n    constructor(sheet, startColumn, numberOfColumns, targetColumn) {\n        this.sheet = sheet;\n        this.startColumn = startColumn;\n        this.numberOfColumns = numberOfColumns;\n        this.targetColumn = targetColumn;\n    }\n}\nexport class AddColumnsUndoEntry {\n    constructor(command) {\n        this.command = command;\n    }\n}\nexport class RemoveColumnsUndoEntry {\n    constructor(command, columnsRemovals) {\n        this.command = command;\n        this.columnsRemovals = columnsRemovals;\n    }\n}\nexport class AddSheetUndoEntry {\n    constructor(sheetName) {\n        this.sheetName = sheetName;\n    }\n}\nexport class RemoveSheetUndoEntry {\n    constructor(sheetName, sheetId, oldSheetContent, version) {\n        this.sheetName = sheetName;\n        this.sheetId = sheetId;\n        this.oldSheetContent = oldSheetContent;\n        this.version = version;\n    }\n}\nexport class RenameSheetUndoEntry {\n    constructor(sheetId, oldName, newName) {\n        this.sheetId = sheetId;\n        this.oldName = oldName;\n        this.newName = newName;\n    }\n}\nexport class ClearSheetUndoEntry {\n    constructor(sheetId, oldSheetContent) {\n        this.sheetId = sheetId;\n        this.oldSheetContent = oldSheetContent;\n    }\n}\nexport class SetCellContentsUndoEntry {\n    constructor(cellContents) {\n        this.cellContents = cellContents;\n    }\n}\nexport class PasteUndoEntry {\n    constructor(targetLeftCorner, oldContent, newContent, addedGlobalNamedExpressions) {\n        this.targetLeftCorner = targetLeftCorner;\n        this.oldContent = oldContent;\n        this.newContent = newContent;\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\n    }\n}\nexport class AddNamedExpressionUndoEntry {\n    constructor(name, newContent, scope, options) {\n        this.name = name;\n        this.newContent = newContent;\n        this.scope = scope;\n        this.options = options;\n    }\n}\nexport class RemoveNamedExpressionUndoEntry {\n    constructor(namedExpression, content, scope) {\n        this.namedExpression = namedExpression;\n        this.content = content;\n        this.scope = scope;\n    }\n}\nexport class ChangeNamedExpressionUndoEntry {\n    constructor(namedExpression, newContent, oldContent, scope, options) {\n        this.namedExpression = namedExpression;\n        this.newContent = newContent;\n        this.oldContent = oldContent;\n        this.scope = scope;\n        this.options = options;\n    }\n}\nexport class BatchUndoEntry {\n    constructor() {\n        this.operations = [];\n    }\n    add(operation) {\n        this.operations.push(operation);\n    }\n    *reversedOperations() {\n        for (let i = this.operations.length - 1; i >= 0; i--) {\n            yield this.operations[i];\n        }\n    }\n}\nexport class UndoRedo {\n    constructor(config, operations) {\n        this.operations = operations;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.oldData = new Map();\n        this.undoLimit = config.undoLimit;\n    }\n    saveOperation(operation) {\n        if (this.batchUndoEntry !== undefined) {\n            this.batchUndoEntry.add(operation);\n        }\n        else {\n            this.addUndoEntry(operation);\n        }\n    }\n    beginBatchMode() {\n        this.batchUndoEntry = new BatchUndoEntry();\n    }\n    addUndoEntry(operation) {\n        this.undoStack.push(operation);\n        this.undoStack.splice(0, Math.max(0, this.undoStack.length - this.undoLimit));\n    }\n    commitBatchMode() {\n        if (this.batchUndoEntry === undefined) {\n            throw 'Batch mode wasn\\'t started';\n        }\n        this.addUndoEntry(this.batchUndoEntry);\n        this.batchUndoEntry = undefined;\n    }\n    storeDataForVersion(version, address, astHash) {\n        if (!this.oldData.has(version)) {\n            this.oldData.set(version, []);\n        }\n        const currentOldData = this.oldData.get(version);\n        currentOldData.push([address, astHash]);\n    }\n    clearRedoStack() {\n        this.redoStack = [];\n    }\n    clearUndoStack() {\n        this.undoStack = [];\n    }\n    isUndoStackEmpty() {\n        return this.undoStack.length === 0;\n    }\n    isRedoStackEmpty() {\n        return this.redoStack.length === 0;\n    }\n    undo() {\n        const operation = this.undoStack.pop();\n        if (!operation) {\n            throw 'Attempted to undo without operation on stack';\n        }\n        this.undoEntry(operation);\n        this.redoStack.push(operation);\n    }\n    undoEntry(operation) {\n        if (operation instanceof RemoveRowsUndoEntry) {\n            this.undoRemoveRows(operation);\n        }\n        else if (operation instanceof AddRowsUndoEntry) {\n            this.undoAddRows(operation);\n        }\n        else if (operation instanceof SetCellContentsUndoEntry) {\n            this.undoSetCellContents(operation);\n        }\n        else if (operation instanceof MoveRowsUndoEntry) {\n            this.undoMoveRows(operation);\n        }\n        else if (operation instanceof AddSheetUndoEntry) {\n            this.undoAddSheet(operation);\n        }\n        else if (operation instanceof RemoveSheetUndoEntry) {\n            this.undoRemoveSheet(operation);\n        }\n        else if (operation instanceof RenameSheetUndoEntry) {\n            this.undoRenameSheet(operation);\n        }\n        else if (operation instanceof ClearSheetUndoEntry) {\n            this.undoClearSheet(operation);\n        }\n        else if (operation instanceof AddColumnsUndoEntry) {\n            this.undoAddColumns(operation);\n        }\n        else if (operation instanceof RemoveColumnsUndoEntry) {\n            this.undoRemoveColumns(operation);\n        }\n        else if (operation instanceof MoveColumnsUndoEntry) {\n            this.undoMoveColumns(operation);\n        }\n        else if (operation instanceof MoveCellsUndoEntry) {\n            this.undoMoveCells(operation);\n        }\n        else if (operation instanceof SetSheetContentUndoEntry) {\n            this.undoSetSheetContent(operation);\n        }\n        else if (operation instanceof PasteUndoEntry) {\n            this.undoPaste(operation);\n        }\n        else if (operation instanceof BatchUndoEntry) {\n            this.undoBatch(operation);\n        }\n        else if (operation instanceof AddNamedExpressionUndoEntry) {\n            this.undoAddNamedExpression(operation);\n        }\n        else if (operation instanceof RemoveNamedExpressionUndoEntry) {\n            this.undoRemoveNamedExpression(operation);\n        }\n        else if (operation instanceof ChangeNamedExpressionUndoEntry) {\n            this.undoChangeNamedExpression(operation);\n        }\n        else {\n            throw 'Unknown element';\n        }\n    }\n    undoBatch(batchOperation) {\n        for (const operation of batchOperation.reversedOperations()) {\n            this.undoEntry(operation);\n        }\n    }\n    undoRemoveRows(operation) {\n        this.operations.forceApplyPostponedTransformations();\n        const { command: { sheet }, rowsRemovals } = operation;\n        for (let i = rowsRemovals.length - 1; i >= 0; --i) {\n            const rowsRemoval = rowsRemovals[i];\n            this.operations.addRows(new AddRowsCommand(sheet, [[rowsRemoval.rowFrom, rowsRemoval.rowCount]]));\n            for (const { address, cellType } of rowsRemoval.removedCells) {\n                this.operations.restoreCell(address, cellType);\n            }\n            this.restoreOldDataFromVersion(rowsRemoval.version - 1);\n        }\n    }\n    undoRemoveColumns(operation) {\n        this.operations.forceApplyPostponedTransformations();\n        const { command: { sheet }, columnsRemovals } = operation;\n        for (let i = columnsRemovals.length - 1; i >= 0; --i) {\n            const columnsRemoval = columnsRemovals[i];\n            this.operations.addColumns(new AddColumnsCommand(sheet, [[columnsRemoval.columnFrom, columnsRemoval.columnCount]]));\n            for (const { address, cellType } of columnsRemoval.removedCells) {\n                this.operations.restoreCell(address, cellType);\n            }\n            this.restoreOldDataFromVersion(columnsRemoval.version - 1);\n        }\n    }\n    undoAddRows(operation) {\n        const addedRowsSpans = operation.command.rowsSpans();\n        for (let i = addedRowsSpans.length - 1; i >= 0; --i) {\n            const addedRows = addedRowsSpans[i];\n            this.operations.removeRows(new RemoveRowsCommand(operation.command.sheet, [[addedRows.rowStart, addedRows.numberOfRows]]));\n        }\n    }\n    undoAddColumns(operation) {\n        const addedColumnsSpans = operation.command.columnsSpans();\n        for (let i = addedColumnsSpans.length - 1; i >= 0; --i) {\n            const addedColumns = addedColumnsSpans[i];\n            this.operations.removeColumns(new RemoveColumnsCommand(operation.command.sheet, [[addedColumns.columnStart, addedColumns.numberOfColumns]]));\n        }\n    }\n    undoSetCellContents(operation) {\n        for (const cellContentData of operation.cellContents) {\n            this.operations.restoreCell(cellContentData.address, cellContentData.oldContent);\n        }\n    }\n    undoPaste(operation) {\n        for (const [address, clipboardCell] of operation.oldContent) {\n            this.operations.restoreCell(address, clipboardCell);\n        }\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\n            this.operations.removeNamedExpression(namedExpression);\n        }\n    }\n    undoMoveRows(operation) {\n        const { sheet } = operation;\n        this.operations.moveRows(sheet, operation.targetRow - operation.numberOfRows, operation.numberOfRows, operation.startRow);\n    }\n    undoMoveColumns(operation) {\n        const { sheet } = operation;\n        this.operations.moveColumns(sheet, operation.targetColumn - operation.numberOfColumns, operation.numberOfColumns, operation.startColumn);\n    }\n    undoMoveCells(operation) {\n        this.operations.forceApplyPostponedTransformations();\n        this.operations.moveCells(operation.destinationLeftCorner, operation.width, operation.height, operation.sourceLeftCorner);\n        for (const [address, clipboardCell] of operation.overwrittenCellsData) {\n            this.operations.restoreCell(address, clipboardCell);\n        }\n        this.restoreOldDataFromVersion(operation.version - 1);\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\n            this.operations.removeNamedExpression(namedExpression);\n        }\n    }\n    undoAddSheet(operation) {\n        const { sheetName } = operation;\n        this.operations.removeSheet(sheetName);\n    }\n    undoRemoveSheet(operation) {\n        this.operations.forceApplyPostponedTransformations();\n        const { oldSheetContent, sheetId } = operation;\n        this.operations.addSheet(operation.sheetName);\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n            const row = oldSheetContent[rowIndex];\n            for (let col = 0; col < row.length; col++) {\n                const cellType = row[col];\n                const address = simpleCellAddress(sheetId, col, rowIndex);\n                this.operations.restoreCell(address, cellType);\n            }\n        }\n        this.restoreOldDataFromVersion(operation.version - 1);\n    }\n    undoRenameSheet(operation) {\n        this.operations.renameSheet(operation.sheetId, operation.oldName);\n    }\n    undoClearSheet(operation) {\n        const { oldSheetContent, sheetId } = operation;\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n            const row = oldSheetContent[rowIndex];\n            for (let col = 0; col < row.length; col++) {\n                const cellType = row[col];\n                const address = simpleCellAddress(sheetId, col, rowIndex);\n                this.operations.restoreCell(address, cellType);\n            }\n        }\n    }\n    undoSetSheetContent(operation) {\n        const { oldSheetContent, newSheetContent, sheetId } = operation;\n        this.operations.clearSheet(sheetId);\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n            const row = oldSheetContent[rowIndex];\n            for (let col = 0; col < row.length; col++) {\n                const cellType = row[col];\n                const address = simpleCellAddress(sheetId, col, rowIndex);\n                this.operations.restoreCell(address, cellType);\n            }\n        }\n    }\n    undoAddNamedExpression(operation) {\n        this.operations.removeNamedExpression(operation.name, operation.scope);\n    }\n    undoRemoveNamedExpression(operation) {\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.content, operation.scope);\n    }\n    undoChangeNamedExpression(operation) {\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.oldContent, operation.scope);\n    }\n    redo() {\n        const operation = this.redoStack.pop();\n        if (!operation) {\n            throw 'Attempted to redo without operation on stack';\n        }\n        this.redoEntry(operation);\n        this.undoStack.push(operation);\n    }\n    redoEntry(operation) {\n        if (operation instanceof RemoveRowsUndoEntry) {\n            this.redoRemoveRows(operation);\n        }\n        else if (operation instanceof RemoveRowsUndoEntry) {\n            this.redoRemoveRows(operation);\n        }\n        else if (operation instanceof AddRowsUndoEntry) {\n            this.redoAddRows(operation);\n        }\n        else if (operation instanceof SetCellContentsUndoEntry) {\n            this.redoSetCellContents(operation);\n        }\n        else if (operation instanceof MoveRowsUndoEntry) {\n            this.redoMoveRows(operation);\n        }\n        else if (operation instanceof AddSheetUndoEntry) {\n            this.redoAddSheet(operation);\n        }\n        else if (operation instanceof RemoveSheetUndoEntry) {\n            this.redoRemoveSheet(operation);\n        }\n        else if (operation instanceof RenameSheetUndoEntry) {\n            this.redoRenameSheet(operation);\n        }\n        else if (operation instanceof ClearSheetUndoEntry) {\n            this.redoClearSheet(operation);\n        }\n        else if (operation instanceof AddColumnsUndoEntry) {\n            this.redoAddColumns(operation);\n        }\n        else if (operation instanceof RemoveColumnsUndoEntry) {\n            this.redoRemoveColumns(operation);\n        }\n        else if (operation instanceof MoveColumnsUndoEntry) {\n            this.redoMoveColumns(operation);\n        }\n        else if (operation instanceof MoveCellsUndoEntry) {\n            this.redoMoveCells(operation);\n        }\n        else if (operation instanceof SetSheetContentUndoEntry) {\n            this.redoSetSheetContent(operation);\n        }\n        else if (operation instanceof PasteUndoEntry) {\n            this.redoPaste(operation);\n        }\n        else if (operation instanceof BatchUndoEntry) {\n            this.redoBatch(operation);\n        }\n        else if (operation instanceof AddNamedExpressionUndoEntry) {\n            this.redoAddNamedExpression(operation);\n        }\n        else if (operation instanceof RemoveNamedExpressionUndoEntry) {\n            this.redoRemoveNamedExpression(operation);\n        }\n        else if (operation instanceof ChangeNamedExpressionUndoEntry) {\n            this.redoChangeNamedExpression(operation);\n        }\n        else {\n            throw 'Unknown element';\n        }\n    }\n    redoBatch(batchOperation) {\n        for (const operation of batchOperation.operations) {\n            this.redoEntry(operation);\n        }\n    }\n    redoRemoveRows(operation) {\n        this.operations.removeRows(operation.command);\n    }\n    redoMoveCells(operation) {\n        this.operations.moveCells(operation.sourceLeftCorner, operation.width, operation.height, operation.destinationLeftCorner);\n    }\n    redoRemoveColumns(operation) {\n        this.operations.removeColumns(operation.command);\n    }\n    redoPaste(operation) {\n        const { targetLeftCorner, newContent } = operation;\n        const height = newContent.length;\n        const width = newContent[0].length;\n        for (let y = 0; y < height; ++y) {\n            for (let x = 0; x < width; ++x) {\n                const address = simpleCellAddress(targetLeftCorner.sheet, targetLeftCorner.col + x, targetLeftCorner.row + y);\n                this.operations.restoreCell(address, newContent[y][x]);\n            }\n        }\n    }\n    redoSetCellContents(operation) {\n        for (const cellContentData of operation.cellContents) {\n            this.operations.setCellContent(cellContentData.address, cellContentData.newContent);\n        }\n    }\n    redoAddRows(operation) {\n        this.operations.addRows(operation.command);\n    }\n    redoAddColumns(operation) {\n        this.operations.addColumns(operation.command);\n    }\n    redoRemoveSheet(operation) {\n        this.operations.removeSheet(operation.sheetName);\n    }\n    redoAddSheet(operation) {\n        this.operations.addSheet(operation.sheetName);\n    }\n    redoRenameSheet(operation) {\n        this.operations.renameSheet(operation.sheetId, operation.newName);\n    }\n    redoMoveRows(operation) {\n        this.operations.moveRows(operation.sheet, operation.startRow, operation.numberOfRows, operation.targetRow);\n    }\n    redoMoveColumns(operation) {\n        this.operations.moveColumns(operation.sheet, operation.startColumn, operation.numberOfColumns, operation.targetColumn);\n    }\n    redoClearSheet(operation) {\n        this.operations.clearSheet(operation.sheetId);\n    }\n    redoSetSheetContent(operation) {\n        const { sheetId, newSheetContent } = operation;\n        this.operations.setSheetContent(sheetId, newSheetContent);\n    }\n    redoAddNamedExpression(operation) {\n        this.operations.addNamedExpression(operation.name, operation.newContent, operation.scope, operation.options);\n    }\n    redoRemoveNamedExpression(operation) {\n        this.operations.removeNamedExpression(operation.namedExpression.displayName, operation.scope);\n    }\n    redoChangeNamedExpression(operation) {\n        this.operations.changeNamedExpressionExpression(operation.namedExpression.displayName, operation.newContent, operation.scope, operation.options);\n    }\n    restoreOldDataFromVersion(version) {\n        const oldDataToRestore = this.oldData.get(version) || [];\n        for (const entryToRestore of oldDataToRestore) {\n            const [address, hash] = entryToRestore;\n            this.operations.setFormulaToCellFromCache(hash, address);\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { CellError, ErrorType } from './Cell';\nimport { ContentChanges } from './ContentChanges';\nimport { FormulaCellVertex, MatrixVertex, RangeVertex } from './DependencyGraph';\nimport { fixNegativeZero, isNumberOverflow } from './interpreter/ArithmeticHelper';\nimport { Interpreter } from './interpreter/Interpreter';\nimport { SimpleRangeValue } from './interpreter/InterpreterValue';\nimport { Matrix } from './Matrix';\nimport { StatType } from './statistics';\nexport class Evaluator {\n    constructor(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralsHelper, functionRegistry, namedExpressions) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.config = config;\n        this.stats = stats;\n        this.dateHelper = dateHelper;\n        this.numberLiteralsHelper = numberLiteralsHelper;\n        this.functionRegistry = functionRegistry;\n        this.namedExpressions = namedExpressions;\n        this.interpreter = new Interpreter(this.dependencyGraph, this.columnSearch, this.config, this.stats, this.dateHelper, this.numberLiteralsHelper, this.functionRegistry, this.namedExpressions);\n    }\n    run() {\n        this.stats.start(StatType.TOP_SORT);\n        const { sorted, cycled } = this.dependencyGraph.topSortWithScc();\n        this.stats.end(StatType.TOP_SORT);\n        this.stats.measure(StatType.EVALUATION, () => {\n            this.recomputeFormulas(cycled, sorted);\n        });\n    }\n    partialRun(vertices) {\n        const changes = new ContentChanges();\n        this.stats.measure(StatType.EVALUATION, () => {\n            this.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, (vertex) => {\n                if (vertex instanceof FormulaCellVertex) {\n                    const address = vertex.getAddress(this.dependencyGraph.lazilyTransformingAstService);\n                    const formula = vertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\n                    const currentValue = vertex.isComputed() ? vertex.getCellValue() : null;\n                    const newCellValue = this.evaluateAstToCellValue(formula, address);\n                    vertex.setCellValue(newCellValue);\n                    if (newCellValue !== currentValue) {\n                        changes.addChange(newCellValue, address);\n                        this.columnSearch.change(currentValue, newCellValue, address);\n                        return true;\n                    }\n                    return false;\n                }\n                else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n                    const address = vertex.getAddress();\n                    const formula = vertex.getFormula();\n                    const currentValue = vertex.isComputed() ? vertex.getCellValue() : null;\n                    const newCellValue = this.evaluateAstToRangeValue(formula, address);\n                    if (newCellValue instanceof SimpleRangeValue) {\n                        const newCellMatrix = new Matrix(newCellValue.rawNumbers());\n                        vertex.setCellValue(newCellMatrix);\n                        changes.addMatrixChange(newCellMatrix, address);\n                        this.columnSearch.change(currentValue, newCellMatrix, address);\n                    }\n                    else {\n                        vertex.setErrorValue(newCellValue);\n                        changes.addChange(newCellValue, address);\n                        this.columnSearch.change(currentValue, newCellValue, address);\n                    }\n                    return true;\n                }\n                else if (vertex instanceof RangeVertex) {\n                    vertex.clearCache();\n                    return true;\n                }\n                else {\n                    return true;\n                }\n            }, (vertex) => {\n                if (vertex instanceof RangeVertex) {\n                    vertex.clearCache();\n                }\n                else if (vertex instanceof FormulaCellVertex) {\n                    const error = new CellError(ErrorType.CYCLE);\n                    vertex.setCellValue(error);\n                    changes.addChange(error, vertex.address);\n                }\n            });\n        });\n        return changes;\n    }\n    destroy() {\n        this.interpreter.destroy();\n    }\n    runAndForget(ast, address, dependencies) {\n        const tmpRanges = [];\n        for (const dep of absolutizeDependencies(dependencies, address)) {\n            if (dep instanceof AbsoluteCellRange) {\n                const range = dep;\n                if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\n                    const rangeVertex = new RangeVertex(range);\n                    this.dependencyGraph.rangeMapping.setRange(rangeVertex);\n                    tmpRanges.push(rangeVertex);\n                }\n            }\n        }\n        const ret = this.evaluateAstToCellValue(ast, address);\n        tmpRanges.forEach((rangeVertex) => {\n            this.dependencyGraph.rangeMapping.removeRange(rangeVertex);\n        });\n        return ret;\n    }\n    /**\n     * Recalculates formulas in the topological sort order\n     */\n    recomputeFormulas(cycled, sorted) {\n        cycled.forEach((vertex) => {\n            if (vertex instanceof FormulaCellVertex) {\n                vertex.setCellValue(new CellError(ErrorType.CYCLE));\n            }\n        });\n        sorted.forEach((vertex) => {\n            if (vertex instanceof FormulaCellVertex) {\n                const address = vertex.getAddress(this.dependencyGraph.lazilyTransformingAstService);\n                const formula = vertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\n                const newCellValue = this.evaluateAstToCellValue(formula, address);\n                vertex.setCellValue(newCellValue);\n                this.columnSearch.add(newCellValue, address);\n            }\n            else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n                const address = vertex.getAddress();\n                const formula = vertex.getFormula();\n                const newCellValue = this.evaluateAstToRangeValue(formula, address);\n                if (newCellValue instanceof SimpleRangeValue) {\n                    const newCellMatrix = new Matrix(newCellValue.rawNumbers());\n                    vertex.setCellValue(newCellMatrix);\n                    this.columnSearch.add(newCellMatrix, address);\n                }\n                else {\n                    vertex.setErrorValue(newCellValue);\n                    this.columnSearch.add(newCellValue, address);\n                }\n            }\n            else if (vertex instanceof RangeVertex) {\n                vertex.clearCache();\n            }\n        });\n    }\n    evaluateAstToCellValue(ast, formulaAddress) {\n        const interpreterValue = this.interpreter.evaluateAst(ast, formulaAddress);\n        if (interpreterValue instanceof SimpleRangeValue) {\n            return interpreterValue;\n        }\n        else if (typeof interpreterValue === 'number') {\n            if (isNumberOverflow(interpreterValue)) {\n                return new CellError(ErrorType.NUM);\n            }\n            else {\n                return fixNegativeZero(interpreterValue);\n            }\n        }\n        else {\n            return interpreterValue;\n        }\n    }\n    evaluateAstToRangeValue(ast, formulaAddress) {\n        const interpreterValue = this.interpreter.evaluateAst(ast, formulaAddress);\n        if (interpreterValue instanceof CellError) {\n            return interpreterValue;\n        }\n        else if (interpreterValue instanceof SimpleRangeValue && interpreterValue.hasOnlyNumbers()) {\n            return interpreterValue;\n        }\n        else {\n            return new CellError(ErrorType.VALUE);\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport GPU from 'gpu.js';\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\nimport { Matrix, NotComputedMatrix } from '../Matrix';\n// noinspection TypeScriptPreferShortImport\nimport { AstNodeType } from '../parser/Ast';\nimport { ArithmeticHelper, divide, multiply, percent, power, unaryminus } from './ArithmeticHelper';\nimport { CriterionBuilder } from './Criterion';\nimport { SimpleRangeValue } from './InterpreterValue';\nimport { concatenate } from './text';\nexport class Interpreter {\n    constructor(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralsHelper, functionRegistry, namedExpressions) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.config = config;\n        this.stats = stats;\n        this.dateHelper = dateHelper;\n        this.numberLiteralsHelper = numberLiteralsHelper;\n        this.functionRegistry = functionRegistry;\n        this.namedExpressions = namedExpressions;\n        this.functionRegistry.initializePlugins(this);\n        this.arithmeticHelper = new ArithmeticHelper(config, dateHelper, numberLiteralsHelper);\n        this.criterionBuilder = new CriterionBuilder(config);\n    }\n    /**\n     * Calculates cell value from formula abstract syntax tree\n     *\n     * @param formula - abstract syntax tree of formula\n     * @param formulaAddress - address of the cell in which formula is located\n     */\n    evaluateAst(ast, formulaAddress) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        switch (ast.type) {\n            case AstNodeType.EMPTY: {\n                throw new Error('Empty argument should not be evaluated.');\n            }\n            case AstNodeType.CELL_REFERENCE: {\n                const address = ast.reference.toSimpleCellAddress(formulaAddress);\n                if (invalidSimpleCellAddress(address)) {\n                    return new CellError(ErrorType.REF);\n                }\n                return this.dependencyGraph.getCellValue(address);\n            }\n            case AstNodeType.NUMBER:\n            case AstNodeType.STRING: {\n                return ast.value;\n            }\n            case AstNodeType.CONCATENATE_OP: {\n                const left = this.evaluateAst(ast.left, formulaAddress);\n                const right = this.evaluateAst(ast.right, formulaAddress);\n                return concatenate([left, right]);\n            }\n            case AstNodeType.EQUALS_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_a = this.passErrors(leftResult, rightResult)) !== null && _a !== void 0 ? _a : this.arithmeticHelper.compare(leftResult, rightResult) === 0;\n            }\n            case AstNodeType.NOT_EQUAL_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_b = this.passErrors(leftResult, rightResult)) !== null && _b !== void 0 ? _b : this.arithmeticHelper.compare(leftResult, rightResult) !== 0;\n            }\n            case AstNodeType.GREATER_THAN_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_c = this.passErrors(leftResult, rightResult)) !== null && _c !== void 0 ? _c : this.arithmeticHelper.compare(leftResult, rightResult) > 0;\n            }\n            case AstNodeType.LESS_THAN_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_d = this.passErrors(leftResult, rightResult)) !== null && _d !== void 0 ? _d : this.arithmeticHelper.compare(leftResult, rightResult) < 0;\n            }\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_e = this.passErrors(leftResult, rightResult)) !== null && _e !== void 0 ? _e : this.arithmeticHelper.compare(leftResult, rightResult) >= 0;\n            }\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_f = this.passErrors(leftResult, rightResult)) !== null && _f !== void 0 ? _f : this.arithmeticHelper.compare(leftResult, rightResult) <= 0;\n            }\n            case AstNodeType.PLUS_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_g = this.passErrors(leftResult, rightResult)) !== null && _g !== void 0 ? _g : this.arithmeticHelper.add(this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.MINUS_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_h = this.passErrors(leftResult, rightResult)) !== null && _h !== void 0 ? _h : this.arithmeticHelper.subtract(this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.TIMES_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_j = this.passErrors(leftResult, rightResult)) !== null && _j !== void 0 ? _j : multiply(this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.POWER_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_k = this.passErrors(leftResult, rightResult)) !== null && _k !== void 0 ? _k : power(this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.DIV_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_l = this.passErrors(leftResult, rightResult)) !== null && _l !== void 0 ? _l : divide(this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.PLUS_UNARY_OP: {\n                const result = this.evaluateAst(ast.value, formulaAddress);\n                if (result instanceof SimpleRangeValue) {\n                    return new CellError(ErrorType.VALUE);\n                }\n                else {\n                    return result;\n                }\n            }\n            case AstNodeType.MINUS_UNARY_OP: {\n                const result = this.evaluateAst(ast.value, formulaAddress);\n                if (result instanceof SimpleRangeValue) {\n                    return new CellError(ErrorType.VALUE);\n                }\n                else {\n                    return unaryminus(this.arithmeticHelper.coerceScalarToNumberOrError(result));\n                }\n            }\n            case AstNodeType.PERCENT_OP: {\n                const result = this.evaluateAst(ast.value, formulaAddress);\n                if (result instanceof SimpleRangeValue) {\n                    return new CellError(ErrorType.VALUE);\n                }\n                else {\n                    return percent(this.arithmeticHelper.coerceScalarToNumberOrError(result));\n                }\n            }\n            case AstNodeType.FUNCTION_CALL: {\n                const pluginEntry = this.functionRegistry.getFunction(ast.procedureName);\n                if (pluginEntry && this.config.translationPackage.isFunctionTranslated(ast.procedureName)) {\n                    const [pluginFunction, pluginInstance] = pluginEntry;\n                    return pluginInstance[pluginFunction](ast, formulaAddress);\n                }\n                else {\n                    return new CellError(ErrorType.NAME);\n                }\n            }\n            case AstNodeType.NAMED_EXPRESSION: {\n                const namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, formulaAddress.sheet);\n                if (namedExpression) {\n                    return this.dependencyGraph.getCellValue(namedExpression.address);\n                }\n                else {\n                    return new CellError(ErrorType.NAME);\n                }\n            }\n            case AstNodeType.CELL_RANGE: {\n                if (!this.rangeSpansOneSheet(ast)) {\n                    return new CellError(ErrorType.REF);\n                }\n                const range = AbsoluteCellRange.fromCellRange(ast, formulaAddress);\n                const matrixVertex = this.dependencyGraph.getMatrix(range);\n                if (matrixVertex) {\n                    const matrix = matrixVertex.matrix;\n                    if (matrix instanceof NotComputedMatrix) {\n                        throw new Error('Matrix should be already computed');\n                    }\n                    else if (matrix instanceof CellError) {\n                        return matrix;\n                    }\n                    else if (matrix instanceof Matrix) {\n                        return SimpleRangeValue.onlyNumbersDataWithRange(matrix.raw(), matrix.size, range);\n                    }\n                    else {\n                        throw new Error('Unknown matrix');\n                    }\n                }\n                else {\n                    return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n                }\n            }\n            case AstNodeType.COLUMN_RANGE: {\n                if (!this.rangeSpansOneSheet(ast)) {\n                    return new CellError(ErrorType.REF);\n                }\n                const range = AbsoluteColumnRange.fromColumnRange(ast, formulaAddress);\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n            }\n            case AstNodeType.ROW_RANGE: {\n                if (!this.rangeSpansOneSheet(ast)) {\n                    return new CellError(ErrorType.REF);\n                }\n                const range = AbsoluteRowRange.fromRowRange(ast, formulaAddress);\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n            }\n            case AstNodeType.PARENTHESIS: {\n                return this.evaluateAst(ast.expression, formulaAddress);\n            }\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\n            case AstNodeType.ERROR: {\n                return ast.error;\n            }\n        }\n    }\n    getGpuInstance() {\n        if (!this.gpu) {\n            const GPUConstructor = GPU.GPU || GPU;\n            this.gpu = new GPUConstructor({ mode: this.config.gpuMode });\n        }\n        return this.gpu;\n    }\n    destroy() {\n        if (this.gpu) {\n            this.gpu.destroy();\n        }\n    }\n    rangeSpansOneSheet(ast) {\n        return ast.start.sheet === ast.end.sheet;\n    }\n    passErrors(left, right) {\n        if (left instanceof CellError) {\n            return left;\n        }\n        else if (left instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        else if (right instanceof CellError) {\n            return right;\n        }\n        else if (right instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        else {\n            return undefined;\n        }\n    }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__265__;","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { EmptyValue } from '../Cell';\nexport var CriterionType;\n(function (CriterionType) {\n    CriterionType[\"GREATER_THAN\"] = \"GREATER_THAN\";\n    CriterionType[\"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\n    CriterionType[\"LESS_THAN\"] = \"LESS_THAN\";\n    CriterionType[\"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\n    CriterionType[\"NOT_EQUAL\"] = \"NOT_EQUAL\";\n    CriterionType[\"EQUAL\"] = \"EQUAL\";\n})(CriterionType || (CriterionType = {}));\nexport const buildCriterion = (operator, value) => ({ operator, value });\nexport class CriterionBuilder {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.trueString = (_b = (_a = config.translationPackage.getMaybeFunctionTranslation('TRUE')) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : 'true';\n        this.falseString = (_d = (_c = config.translationPackage.getMaybeFunctionTranslation('FALSE')) === null || _c === void 0 ? void 0 : _c.toLowerCase()) !== null && _d !== void 0 ? _d : 'false';\n    }\n    fromCellValue(raw, arithmeticHelper) {\n        if (typeof raw !== 'string' && typeof raw !== 'boolean' && typeof raw !== 'number') {\n            return undefined;\n        }\n        const criterion = this.parseCriterion(raw, arithmeticHelper);\n        if (criterion === undefined) {\n            return undefined;\n        }\n        return { raw, lambda: buildCriterionLambda(criterion, arithmeticHelper) };\n    }\n    parseCriterion(criterion, arithmeticHelper) {\n        if (typeof criterion === 'number' || typeof criterion === 'boolean') {\n            return buildCriterion(CriterionType.EQUAL, criterion);\n        }\n        else if (typeof criterion === 'string') {\n            const regexResult = ANY_CRITERION_REGEX.exec(criterion);\n            let criterionValue;\n            let criterionType;\n            if (regexResult) {\n                criterionType = StrToCriterionType(regexResult[1]);\n                criterionValue = regexResult[2];\n            }\n            else {\n                criterionType = CriterionType.EQUAL;\n                criterionValue = criterion;\n            }\n            const value = arithmeticHelper.coerceToMaybeNumber(criterionValue);\n            const boolvalue = criterionValue.toLowerCase() === this.trueString ? true : criterionValue.toLowerCase() === this.falseString ? false : undefined;\n            if (criterionType === undefined) {\n                return undefined;\n            }\n            if (criterionValue === '') {\n                return buildCriterion(criterionType, null);\n            }\n            else if (value === undefined) {\n                if (criterionType === CriterionType.EQUAL || criterionType === CriterionType.NOT_EQUAL) {\n                    return buildCriterion(criterionType, boolvalue !== null && boolvalue !== void 0 ? boolvalue : criterionValue);\n                }\n            }\n            else {\n                return buildCriterion(criterionType, value);\n            }\n        }\n        return undefined;\n    }\n}\nconst ANY_CRITERION_REGEX = /([<>=]+)(.*)/;\nfunction StrToCriterionType(str) {\n    switch (str) {\n        case '>': return CriterionType.GREATER_THAN;\n        case '>=': return CriterionType.GREATER_THAN_OR_EQUAL;\n        case '<': return CriterionType.LESS_THAN;\n        case '<=': return CriterionType.LESS_THAN_OR_EQUAL;\n        case '<>': return CriterionType.NOT_EQUAL;\n        case '=': return CriterionType.EQUAL;\n        default: return undefined;\n    }\n}\nexport const buildCriterionLambda = (criterion, arithmeticHelper) => {\n    switch (criterion.operator) {\n        case CriterionType.GREATER_THAN: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) > 0);\n            }\n            else {\n                return (_cellValue) => false;\n            }\n        }\n        case CriterionType.GREATER_THAN_OR_EQUAL: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) >= 0);\n            }\n            else {\n                return (_cellValue) => false;\n            }\n        }\n        case CriterionType.LESS_THAN: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) < 0);\n            }\n            else {\n                return (_cellValue) => false;\n            }\n        }\n        case CriterionType.LESS_THAN_OR_EQUAL: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) <= 0);\n            }\n            else {\n                return (_cellValue) => false;\n            }\n        }\n        case CriterionType.EQUAL: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => {\n                    if (typeof cellValue === 'number') {\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) === 0;\n                    }\n                    else if (typeof cellValue === 'string') {\n                        if (cellValue === '') {\n                            return false;\n                        }\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\n                        if (val === undefined) {\n                            return false;\n                        }\n                        return arithmeticHelper.floatCmp(val, criterion.value) === 0;\n                    }\n                    else {\n                        return false;\n                    }\n                };\n            }\n            else if (typeof criterion.value === 'string') {\n                return arithmeticHelper.eqMatcherFunction(criterion.value);\n            }\n            else if (typeof criterion.value === 'boolean') {\n                return (cellValue) => (typeof cellValue === 'boolean' && cellValue === criterion.value);\n            }\n            else {\n                return (cellValue) => (cellValue === EmptyValue);\n            }\n        }\n        case CriterionType.NOT_EQUAL: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => {\n                    if (typeof cellValue === 'number') {\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) !== 0;\n                    }\n                    else if (typeof cellValue === 'string') {\n                        if (cellValue === '') {\n                            return true;\n                        }\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\n                        if (val === undefined) {\n                            return true;\n                        }\n                        return arithmeticHelper.floatCmp(val, criterion.value) !== 0;\n                    }\n                    else {\n                        return true;\n                    }\n                };\n            }\n            else if (typeof criterion.value === 'string') {\n                return arithmeticHelper.neqMatcherFunction(criterion.value);\n            }\n            else if (typeof criterion.value === 'boolean') {\n                return (cellValue) => (typeof cellValue !== 'boolean' || cellValue !== criterion.value);\n            }\n            else {\n                return (cellValue) => (cellValue !== EmptyValue);\n            }\n        }\n    }\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, EmptyValue, ErrorType } from '../Cell';\nimport { SimpleRangeValue } from './InterpreterValue';\n/**\n * Concatenates two strings\n *\n * Implementation of concatenating strings which is used in interpreter.\n *\n * Errors are propagated.\n *\n * @param args - list of cell values to concatenate\n */\nexport function concatenate(args) {\n    return args.reduce((acc, arg) => {\n        if (acc instanceof CellError) {\n            return acc;\n        }\n        else if (arg instanceof CellError) {\n            return arg;\n        }\n        else if (arg === EmptyValue) {\n            return acc;\n        }\n        else if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        else {\n            return acc.concat(arg.toString());\n        }\n    }, '');\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport class NumberLiteralHelper {\n    constructor(config) {\n        this.config = config;\n        const thousandSeparator = this.config.thousandSeparator === '.' ? `\\\\${this.config.thousandSeparator}` : this.config.thousandSeparator;\n        const decimalSeparator = this.config.decimalSeparator === '.' ? `\\\\${this.config.decimalSeparator}` : this.config.decimalSeparator;\n        this.numberPattern = new RegExp(`^([\\+-]?((${decimalSeparator}\\\\d+)|(\\\\d+(${thousandSeparator}\\\\d{3,})*(${decimalSeparator}\\\\d+)?)))$`);\n        this.allThousandSeparatorsRegex = new RegExp(`${thousandSeparator}`, 'g');\n    }\n    isNumber(input) {\n        const match = this.numberPattern.test(input);\n        return match;\n    }\n    numericStringToNumber(input) {\n        const normalized = input\n            .replace(this.allThousandSeparatorsRegex, '')\n            .replace(this.config.decimalSeparator, '.');\n        return Number(normalized);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { DetailedCellError } from './CellValue';\nimport { FormulaCellVertex, MatrixVertex, ParsingErrorVertex } from './DependencyGraph';\nimport { buildLexerConfig, Unparser } from './parser';\nexport class Serialization {\n    constructor(dependencyGraph, unparser, config, exporter) {\n        this.dependencyGraph = dependencyGraph;\n        this.unparser = unparser;\n        this.config = config;\n        this.exporter = exporter;\n    }\n    getCellFormula(address) {\n        const formulaVertex = this.dependencyGraph.getCell(address);\n        if (formulaVertex instanceof FormulaCellVertex) {\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\n            return this.unparser.unparse(formula, address);\n        }\n        else if (formulaVertex instanceof MatrixVertex) {\n            const formula = formulaVertex.getFormula();\n            if (formula) {\n                return '{' + this.unparser.unparse(formula, formulaVertex.getAddress()) + '}';\n            }\n        }\n        else if (formulaVertex instanceof ParsingErrorVertex) {\n            return formulaVertex.getFormula();\n        }\n        return undefined;\n    }\n    getCellSerialized(address) {\n        const formula = this.getCellFormula(address);\n        if (formula !== undefined) {\n            return formula;\n        }\n        else {\n            const value = this.getCellValue(address);\n            if (value instanceof DetailedCellError) {\n                return this.config.translationPackage.getErrorTranslation(value.type);\n            }\n            else {\n                return value;\n            }\n        }\n    }\n    getCellValue(address) {\n        return this.exporter.exportValue(this.dependencyGraph.getScalarValue(address));\n    }\n    getSheetValues(sheet) {\n        return this.genericSheetGetter(sheet, (arg) => this.getCellValue(arg));\n    }\n    getSheetFormulas(sheet) {\n        return this.genericSheetGetter(sheet, (arg) => this.getCellFormula(arg));\n    }\n    genericSheetGetter(sheet, getter) {\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\n        const arr = new Array(sheetHeight);\n        for (let i = 0; i < sheetHeight; i++) {\n            arr[i] = new Array(sheetWidth);\n            for (let j = 0; j < sheetWidth; j++) {\n                const address = simpleCellAddress(sheet, j, i);\n                arr[i][j] = getter(address);\n            }\n            for (let j = sheetWidth - 1; j >= 0; j--) {\n                if (arr[i][j] === null || arr[i][j] === undefined) {\n                    arr[i].pop();\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        for (let i = sheetHeight - 1; i >= 0; i--) {\n            if (arr[i].length === 0) {\n                arr.pop();\n            }\n            else {\n                break;\n            }\n        }\n        return arr;\n    }\n    genericAllSheetsGetter(sheetGetter) {\n        const result = {};\n        for (const sheetName of this.dependencyGraph.sheetMapping.displayNames()) {\n            const sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\n            result[sheetName] = sheetGetter(sheetId);\n        }\n        return result;\n    }\n    getSheetSerialized(sheet) {\n        return this.genericSheetGetter(sheet, (arg) => this.getCellSerialized(arg));\n    }\n    getAllSheetsValues() {\n        return this.genericAllSheetsGetter((arg) => this.getSheetValues(arg));\n    }\n    getAllSheetsFormulas() {\n        return this.genericAllSheetsGetter((arg) => this.getSheetFormulas(arg));\n    }\n    getAllSheetsSerialized() {\n        return this.genericAllSheetsGetter((arg) => this.getSheetSerialized(arg));\n    }\n    withNewConfig(newConfig, namedExpressions) {\n        const newUnparser = new Unparser(newConfig, buildLexerConfig(newConfig), this.dependencyGraph.sheetMapping.fetchDisplayName, namedExpressions);\n        return new Serialization(this.dependencyGraph, newUnparser, newConfig, this.exporter);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { FunctionPluginValidationError, ProtectedFunctionError } from '../errors';\nimport { HyperFormula } from '../HyperFormula';\nimport { VersionPlugin } from './plugin/VersionPlugin';\nexport class FunctionRegistry {\n    constructor(config) {\n        this.config = config;\n        this.functions = new Map();\n        this.volatileFunctions = new Set();\n        this.structuralChangeFunctions = new Set();\n        this.functionsWhichDoesNotNeedArgumentsToBeComputed = new Set();\n        this.doesFunctionNeedArgumentToBeComputed = (functionId) => {\n            return this.functionsWhichDoesNotNeedArgumentsToBeComputed.has(functionId);\n        };\n        this.isFunctionVolatile = (functionId) => {\n            return this.volatileFunctions.has(functionId);\n        };\n        this.isFunctionDependentOnSheetStructureChange = (functionId) => {\n            return this.structuralChangeFunctions.has(functionId);\n        };\n        if (config.functionPlugins.length > 0) {\n            this.instancePlugins = new Map();\n            for (const plugin of config.functionPlugins) {\n                FunctionRegistry.loadPluginFunctions(plugin, this.instancePlugins);\n            }\n        }\n        else {\n            this.instancePlugins = new Map(FunctionRegistry.plugins);\n        }\n        for (const [functionId, plugin] of FunctionRegistry.protectedFunctions()) {\n            FunctionRegistry.loadFunctionUnprotected(plugin, functionId, this.instancePlugins);\n        }\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\n            this.categorizeFunction(functionId, plugin.implementedFunctions[functionId]);\n        }\n    }\n    static registerFunctionPlugin(plugin, translations) {\n        this.loadPluginFunctions(plugin, this.plugins);\n        if (translations !== undefined) {\n            this.loadTranslations(translations);\n        }\n    }\n    static registerFunction(functionId, plugin, translations) {\n        const entry = plugin.implementedFunctions[functionId];\n        if (entry !== undefined) {\n            this.loadPluginFunction(plugin, functionId, this.plugins);\n        }\n        else {\n            throw FunctionPluginValidationError.functionNotDeclaredInPlugin(functionId, plugin.name);\n        }\n        if (translations !== undefined) {\n            this.loadTranslations(translations);\n        }\n    }\n    static unregisterFunction(functionId) {\n        if (this.functionIsProtected(functionId)) {\n            throw ProtectedFunctionError.cannotUnregisterFunctionWithId(functionId);\n        }\n        this.plugins.delete(functionId);\n    }\n    static unregisterFunctionPlugin(plugin) {\n        for (const protectedPlugin of this.protectedPlugins()) {\n            if (protectedPlugin === plugin) {\n                throw ProtectedFunctionError.cannotUnregisterProtectedPlugin();\n            }\n        }\n        for (const [functionId, registeredPlugin] of this.plugins.entries()) {\n            if (registeredPlugin === plugin) {\n                this.plugins.delete(functionId);\n            }\n        }\n    }\n    static unregisterAll() {\n        this.plugins.clear();\n    }\n    static getRegisteredFunctionIds() {\n        return [\n            ...Array.from(this.plugins.keys()),\n            ...Array.from(this._protectedPlugins.keys())\n        ];\n    }\n    static getPlugins() {\n        return Array.from(new Set(this.plugins.values()).values());\n    }\n    static getFunctionPlugin(functionId) {\n        if (this.functionIsProtected(functionId)) {\n            return undefined;\n        }\n        else {\n            return this.plugins.get(functionId);\n        }\n    }\n    static loadTranslations(translations) {\n        const registeredLanguages = new Set(HyperFormula.getRegisteredLanguagesCodes());\n        Object.keys(translations).forEach(code => {\n            if (registeredLanguages.has(code)) {\n                HyperFormula.getLanguage(code).extendFunctions(translations[code]);\n            }\n        });\n    }\n    static loadPluginFunctions(plugin, registry) {\n        Object.keys(plugin.implementedFunctions).forEach((functionName) => {\n            this.loadPluginFunction(plugin, functionName, registry);\n        });\n    }\n    static loadPluginFunction(plugin, functionId, registry) {\n        if (this.functionIsProtected(functionId)) {\n            throw ProtectedFunctionError.cannotRegisterFunctionWithId(functionId);\n        }\n        else {\n            this.loadFunctionUnprotected(plugin, functionId, registry);\n        }\n    }\n    static loadFunctionUnprotected(plugin, functionId, registry) {\n        const methodName = plugin.implementedFunctions[functionId].method;\n        if (Object.prototype.hasOwnProperty.call(plugin.prototype, methodName)) {\n            registry.set(functionId, plugin);\n        }\n        else {\n            throw FunctionPluginValidationError.functionMethodNotFound(methodName, plugin.name);\n        }\n    }\n    static functionIsProtected(functionId) {\n        return this._protectedPlugins.has(functionId);\n    }\n    static *protectedFunctions() {\n        for (const [functionId, plugin] of this._protectedPlugins) {\n            if (plugin !== undefined) {\n                yield [functionId, plugin];\n            }\n        }\n    }\n    static *protectedPlugins() {\n        for (const [, plugin] of this._protectedPlugins) {\n            if (plugin !== undefined) {\n                yield plugin;\n            }\n        }\n    }\n    initializePlugins(interpreter) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const instances = [];\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\n            let pluginInstance = instances.find(pluginInstance => pluginInstance instanceof plugin);\n            if (pluginInstance === undefined) {\n                pluginInstance = new plugin(interpreter);\n                instances.push(pluginInstance);\n            }\n            const methodName = plugin.implementedFunctions[functionId].method;\n            this.functions.set(functionId, [methodName, pluginInstance]);\n        }\n    }\n    getFunctionPlugin(functionId) {\n        if (FunctionRegistry.functionIsProtected(functionId)) {\n            return undefined;\n        }\n        return this.instancePlugins.get(functionId);\n    }\n    getFunction(functionId) {\n        return this.functions.get(functionId);\n    }\n    getPlugins() {\n        const plugins = new Set();\n        for (const [functionId, plugin] of this.instancePlugins) {\n            if (!FunctionRegistry.functionIsProtected(functionId)) {\n                plugins.add(plugin);\n            }\n        }\n        return Array.from(plugins);\n    }\n    getRegisteredFunctionIds() {\n        return Array.from(this.functions.keys());\n    }\n    categorizeFunction(functionId, functionMetadata) {\n        if (functionMetadata.isVolatile) {\n            this.volatileFunctions.add(functionId);\n        }\n        if (functionMetadata.doesNotNeedArgumentsToBeComputed) {\n            this.functionsWhichDoesNotNeedArgumentsToBeComputed.add(functionId);\n        }\n        if (functionMetadata.isDependentOnSheetStructureChange) {\n            this.structuralChangeFunctions.add(functionId);\n        }\n    }\n}\nFunctionRegistry.plugins = new Map();\nFunctionRegistry._protectedPlugins = new Map([\n    ['VERSION', VersionPlugin],\n    ['OFFSET', undefined],\n]);\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { FunctionPlugin } from './FunctionPlugin';\nimport { HyperFormula } from '../../HyperFormula';\nconst LICENSE_STATUS_MAP = new Map([\n    ['agpl-v3', 1],\n    ['non-commercial-and-evaluation', 2],\n    [\"missing\" /* MISSING */, 3],\n    [\"invalid\" /* INVALID */, 4],\n    [\"expired\" /* EXPIRED */, 5],\n]);\nexport class VersionPlugin extends FunctionPlugin {\n    version() {\n        const { licenseKeyValidityState: validityState, licenseKey, } = this.config;\n        let status;\n        if (LICENSE_STATUS_MAP.has(licenseKey)) {\n            status = LICENSE_STATUS_MAP.get(licenseKey);\n        }\n        else if (LICENSE_STATUS_MAP.has(validityState)) {\n            status = LICENSE_STATUS_MAP.get(validityState);\n        }\n        else if (!status && validityState === \"valid\" /* VALID */) {\n            status = licenseKey.slice(-5);\n        }\n        return `HyperFormula v${HyperFormula.version}, ${status}`;\n    }\n}\nVersionPlugin.implementedFunctions = {\n    'VERSION': {\n        method: 'version',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { coerceScalarToString } from '../ArithmeticHelper';\nimport { SimpleRangeValue } from '../InterpreterValue';\n/**\n * Abstract class representing interpreter function plugin.\n * Plugin may contain multiple functions. Each function should be of type {@link PluginFunctionType} and needs to be\n * included in {@link implementedFunctions}\n */\nexport class FunctionPlugin {\n    constructor(interpreter) {\n        this.interpreter = interpreter;\n        this.dependencyGraph = interpreter.dependencyGraph;\n        this.columnSearch = interpreter.columnSearch;\n        this.config = interpreter.config;\n    }\n    evaluateAst(ast, formulaAddress) {\n        return this.interpreter.evaluateAst(ast, formulaAddress);\n    }\n    *iterateOverScalarValues(asts, formulaAddress) {\n        for (const argAst of asts) {\n            const value = this.evaluateAst(argAst, formulaAddress);\n            if (value instanceof SimpleRangeValue) {\n                for (const scalarValue of value.valuesFromTopLeftCorner()) {\n                    yield scalarValue;\n                }\n            }\n            else {\n                yield value;\n            }\n        }\n    }\n    computeListOfValuesInRange(range) {\n        const values = [];\n        for (const cellFromRange of range.addresses(this.dependencyGraph)) {\n            const value = this.dependencyGraph.getScalarValue(cellFromRange);\n            values.push(value);\n        }\n        return values;\n    }\n    templateWithOneCoercedToNumberArgument(ast, formulaAddress, fn) {\n        return this.templateWithOneArgumentCoercion(ast, formulaAddress, (arg) => this.coerceScalarToNumberOrError(arg), fn);\n    }\n    templateWithOneCoercedToStringArgument(ast, formulaAddress, fn) {\n        return this.templateWithOneArgumentCoercion(ast, formulaAddress, coerceScalarToString, fn);\n    }\n    validateTwoNumericArguments(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const left = this.evaluateAst(ast.args[0], formulaAddress);\n        if (left instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const coercedLeft = this.coerceScalarToNumberOrError(left);\n        if (coercedLeft instanceof CellError) {\n            return coercedLeft;\n        }\n        const right = this.evaluateAst(ast.args[1], formulaAddress);\n        if (right instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const coercedRight = this.coerceScalarToNumberOrError(right);\n        if (coercedRight instanceof CellError) {\n            return coercedRight;\n        }\n        return [coercedLeft, coercedRight];\n    }\n    getNumericArgument(ast, formulaAddress, position, min, max) {\n        if (position > ast.args.length - 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args[position].type === AstNodeType.EMPTY) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[position], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const value = this.coerceScalarToNumberOrError(arg);\n        if (typeof value === 'number' && min !== undefined && max !== undefined && (value < min || value > max)) {\n            return new CellError(ErrorType.NUM);\n        }\n        return value;\n    }\n    coerceScalarToNumberOrError(arg) {\n        return this.interpreter.arithmeticHelper.coerceScalarToNumberOrError(arg);\n    }\n    templateWithOneArgumentCoercion(ast, formulaAddress, coerceFunction, fn) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const coercedArg = coerceFunction(arg);\n        if (coercedArg instanceof CellError) {\n            return coercedArg;\n        }\n        else {\n            return fn(coercedArg);\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\n// import\nconst dictionary = {\n    errors: {\n        CYCLE: '#CYCLE!',\n        DIV_BY_ZERO: '#DIV/0!',\n        ERROR: '#ERROR!',\n        NA: '#N/A',\n        NAME: '#NAME?',\n        NUM: '#NUM!',\n        REF: '#REF!',\n        VALUE: '#VALUE!',\n    },\n    functions: {\n        ABS: 'ABS',\n        ACOS: 'ACOS',\n        AND: 'AND',\n        ASIN: 'ASIN',\n        ATAN: 'ATAN',\n        ATAN2: 'ATAN2',\n        AVERAGE: 'AVERAGE',\n        AVERAGEA: 'AVERAGEA',\n        AVERAGEIF: 'AVERAGEIF',\n        BASE: 'BASE',\n        BIN2DEC: 'BIN2DEC',\n        BIN2HEX: 'BIN2HEX',\n        BIN2OCT: 'BIN2OCT',\n        BITAND: 'BITAND',\n        BITLSHIFT: 'BITLSHIFT',\n        BITOR: 'BITOR',\n        BITRSHIFT: 'BITRSHIFT',\n        BITXOR: 'BITXOR',\n        CEILING: 'CEILING',\n        CHAR: 'CHAR',\n        CHOOSE: 'CHOOSE',\n        CODE: 'CODE',\n        COLUMNS: 'COLUMNS',\n        CONCATENATE: 'CONCATENATE',\n        CORREL: 'CORREL',\n        COS: 'COS',\n        COT: 'COT',\n        COUNT: 'COUNT',\n        COUNTA: 'COUNTA',\n        COUNTBLANK: 'COUNTBLANK',\n        COUNTIF: 'COUNTIF',\n        COUNTIFS: 'COUNTIFS',\n        COUNTUNIQUE: 'COUNTUNIQUE',\n        DATE: 'DATE',\n        DAY: 'DAY',\n        DAYS: 'DAYS',\n        DEC2BIN: 'DEC2BIN',\n        DEC2HEX: 'DEC2HEX',\n        DEC2OCT: 'DEC2OCT',\n        DECIMAL: 'DECIMAL',\n        DEGREES: 'DEGREES',\n        DELTA: 'DELTA',\n        E: 'E',\n        EOMONTH: 'EOMONTH',\n        ERF: 'ERF',\n        ERFC: 'ERFC',\n        EVEN: 'EVEN',\n        EXP: 'EXP',\n        FALSE: 'FALSE',\n        IF: 'IF',\n        IFERROR: 'IFERROR',\n        IFNA: 'IFNA',\n        INDEX: 'INDEX',\n        INT: 'INT',\n        ISBLANK: 'ISBLANK',\n        ISERROR: 'ISERROR',\n        ISEVEN: 'ISEVEN',\n        ISLOGICAL: 'ISLOGICAL',\n        ISNONTEXT: 'ISNONTEXT',\n        ISNUMBER: 'ISNUMBER',\n        ISODD: 'ISODD',\n        ISTEXT: 'ISTEXT',\n        LN: 'LN',\n        LOG: 'LOG',\n        LOG10: 'LOG10',\n        MATCH: 'MATCH',\n        MAX: 'MAX',\n        MAXA: 'MAXA',\n        MAXPOOL: 'MAXPOOL',\n        MEDIAN: 'MEDIAN',\n        MEDIANPOOL: 'MEDIANPOOL',\n        MIN: 'MIN',\n        MINA: 'MINA',\n        MMULT: 'MMULT',\n        MOD: 'MOD',\n        MONTH: 'MONTH',\n        NOT: 'NOT',\n        ODD: 'ODD',\n        OFFSET: 'OFFSET',\n        OR: 'OR',\n        PI: 'PI',\n        POWER: 'POWER',\n        RADIANS: 'RADIANS',\n        RAND: 'RAND',\n        ROUND: 'ROUND',\n        ROUNDDOWN: 'ROUNDDOWN',\n        ROUNDUP: 'ROUNDUP',\n        ROWS: 'ROWS',\n        SIN: 'SIN',\n        SPLIT: 'SPLIT',\n        SQRT: 'SQRT',\n        SUM: 'SUM',\n        SUMIF: 'SUMIF',\n        SUMIFS: 'SUMIFS',\n        SUMPRODUCT: 'SUMPRODUCT',\n        SUMSQ: 'SUMSQ',\n        SWITCH: 'SWITCH',\n        TAN: 'TAN',\n        TEXT: 'TEXT',\n        TRANSPOSE: 'TRANSPOSE',\n        TRUE: 'TRUE',\n        TRUNC: 'TRUNC',\n        VLOOKUP: 'VLOOKUP',\n        XOR: 'XOR',\n        YEAR: 'YEAR',\n    },\n    langCode: 'enGB',\n    ui: {\n        NEW_SHEET_PREFIX: 'Sheet',\n    },\n};\nexport default dictionary;\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport { SumifPlugin } from './SumifPlugin';\nexport { TextPlugin } from './TextPlugin';\nexport { NumericAggregationPlugin } from './NumericAggregationPlugin';\nexport { MedianPlugin } from './MedianPlugin';\nexport { DatePlugin } from './DatePlugin';\nexport { BooleanPlugin } from './BooleanPlugin';\nexport { InformationPlugin } from './InformationPlugin';\nexport { TrigonometryPlugin } from './TrigonometryPlugin';\nexport { CountUniquePlugin } from './CountUniquePlugin';\nexport { SumprodPlugin } from './SumprodPlugin';\nexport { MatrixPlugin } from './MatrixPlugin';\nexport { ExpPlugin } from './ExpPlugin';\nexport { AbsPlugin } from './AbsPlugin';\nexport { DegreesPlugin } from './DegreesPlugin';\nexport { RadiansPlugin } from './RadiansPlugin';\nexport { RandomPlugin } from './RandomPlugin';\nexport { VlookupPlugin } from './VlookupPlugin';\nexport { IsEvenPlugin } from './IsEvenPlugin';\nexport { IsOddPlugin } from './IsOddPlugin';\nexport { RoundingPlugin } from './RoundingPlugin';\nexport { RadixConversionPlugin } from './RadixConversionPlugin';\nexport { LogarithmPlugin } from './LogarithmPlugin';\nexport { BitwiseLogicOperationsPlugin } from './BitwiseLogicOperationsPlugin';\nexport { BitShiftPlugin } from './BitShiftPlugin';\nexport { PowerPlugin } from './PowerPlugin';\nexport { MathConstantsPlugin } from './MathConstantsPlugin';\nexport { SqrtPlugin } from './SqrtPlugin';\nexport { ModuloPlugin } from './ModuloPlugin';\nexport { DeltaPlugin } from './DeltaPlugin';\nexport { CharPlugin } from './CharPlugin';\nexport { CodePlugin } from './CodePlugin';\nexport { ErrorFunctionPlugin } from './ErrorFunctionPlugin';\nexport { CorrelPlugin } from './CorrelPlugin';\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { coerceToRange } from '../ArithmeticHelper';\nimport { Condition, CriterionFunctionCompute } from '../CriterionFunctionCompute';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\nclass AverageResult {\n    constructor(sum, count) {\n        this.sum = sum;\n        this.count = count;\n    }\n    static single(arg) {\n        return new AverageResult(arg, 1);\n    }\n    compose(other) {\n        return new AverageResult(this.sum + other.sum, this.count + other.count);\n    }\n    averageValue() {\n        if (this.count > 0) {\n            return this.sum / this.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nAverageResult.empty = new AverageResult(0, 0);\n/** Computes key for criterion function cache */\nfunction sumifCacheKey(conditions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const conditionsStrings = conditions.map((c) => `${c.conditionRange.range().sheet},${c.conditionRange.range().start.col},${c.conditionRange.range().start.row}`);\n    return ['SUMIF', ...conditionsStrings].join(',');\n}\nfunction averageifCacheKey(conditions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const conditionsStrings = conditions.map((c) => `${c.conditionRange.range().sheet},${c.conditionRange.range().start.col},${c.conditionRange.range().start.row}`);\n    return ['AVERAGEIF', ...conditionsStrings].join(',');\n}\nfunction countifsCacheKey(conditions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const conditionsStrings = conditions.map((c) => `${c.conditionRange.range().sheet},${c.conditionRange.range().start.col},${c.conditionRange.range().start.row}`);\n    return ['COUNTIFS', ...conditionsStrings].join(',');\n}\nexport class SumifPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to SUMIF(Range, Criterion, SumRange)\n     *\n     * Range is the range to which criterion is to be applied.\n     * Criterion is the criteria used to choose which cells will be included in sum.\n     * SumRange is the range on which adding will be performed.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    sumif(ast, formulaAddress) {\n        if (ast.args.length < 2 || ast.args.length > 3) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const conditionArgValue = this.evaluateAst(ast.args[0], formulaAddress);\n        if (conditionArgValue instanceof CellError) {\n            return conditionArgValue;\n        }\n        const conditionArg = coerceToRange(conditionArgValue);\n        const criterionValue = this.evaluateAst(ast.args[1], formulaAddress);\n        if (criterionValue instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        else if (criterionValue instanceof CellError) {\n            return criterionValue;\n        }\n        const criterion = this.interpreter.criterionBuilder.fromCellValue(criterionValue, this.interpreter.arithmeticHelper);\n        if (criterion === undefined) {\n            return new CellError(ErrorType.VALUE);\n        }\n        let valuesArg;\n        if (ast.args.length == 2) {\n            valuesArg = conditionArg;\n        }\n        else {\n            const valuesArgValue = this.evaluateAst(ast.args[2], formulaAddress);\n            if (valuesArgValue instanceof CellError) {\n                return valuesArgValue;\n            }\n            valuesArg = coerceToRange(valuesArgValue);\n        }\n        const result = new CriterionFunctionCompute(this.interpreter, sumifCacheKey, 0, (left, right) => this.interpreter.arithmeticHelper.nonstrictadd(left, right), (arg) => arg).compute(valuesArg, [new Condition(conditionArg, criterion)]);\n        return result;\n    }\n    sumifs(ast, formulaAddress) {\n        if (ast.args.length < 3 || ast.args.length % 2 === 0) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const valueArgValue = this.evaluateAst(ast.args[0], formulaAddress);\n        if (valueArgValue instanceof CellError) {\n            return valueArgValue;\n        }\n        const valuesArg = coerceToRange(valueArgValue);\n        const conditions = [];\n        for (let i = 1; i < ast.args.length; i += 2) {\n            const conditionArgValue = this.evaluateAst(ast.args[i], formulaAddress);\n            if (conditionArgValue instanceof CellError) {\n                return conditionArgValue;\n            }\n            const conditionArg = coerceToRange(conditionArgValue);\n            const criterionValue = this.evaluateAst(ast.args[i + 1], formulaAddress);\n            if (criterionValue instanceof SimpleRangeValue) {\n                return new CellError(ErrorType.VALUE);\n            }\n            else if (criterionValue instanceof CellError) {\n                return criterionValue;\n            }\n            const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(criterionValue, this.interpreter.arithmeticHelper);\n            if (criterionPackage === undefined) {\n                return new CellError(ErrorType.VALUE);\n            }\n            conditions.push(new Condition(conditionArg, criterionPackage));\n        }\n        const result = new CriterionFunctionCompute(this.interpreter, sumifCacheKey, 0, (left, right) => this.interpreter.arithmeticHelper.nonstrictadd(left, right), (arg) => arg).compute(valuesArg, conditions);\n        return result;\n    }\n    averageif(ast, formulaAddress) {\n        if (ast.args.length < 2 || ast.args.length > 3) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const conditionArgValue = this.evaluateAst(ast.args[0], formulaAddress);\n        if (conditionArgValue instanceof CellError) {\n            return conditionArgValue;\n        }\n        const conditionArg = coerceToRange(conditionArgValue);\n        const criterionValue = this.evaluateAst(ast.args[1], formulaAddress);\n        if (criterionValue instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        else if (criterionValue instanceof CellError) {\n            return criterionValue;\n        }\n        const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(criterionValue, this.interpreter.arithmeticHelper);\n        if (criterionPackage === undefined) {\n            return new CellError(ErrorType.VALUE);\n        }\n        let valuesArg;\n        if (ast.args.length == 2) {\n            valuesArg = conditionArg;\n        }\n        else {\n            const valuesArgValue = this.evaluateAst(ast.args[2], formulaAddress);\n            if (valuesArgValue instanceof CellError) {\n                return valuesArgValue;\n            }\n            valuesArg = coerceToRange(valuesArgValue);\n        }\n        const averageResult = new CriterionFunctionCompute(this.interpreter, averageifCacheKey, AverageResult.empty, (left, right) => left.compose(right), (arg) => {\n            if (typeof arg === 'number') {\n                return AverageResult.single(arg);\n            }\n            else {\n                return AverageResult.empty;\n            }\n        }).compute(valuesArg, [new Condition(conditionArg, criterionPackage)]);\n        if (averageResult instanceof CellError) {\n            return averageResult;\n        }\n        else {\n            return averageResult.averageValue() || new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    /**\n     * Corresponds to COUNTIF(Range, Criterion)\n     *\n     * Range is the range to which criterion is to be applied.\n     * Criterion is the criteria used to choose which cells will be included in sum.\n     *\n     * Returns number of cells on which criteria evaluates to true.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    countif(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const conditionArgValue = this.evaluateAst(ast.args[0], formulaAddress);\n        if (conditionArgValue instanceof CellError) {\n            return conditionArgValue;\n        }\n        const conditionArg = coerceToRange(conditionArgValue);\n        const criterionValue = this.evaluateAst(ast.args[1], formulaAddress);\n        if (criterionValue instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        else if (criterionValue instanceof CellError) {\n            return criterionValue;\n        }\n        const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(criterionValue, this.interpreter.arithmeticHelper);\n        if (criterionPackage === undefined) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const result = new CriterionFunctionCompute(this.interpreter, () => 'COUNTIF', 0, (left, right) => left + right, () => 1).compute(conditionArg, [new Condition(conditionArg, criterionPackage)]);\n        return result;\n    }\n    countifs(ast, formulaAddress) {\n        if (ast.args.length < 2 || ast.args.length % 2 === 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const conditions = [];\n        for (let i = 0; i < ast.args.length; i += 2) {\n            const conditionArgValue = this.evaluateAst(ast.args[i], formulaAddress);\n            if (conditionArgValue instanceof CellError) {\n                return conditionArgValue;\n            }\n            const conditionArg = coerceToRange(conditionArgValue);\n            const criterionValue = this.evaluateAst(ast.args[i + 1], formulaAddress);\n            if (criterionValue instanceof SimpleRangeValue) {\n                return new CellError(ErrorType.VALUE);\n            }\n            else if (criterionValue instanceof CellError) {\n                return criterionValue;\n            }\n            const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(criterionValue, this.interpreter.arithmeticHelper);\n            if (criterionPackage === undefined) {\n                return new CellError(ErrorType.VALUE);\n            }\n            conditions.push(new Condition(conditionArg, criterionPackage));\n        }\n        const result = new CriterionFunctionCompute(this.interpreter, countifsCacheKey, 0, (left, right) => left + right, () => 1).compute(conditions[0].conditionRange, conditions);\n        return result;\n    }\n}\nSumifPlugin.implementedFunctions = {\n    'SUMIF': {\n        method: 'sumif',\n    },\n    'COUNTIF': {\n        method: 'countif',\n    },\n    'AVERAGEIF': {\n        method: 'averageif',\n    },\n    'SUMIFS': {\n        method: 'sumifs',\n    },\n    'COUNTIFS': {\n        method: 'countifs',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\nimport { split } from '../generatorUtils';\nconst findSmallerRangeForMany = (dependencyGraph, conditionRanges, valuesRange) => {\n    if (valuesRange.end.row > valuesRange.start.row) {\n        const valuesRangeEndRowLess = simpleCellAddress(valuesRange.end.sheet, valuesRange.end.col, valuesRange.end.row - 1);\n        const rowLessVertex = dependencyGraph.getRange(valuesRange.start, valuesRangeEndRowLess);\n        if (rowLessVertex !== undefined) {\n            return {\n                smallerRangeVertex: rowLessVertex,\n                restValuesRange: valuesRange.withStart(simpleCellAddress(valuesRange.start.sheet, valuesRange.start.col, valuesRange.end.row)),\n                restConditionRanges: conditionRanges.map((conditionRange) => conditionRange.withStart(simpleCellAddress(conditionRange.start.sheet, conditionRange.start.col, conditionRange.end.row))),\n            };\n        }\n    }\n    return {\n        smallerRangeVertex: null,\n        restValuesRange: valuesRange,\n        restConditionRanges: conditionRanges,\n    };\n};\nexport class CriterionFunctionCompute {\n    constructor(interpreter, cacheKey, reduceInitialValue, composeFunction, mapFunction) {\n        this.interpreter = interpreter;\n        this.cacheKey = cacheKey;\n        this.reduceInitialValue = reduceInitialValue;\n        this.composeFunction = composeFunction;\n        this.mapFunction = mapFunction;\n        this.dependencyGraph = this.interpreter.dependencyGraph;\n    }\n    compute(simpleValuesRange, conditions) {\n        for (const condition of conditions) {\n            if (!condition.conditionRange.sameDimensionsAs(simpleValuesRange)) {\n                return new CellError(ErrorType.VALUE);\n            }\n        }\n        const valuesRangeVertex = this.tryToGetRangeVertexForRangeValue(simpleValuesRange);\n        const conditionsVertices = conditions.map((c) => this.tryToGetRangeVertexForRangeValue(c.conditionRange));\n        if (valuesRangeVertex && conditionsVertices.every((e) => e !== undefined)) {\n            const fullCriterionString = conditions.map((c) => c.criterionPackage.raw).join(',');\n            const cachedResult = this.findAlreadyComputedValueInCache(valuesRangeVertex, this.cacheKey(conditions), fullCriterionString);\n            if (cachedResult) {\n                this.interpreter.stats.incrementCriterionFunctionFullCacheUsed();\n                return cachedResult;\n            }\n            const cache = this.buildNewCriterionCache(this.cacheKey(conditions), conditions.map((c) => c.conditionRange.range()), simpleValuesRange.range());\n            if (!cache.has(fullCriterionString)) {\n                cache.set(fullCriterionString, [\n                    this.evaluateRangeValue(simpleValuesRange, conditions),\n                    conditions.map((condition) => condition.criterionPackage.lambda),\n                ]);\n            }\n            valuesRangeVertex.setCriterionFunctionValues(this.cacheKey(conditions), cache);\n            conditionsVertices.forEach(range => {\n                if (range !== undefined) {\n                    range.addDependentCacheRange(valuesRangeVertex);\n                }\n            });\n            return cache.get(fullCriterionString)[0];\n        }\n        else {\n            return this.evaluateRangeValue(simpleValuesRange, conditions);\n        }\n    }\n    tryToGetRangeVertexForRangeValue(rangeValue) {\n        const maybeRange = rangeValue.range();\n        if (maybeRange === undefined) {\n            return undefined;\n        }\n        else {\n            return this.dependencyGraph.getRange(maybeRange.start, maybeRange.end);\n        }\n    }\n    reduceFunction(iterable) {\n        let acc = this.reduceInitialValue;\n        for (const val of iterable) {\n            acc = this.composeFunction(acc, val);\n        }\n        return acc;\n    }\n    findAlreadyComputedValueInCache(rangeVertex, cacheKey, criterionString) {\n        return rangeVertex.getCriterionFunctionValue(cacheKey, criterionString);\n    }\n    evaluateRangeValue(simpleValuesRange, conditions) {\n        const criterionLambdas = conditions.map((condition) => condition.criterionPackage.lambda);\n        const values = Array.from(simpleValuesRange.valuesFromTopLeftCorner()).map(this.mapFunction)[Symbol.iterator]();\n        const conditionsIterators = conditions.map((condition) => condition.conditionRange.valuesFromTopLeftCorner());\n        const filteredValues = ifFilter(criterionLambdas, conditionsIterators, values);\n        return this.reduceFunction(filteredValues);\n    }\n    buildNewCriterionCache(cacheKey, simpleConditionRanges, simpleValuesRange) {\n        const currentRangeVertex = this.dependencyGraph.getRange(simpleValuesRange.start, simpleValuesRange.end);\n        const { smallerRangeVertex, restConditionRanges, restValuesRange } = findSmallerRangeForMany(this.dependencyGraph, simpleConditionRanges, simpleValuesRange);\n        let smallerCache;\n        if (smallerRangeVertex && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\n            smallerCache = smallerRangeVertex.getCriterionFunctionValues(cacheKey);\n        }\n        else {\n            smallerCache = new Map();\n        }\n        const newCache = new Map();\n        smallerCache.forEach(([value, criterionLambdas], key) => {\n            const filteredValues = ifFilter(criterionLambdas, restConditionRanges.map((rcr) => getRangeValues(this.dependencyGraph, rcr)), Array.from(getRangeValues(this.dependencyGraph, restValuesRange)).map(this.mapFunction)[Symbol.iterator]());\n            const newCacheValue = this.composeFunction(value, this.reduceFunction(filteredValues));\n            this.interpreter.stats.incrementCriterionFunctionPartialCacheUsed();\n            newCache.set(key, [newCacheValue, criterionLambdas]);\n        });\n        return newCache;\n    }\n}\nexport class Condition {\n    constructor(conditionRange, criterionPackage) {\n        this.conditionRange = conditionRange;\n        this.criterionPackage = criterionPackage;\n    }\n}\nfunction* getRangeValues(dependencyGraph, cellRange) {\n    for (const cellFromRange of cellRange.addresses(dependencyGraph)) {\n        yield dependencyGraph.getScalarValue(cellFromRange);\n    }\n}\nfunction* ifFilter(criterionLambdas, conditionalIterables, computableIterable) {\n    for (const computable of computableIterable) {\n        const conditionalSplits = conditionalIterables.map((conditionalIterable) => split(conditionalIterable));\n        if (!conditionalSplits.every((cs) => Object.prototype.hasOwnProperty.call(cs, 'value'))) {\n            return;\n        }\n        const conditionalFirsts = conditionalSplits.map((cs) => cs.value);\n        if (zip(conditionalFirsts, criterionLambdas).every(([conditionalFirst, criterionLambda]) => criterionLambda(conditionalFirst))) {\n            yield computable;\n        }\n        conditionalIterables = conditionalSplits.map((cs) => cs.rest);\n    }\n}\nfunction zip(arr1, arr2) {\n    const result = [];\n    for (let i = 0; i < Math.min(arr1.length, arr2.length); i++) {\n        result.push([arr1[i], arr2[i]]);\n    }\n    return result;\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nexport function* empty() { }\nexport function split(iterable) {\n    const iterator = iterable[Symbol.iterator]();\n    const { done, value } = iterator.next();\n    if (done) {\n        return { rest: empty() };\n    }\n    else {\n        return { value, rest: iterator };\n    }\n}\nexport function first(iterable) {\n    const iterator = iterable[Symbol.iterator]();\n    const { done, value } = iterator.next();\n    if (!done) {\n        return value;\n    }\n    return undefined;\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { coerceScalarToString } from '../ArithmeticHelper';\nimport { FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing text-specific functions\n */\nexport class TextPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to CONCATENATE(value1, [value2, ...])\n     *\n     * Concatenates provided arguments to one string.\n     *\n     * @param args\n     * @param formulaAddress\n     */\n    concatenate(ast, formulaAddress) {\n        if (ast.args.length == 0) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        let result = '';\n        for (const value of this.iterateOverScalarValues(ast.args, formulaAddress)) {\n            const coercedValue = coerceScalarToString(value);\n            if (coercedValue instanceof CellError) {\n                return value;\n            }\n            else {\n                result = result.concat(coercedValue);\n            }\n        }\n        return result;\n    }\n    /**\n     * Corresponds to SPLIT(string, index)\n     *\n     * Splits provided string using space separator and returns chunk at zero-based position specified by second argument\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    split(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const stringArg = ast.args[0];\n        const indexArg = ast.args[1];\n        const stringToSplit = this.evaluateAst(stringArg, formulaAddress);\n        if (typeof stringToSplit !== 'string') {\n            return new CellError(ErrorType.VALUE);\n        }\n        const indexToUse = this.evaluateAst(indexArg, formulaAddress);\n        if (typeof indexToUse !== 'number') {\n            return new CellError(ErrorType.VALUE);\n        }\n        const splittedString = stringToSplit.split(' ');\n        if (indexToUse > splittedString.length || indexToUse < 0) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return splittedString[indexToUse];\n    }\n}\nTextPlugin.implementedFunctions = {\n    'CONCATENATE': {\n        method: 'concatenate',\n    },\n    'SPLIT': {\n        method: 'split',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport assert from 'assert';\nimport { AbsoluteCellRange, DIFFERENT_SHEETS_ERROR } from '../../AbsoluteCellRange';\nimport { CellError, EmptyValue, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { coerceToRange, max, maxa, min, mina } from '../ArithmeticHelper';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\nfunction idMap(arg) {\n    return arg;\n}\nfunction square(arg) {\n    if (arg instanceof CellError) {\n        return arg;\n    }\n    else if (typeof arg === 'number') {\n        return arg * arg;\n    }\n    else {\n        return 0;\n    }\n}\nfunction zeroForInfinite(value) {\n    if (typeof value === 'number' && !Number.isFinite(value)) {\n        return 0;\n    }\n    else {\n        return value;\n    }\n}\nclass AverageResult {\n    constructor(sum, count) {\n        this.sum = sum;\n        this.count = count;\n    }\n    static single(arg) {\n        return new AverageResult(arg, 1);\n    }\n    compose(other) {\n        return new AverageResult(this.sum + other.sum, this.count + other.count);\n    }\n    averageValue() {\n        if (this.count > 0) {\n            return this.sum / this.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nAverageResult.empty = new AverageResult(0, 0);\nexport class NumericAggregationPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to SUM(Number1, Number2, ...).\n     *\n     * Returns a sum of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    sum(ast, formulaAddress) {\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        return this.reduce(ast, formulaAddress, 0, 'SUM', this.interpreter.arithmeticHelper.nonstrictadd, idMap, (arg) => this.coerceScalarToNumberOrError(arg));\n    }\n    sumsq(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        return this.reduce(ast, formulaAddress, 0, 'SUMSQ', this.interpreter.arithmeticHelper.nonstrictadd, square, (arg) => this.coerceScalarToNumberOrError(arg));\n    }\n    countblank(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        let counter = 0;\n        for (const arg of ast.args) {\n            const rangeValue = coerceToRange(this.evaluateAst(arg, formulaAddress));\n            for (const value of rangeValue.valuesFromTopLeftCorner()) {\n                if (value === EmptyValue) {\n                    counter++;\n                }\n            }\n        }\n        return counter;\n    }\n    /**\n     * Corresponds to MAX(Number1, Number2, ...).\n     *\n     * Returns a max of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    max(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = this.reduce(ast, formulaAddress, Number.NEGATIVE_INFINITY, 'MAX', max, idMap, (arg) => this.coerceScalarToNumberOrError(arg));\n        return zeroForInfinite(value);\n    }\n    maxa(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = this.reduce(ast, formulaAddress, Number.NEGATIVE_INFINITY, 'MAXA', maxa, idMap, (arg) => this.coerceScalarToNumberOrError(arg));\n        return zeroForInfinite(value);\n    }\n    /**\n     * Corresponds to MIN(Number1, Number2, ...).\n     *\n     * Returns a min of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    min(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = this.reduce(ast, formulaAddress, Number.POSITIVE_INFINITY, 'MIN', min, idMap, (arg) => this.coerceScalarToNumberOrError(arg));\n        return zeroForInfinite(value);\n    }\n    mina(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = this.reduce(ast, formulaAddress, Number.POSITIVE_INFINITY, 'MINA', mina, idMap, (arg) => this.coerceScalarToNumberOrError(arg));\n        return zeroForInfinite(value);\n    }\n    count(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = this.reduce(ast, formulaAddress, 0, 'COUNT', (left, right) => {\n            return left + right;\n        }, (arg) => {\n            return (typeof arg === 'number') ? 1 : 0;\n        }, (arg) => this.coerceScalarToNumberOrError(arg));\n        return value;\n    }\n    counta(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = this.reduce(ast, formulaAddress, 0, 'COUNTA', (left, right) => {\n            return left + right;\n        }, (arg) => {\n            return (arg === EmptyValue) ? 0 : 1;\n        }, (arg) => this.coerceScalarToNumberOrError(arg));\n        return value;\n    }\n    average(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const result = this.reduce(ast, formulaAddress, AverageResult.empty, 'AVERAGE', (left, right) => {\n            if (left instanceof CellError) {\n                return left;\n            }\n            else if (right instanceof CellError) {\n                return right;\n            }\n            else {\n                return left.compose(right);\n            }\n        }, (arg) => {\n            if (arg instanceof CellError) {\n                return arg;\n            }\n            else if (typeof arg === 'number') {\n                return AverageResult.single(arg);\n            }\n            else {\n                return AverageResult.empty;\n            }\n        }, (arg) => this.coerceScalarToNumberOrError(arg));\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            return result.averageValue() || new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    averagea(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const result = this.reduce(ast, formulaAddress, AverageResult.empty, 'AVERAGE', (left, right) => {\n            if (left instanceof CellError) {\n                return left;\n            }\n            else if (right instanceof CellError) {\n                return right;\n            }\n            else {\n                return left.compose(right);\n            }\n        }, (arg) => {\n            if (arg === EmptyValue) {\n                return AverageResult.empty;\n            }\n            else if (arg instanceof CellError) {\n                return arg;\n            }\n            else {\n                const coercedArg = this.interpreter.arithmeticHelper.coerceNonDateScalarToMaybeNumber(arg);\n                if (coercedArg === undefined) {\n                    return AverageResult.empty;\n                }\n                else {\n                    return AverageResult.single(coercedArg);\n                }\n            }\n        }, (arg) => this.coerceScalarToNumberOrError(arg));\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            return result.averageValue() || new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    /**\n     * Reduces procedure arguments with given reducing function\n     *\n     * @param ast - cell range ast\n     * @param formulaAddress - address of the cell in which formula is located\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param functionName - function name to use as cache key\n     * @param reducingFunction - reducing function\n     * @param mapFunction\n     * @param coerceFunction\n     * */\n    reduce(ast, formulaAddress, initialAccValue, functionName, reducingFunction, mapFunction, coerceFunction) {\n        return ast.args.reduce((acc, arg) => {\n            let value;\n            if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\n                value = this.evaluateRange(arg, formulaAddress, acc, functionName, reducingFunction, mapFunction);\n            }\n            else {\n                value = this.evaluateAst(arg, formulaAddress);\n                if (value instanceof SimpleRangeValue) {\n                    value = this.reduceRange(Array.from(value.valuesFromTopLeftCorner()).map(mapFunction), initialAccValue, reducingFunction);\n                }\n                else if (arg.type === AstNodeType.CELL_REFERENCE) {\n                    value = mapFunction(value);\n                    value = reducingFunction(initialAccValue, value);\n                }\n                else {\n                    value = coerceFunction(value);\n                    value = mapFunction(value);\n                }\n            }\n            return reducingFunction(acc, value);\n        }, initialAccValue);\n    }\n    /**\n     * Reduces list of cell values with given reducing function\n     *\n     * @param rangeValues - list of values to reduce\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param reducingFunction - reducing function\n     */\n    reduceRange(rangeValues, initialAccValue, reducingFunction) {\n        let acc = initialAccValue;\n        for (const val of rangeValues) {\n            acc = reducingFunction(acc, val);\n        }\n        return acc;\n    }\n    /**\n     * Performs range operation on given range\n     *\n     * @param ast - cell range ast\n     * @param formulaAddress - address of the cell in which formula is located\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param functionName - function name to use as cache key\n     * @param reducingFunction - reducing function\n     */\n    evaluateRange(ast, formulaAddress, initialAccValue, functionName, reducingFunction, mapFunction) {\n        let range;\n        try {\n            range = AbsoluteCellRange.fromAst(ast, formulaAddress);\n        }\n        catch (err) {\n            if (err.message === DIFFERENT_SHEETS_ERROR) {\n                return mapFunction(new CellError(ErrorType.REF));\n            }\n            else {\n                throw err;\n            }\n        }\n        const rangeStart = range.start;\n        const rangeEnd = range.end;\n        const rangeVertex = this.dependencyGraph.getRange(rangeStart, rangeEnd);\n        assert.ok(rangeVertex, 'Range does not exists in graph');\n        let value = rangeVertex.getFunctionValue(functionName);\n        if (!value) {\n            const rangeValues = this.getRangeValues(functionName, range, mapFunction);\n            value = this.reduceRange(rangeValues, initialAccValue, reducingFunction);\n            rangeVertex.setFunctionValue(functionName, value);\n        }\n        return value;\n    }\n    /**\n     * Returns list of values for given range and function name\n     *\n     * If range is dependent on smaller range, list will contain value of smaller range for this function\n     * and values of cells that are not present in smaller range\n     *\n     * @param functionName - function name (e.g. SUM)\n     * @param range - cell range\n     */\n    getRangeValues(functionName, range, mapFunction) {\n        const rangeResult = [];\n        const { smallerRangeVertex, restRange } = this.dependencyGraph.rangeMapping.findSmallerRange(range);\n        const currentRangeVertex = this.dependencyGraph.getRange(range.start, range.end);\n        let actualRange;\n        if (smallerRangeVertex && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\n            const cachedValue = smallerRangeVertex.getFunctionValue(functionName);\n            if (cachedValue) {\n                rangeResult.push(cachedValue);\n            }\n            else {\n                for (const cellFromRange of smallerRangeVertex.range.addresses(this.dependencyGraph)) {\n                    rangeResult.push(mapFunction(this.dependencyGraph.getScalarValue(cellFromRange)));\n                }\n            }\n            actualRange = restRange;\n        }\n        else {\n            actualRange = range;\n        }\n        for (const cellFromRange of actualRange.addresses(this.dependencyGraph)) {\n            rangeResult.push(mapFunction(this.dependencyGraph.getScalarValue(cellFromRange)));\n        }\n        return rangeResult;\n    }\n}\nNumericAggregationPlugin.implementedFunctions = {\n    'SUM': {\n        method: 'sum',\n    },\n    'SUMSQ': {\n        method: 'sumsq',\n    },\n    'MAX': {\n        method: 'max',\n    },\n    'MIN': {\n        method: 'min',\n    },\n    'MAXA': {\n        method: 'maxa',\n    },\n    'MINA': {\n        method: 'mina',\n    },\n    'COUNTBLANK': {\n        method: 'countblank',\n    },\n    'COUNT': {\n        method: 'count',\n    },\n    'COUNTA': {\n        method: 'counta',\n    },\n    'AVERAGE': {\n        method: 'average',\n    },\n    'AVERAGEA': {\n        method: 'averagea',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing MEDIAN function\n */\nexport class MedianPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to MEDIAN(Number1, Number2, ...).\n     *\n     * Returns a median of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    median(ast, formulaAddress) {\n        if (ast.args.length === 0) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const values = [];\n        for (const scalarValue of this.iterateOverScalarValues(ast.args, formulaAddress)) {\n            if (scalarValue instanceof CellError) {\n                return scalarValue;\n            }\n            else if (typeof scalarValue === 'number') {\n                values.push(scalarValue);\n            }\n        }\n        if (values.length === 0) {\n            return new CellError(ErrorType.NUM);\n        }\n        values.sort((a, b) => (a - b));\n        if (values.length % 2 === 0) {\n            return (values[(values.length / 2) - 1] + values[values.length / 2]) / 2;\n        }\n        else {\n            return values[Math.floor(values.length / 2)];\n        }\n    }\n}\nMedianPlugin.implementedFunctions = {\n    'MEDIAN': {\n        method: 'median',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { endOfMonth, offsetMonth } from '../../DateTimeHelper';\nimport { format } from '../../format/format';\nimport { AstNodeType } from '../../parser';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing date-specific functions\n */\nexport class DatePlugin extends FunctionPlugin {\n    /**\n     * Corresponds to DATE(year, month, day)\n     *\n     * Converts a provided year, month and day into date\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    date(ast, formulaAddress) {\n        if (ast.args.length !== 3) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const year = this.evaluateAst(ast.args[0], formulaAddress);\n        const month = this.evaluateAst(ast.args[1], formulaAddress);\n        const day = this.evaluateAst(ast.args[2], formulaAddress);\n        if (year instanceof SimpleRangeValue || month instanceof SimpleRangeValue || day instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const coercedYear = this.coerceScalarToNumberOrError(year);\n        const coercedMonth = this.coerceScalarToNumberOrError(month);\n        const coercedDay = this.coerceScalarToNumberOrError(day);\n        if (coercedYear instanceof CellError) {\n            return coercedYear;\n        }\n        if (coercedMonth instanceof CellError) {\n            return coercedMonth;\n        }\n        if (coercedDay instanceof CellError) {\n            return coercedDay;\n        }\n        const d = Math.trunc(coercedDay);\n        let m = Math.trunc(coercedMonth);\n        let y = Math.trunc(coercedYear);\n        if (y < this.interpreter.dateHelper.getEpochYearZero()) {\n            y += this.interpreter.dateHelper.getEpochYearZero();\n        }\n        const delta = Math.floor((m - 1) / 12);\n        y += delta;\n        m -= delta * 12;\n        const date = { year: y, month: m, day: 1 };\n        if (this.interpreter.dateHelper.isValidDate(date)) {\n            const ret = this.interpreter.dateHelper.dateToNumber(date) + (d - 1);\n            if (this.interpreter.dateHelper.getWithinBounds(ret)) {\n                return ret;\n            }\n        }\n        return new CellError(ErrorType.VALUE);\n    }\n    eomonth(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const dateNumber = this.coerceScalarToNumberOrError(arg);\n        if (dateNumber instanceof CellError) {\n            return dateNumber;\n        }\n        const numberOfMonthsToShiftValue = this.evaluateAst(ast.args[1], formulaAddress);\n        if (numberOfMonthsToShiftValue instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const numberOfMonthsToShift = this.coerceScalarToNumberOrError(numberOfMonthsToShiftValue);\n        if (numberOfMonthsToShift instanceof CellError) {\n            return numberOfMonthsToShift;\n        }\n        const date = this.interpreter.dateHelper.numberToSimpleDate(dateNumber);\n        return this.interpreter.dateHelper.dateToNumber(endOfMonth(offsetMonth(date, numberOfMonthsToShift)));\n    }\n    day(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const dateNumber = this.coerceScalarToNumberOrError(arg);\n        if (dateNumber instanceof CellError) {\n            return dateNumber;\n        }\n        return this.interpreter.dateHelper.numberToSimpleDate(dateNumber).day;\n    }\n    days(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const endDate = this.evaluateAst(ast.args[0], formulaAddress);\n        if (endDate instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const endDateNumber = this.coerceScalarToNumberOrError(endDate);\n        if (endDateNumber instanceof CellError) {\n            return endDateNumber;\n        }\n        const startDate = this.evaluateAst(ast.args[1], formulaAddress);\n        if (startDate instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const startDateNumber = this.coerceScalarToNumberOrError(startDate);\n        if (startDateNumber instanceof CellError) {\n            return startDateNumber;\n        }\n        return endDateNumber - startDateNumber;\n    }\n    /**\n     * Corresponds to MONTH(date)\n     *\n     * Returns the month of the year specified by a given date\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    month(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const dateNumber = this.coerceScalarToNumberOrError(arg);\n        if (dateNumber instanceof CellError) {\n            return dateNumber;\n        }\n        return this.interpreter.dateHelper.numberToSimpleDate(dateNumber).month;\n    }\n    /**\n     * Corresponds to YEAR(date)\n     *\n     * Returns the year specified by a given date\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    year(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const dateNumber = this.coerceScalarToNumberOrError(arg);\n        if (dateNumber instanceof CellError) {\n            return dateNumber;\n        }\n        return this.interpreter.dateHelper.numberToSimpleDate(dateNumber).year;\n    }\n    /**\n     * Corresponds to TEXT(number, format)\n     *\n     * Tries to convert number to specified date format.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    text(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const dateArg = this.evaluateAst(ast.args[0], formulaAddress);\n        const formatArg = this.evaluateAst(ast.args[1], formulaAddress);\n        if (dateArg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const numberRepresentation = this.coerceScalarToNumberOrError(dateArg);\n        if (numberRepresentation instanceof CellError) {\n            return numberRepresentation;\n        }\n        if (typeof formatArg !== 'string') {\n            return new CellError(ErrorType.VALUE);\n        }\n        return format(numberRepresentation, formatArg, this.config, this.interpreter.dateHelper);\n    }\n}\nDatePlugin.implementedFunctions = {\n    'DATE': {\n        method: 'date'\n    },\n    'MONTH': {\n        method: 'month'\n    },\n    'YEAR': {\n        method: 'year'\n    },\n    'TEXT': {\n        method: 'text'\n    },\n    'EOMONTH': {\n        method: 'eomonth'\n    },\n    'DAY': {\n        method: 'day'\n    },\n    'DAYS': {\n        method: 'days'\n    },\n};\n","var $ = require('../internals/export');\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.github.io/ecma262/#sec-math.trunc\n$({ target: 'Math', stat: true }, {\n  trunc: function trunc(it) {\n    return (it > 0 ? floor : ceil)(it);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { coerceScalarToBoolean } from '../ArithmeticHelper';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing boolean functions\n */\nexport class BooleanPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to TRUE()\n     *\n     * Returns the logical true\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    literalTrue(ast, formulaAddress) {\n        if (ast.args.length > 0) {\n            return new CellError(ErrorType.NA);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Corresponds to FALSE()\n     *\n     * Returns the logical false\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    literalFalse(ast, formulaAddress) {\n        if (ast.args.length > 0) {\n            return new CellError(ErrorType.NA);\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Corresponds to IF(expression, value_if_true, value_if_false)\n     *\n     * Returns value specified as second argument if expression is true and third argument if expression is false\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    conditionalIf(ast, formulaAddress) {\n        if (ast.args.length > 3 || ast.args.length < 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const conditionValue = this.evaluateAst(ast.args[0], formulaAddress);\n        if (conditionValue instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const condition = coerceScalarToBoolean(conditionValue);\n        if (condition === true) {\n            return this.evaluateAst(ast.args[1], formulaAddress);\n        }\n        else if (condition === false) {\n            if (ast.args[2] !== undefined) {\n                return this.evaluateAst(ast.args[2], formulaAddress);\n            }\n            else {\n                return false;\n            }\n        }\n        else if (condition instanceof CellError) {\n            return condition;\n        }\n        else {\n            return new CellError(ErrorType.VALUE);\n        }\n    }\n    /**\n     * Corresponds to AND(expression1, [expression2, ...])\n     *\n     * Returns true if all of the provided arguments are logically true, and false if any of it is logically false\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    and(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        let result = true;\n        let anyReasonableValue = false;\n        for (const scalarValue of this.iterateOverScalarValues(ast.args, formulaAddress)) {\n            const coercedValue = coerceScalarToBoolean(scalarValue);\n            if (coercedValue instanceof CellError) {\n                return coercedValue;\n            }\n            else if (coercedValue !== null) {\n                result = result && coercedValue;\n                anyReasonableValue = true;\n            }\n        }\n        if (anyReasonableValue) {\n            return result;\n        }\n        else {\n            return new CellError(ErrorType.VALUE);\n        }\n    }\n    /**\n     * Corresponds to OR(expression1, [expression2, ...])\n     *\n     * Returns true if any of the provided arguments are logically true, and false otherwise\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    or(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        let result = null;\n        for (const scalarValue of this.iterateOverScalarValues(ast.args, formulaAddress)) {\n            const coercedValue = coerceScalarToBoolean(scalarValue);\n            if (coercedValue instanceof CellError) {\n                return coercedValue;\n            }\n            else if (coercedValue !== null) {\n                result = result || coercedValue;\n            }\n        }\n        if (result === null) {\n            return new CellError(ErrorType.VALUE);\n        }\n        else {\n            return result;\n        }\n    }\n    not(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const argValue = this.evaluateAst(ast.args[0], formulaAddress);\n        if (argValue instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        else {\n            const coercedValue = coerceScalarToBoolean(argValue);\n            if (coercedValue instanceof CellError) {\n                return coercedValue;\n            }\n            else {\n                return !coercedValue;\n            }\n        }\n    }\n    xor(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        let truesCount = 0;\n        let anyFalseValue = false;\n        for (const scalarValue of this.iterateOverScalarValues(ast.args, formulaAddress)) {\n            const coercedValue = coerceScalarToBoolean(scalarValue);\n            if (coercedValue instanceof CellError) {\n                return coercedValue;\n            }\n            else if (coercedValue === true) {\n                truesCount++;\n            }\n            else if (coercedValue === false) {\n                anyFalseValue = true;\n            }\n        }\n        if (anyFalseValue || truesCount > 0) {\n            return (truesCount % 2 === 1);\n        }\n        else {\n            return new CellError(ErrorType.VALUE);\n        }\n    }\n    switch(ast, formulaAddress) {\n        if (ast.args.length < 3) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const vals = [];\n        for (const arg of ast.args) {\n            const val = this.evaluateAst(arg, formulaAddress);\n            if (val instanceof SimpleRangeValue) {\n                return new CellError(ErrorType.VALUE);\n            }\n            vals.push(val);\n        }\n        const n = vals.length;\n        if (vals[0] instanceof CellError) {\n            return vals[0];\n        }\n        let i = 1;\n        for (; i + 1 < n; i += 2) {\n            if (vals[i] instanceof CellError) {\n                continue;\n            }\n            if (this.interpreter.arithmeticHelper.compare(vals[0], vals[i]) === 0) {\n                return vals[i + 1];\n            }\n        }\n        if (i < n) {\n            return vals[i];\n        }\n        else {\n            return new CellError(ErrorType.NA);\n        }\n    }\n    iferror(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const left = this.evaluateAst(ast.args[0], formulaAddress);\n        const right = this.evaluateAst(ast.args[1], formulaAddress);\n        if (left instanceof SimpleRangeValue || right instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        if (left instanceof CellError) {\n            return right;\n        }\n        else {\n            return left;\n        }\n    }\n    ifna(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const left = this.evaluateAst(ast.args[0], formulaAddress);\n        const right = this.evaluateAst(ast.args[1], formulaAddress);\n        if (left instanceof SimpleRangeValue || right instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        if (left instanceof CellError && left.type === ErrorType.NA) {\n            return right;\n        }\n        else {\n            return left;\n        }\n    }\n    choose(ast, formulaAddress) {\n        if (ast.args.length < 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const vals = [];\n        for (const arg of ast.args) {\n            const val = this.evaluateAst(arg, formulaAddress);\n            if (val instanceof SimpleRangeValue) {\n                return new CellError(ErrorType.VALUE);\n            }\n            vals.push(val);\n        }\n        const n = vals.length;\n        if (vals[0] instanceof CellError) {\n            return vals[0];\n        }\n        const selector = this.interpreter.arithmeticHelper.coerceToMaybeNumber(vals[0]);\n        if (selector === undefined || selector != Math.round(selector) || selector < 1 || selector >= n) {\n            return new CellError(ErrorType.NUM);\n        }\n        return vals[selector];\n    }\n}\nBooleanPlugin.implementedFunctions = {\n    'TRUE': {\n        method: 'literalTrue'\n    },\n    'FALSE': {\n        method: 'literalFalse'\n    },\n    'IF': {\n        method: 'conditionalIf'\n    },\n    'AND': {\n        method: 'and'\n    },\n    'OR': {\n        method: 'or'\n    },\n    'XOR': {\n        method: 'xor'\n    },\n    'NOT': {\n        method: 'not'\n    },\n    'SWITCH': {\n        method: 'switch'\n    },\n    'IFERROR': {\n        method: 'iferror'\n    },\n    'IFNA': {\n        method: 'ifna'\n    },\n    'CHOOSE': {\n        method: 'choose'\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\nimport { CellError, EmptyValue, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing information functions\n */\nexport class InformationPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to ISERROR(value)\n     *\n     * Checks whether provided value is an error\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    iserror(ast, formulaAddress) {\n        if (ast.args.length != 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return (arg instanceof CellError);\n    }\n    /**\n     * Corresponds to ISBLANK(value)\n     *\n     * Checks whether provided cell reference is empty\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isblank(ast, formulaAddress) {\n        if (ast.args.length != 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = ast.args[0];\n        const value = this.evaluateAst(arg, formulaAddress);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return (value === EmptyValue);\n    }\n    /**\n     * Corresponds to ISNUMBER(value)\n     *\n     * Checks whether provided cell reference is a number\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isnumber(ast, formulaAddress) {\n        if (ast.args.length != 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = ast.args[0];\n        const value = this.evaluateAst(arg, formulaAddress);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return (typeof value === 'number');\n    }\n    /**\n     * Corresponds to ISLOGICAL(value)\n     *\n     * Checks whether provided cell reference is of logical type\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    islogical(ast, formulaAddress) {\n        if (ast.args.length != 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = ast.args[0];\n        const value = this.evaluateAst(arg, formulaAddress);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return (typeof value === 'boolean');\n    }\n    /**\n     * Corresponds to ISTEXT(value)\n     *\n     * Checks whether provided cell reference is of logical type\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    istext(ast, formulaAddress) {\n        if (ast.args.length != 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = ast.args[0];\n        const value = this.evaluateAst(arg, formulaAddress);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return (typeof value === 'string');\n    }\n    /**\n     * Corresponds to ISNONTEXT(value)\n     *\n     * Checks whether provided cell reference is of logical type\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isnontext(ast, formulaAddress) {\n        if (ast.args.length != 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = ast.args[0];\n        const value = this.evaluateAst(arg, formulaAddress);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return (typeof value !== 'string');\n    }\n    /**\n     * Corresponds to COLUMNS(range)\n     *\n     * Returns number of columns in provided range of cells\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    columns(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const rangeAst = ast.args[0];\n        if (rangeAst.type === AstNodeType.CELL_RANGE) {\n            return (rangeAst.end.col - rangeAst.start.col + 1);\n        }\n        else {\n            return new CellError(ErrorType.VALUE);\n        }\n    }\n    /**\n     * Corresponds to ROWS(range)\n     *\n     * Returns number of rows in provided range of cells\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    rows(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const rangeAst = ast.args[0];\n        if (rangeAst.type === AstNodeType.CELL_RANGE) {\n            return (rangeAst.end.row - rangeAst.start.row + 1);\n        }\n        else {\n            return new CellError(ErrorType.VALUE);\n        }\n    }\n    index(ast, formulaAddress) {\n        const rangeArg = ast.args[0];\n        if (ast.args.length < 1 || ast.args.length > 3) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        let width, height;\n        let range;\n        if (rangeArg.type === AstNodeType.CELL_RANGE) {\n            range = AbsoluteCellRange.fromCellRange(rangeArg, formulaAddress);\n            width = range.width();\n            height = range.height();\n        }\n        else {\n            width = 1;\n            height = 1;\n        }\n        const rowArg = ast.args[1];\n        const rowValue = this.evaluateAst(rowArg, formulaAddress);\n        if (typeof rowValue !== 'number' || rowValue < 0 || rowValue > height) {\n            return new CellError(ErrorType.NUM);\n        }\n        const columnArg = ast.args[2];\n        const columnValue = this.evaluateAst(columnArg, formulaAddress);\n        if (typeof columnValue !== 'number' || columnValue < 0 || columnValue > width) {\n            return new CellError(ErrorType.NUM);\n        }\n        if (columnValue === 0 || rowValue === 0 || range === undefined) {\n            throw Error('Not implemented yet');\n        }\n        const address = range.getAddress(columnValue - 1, rowValue - 1);\n        return this.dependencyGraph.getCellValue(address);\n    }\n}\nInformationPlugin.implementedFunctions = {\n    'ISERROR': {\n        method: 'iserror',\n    },\n    'ISBLANK': {\n        method: 'isblank',\n    },\n    'ISNUMBER': {\n        method: 'isnumber',\n    },\n    'ISLOGICAL': {\n        method: 'islogical',\n    },\n    'ISTEXT': {\n        method: 'istext',\n    },\n    'ISNONTEXT': {\n        method: 'isnontext',\n    },\n    'COLUMNS': {\n        method: 'columns',\n        isDependentOnSheetStructureChange: true,\n        doesNotNeedArgumentsToBeComputed: true,\n    },\n    'ROWS': {\n        method: 'rows',\n        isDependentOnSheetStructureChange: true,\n        doesNotNeedArgumentsToBeComputed: true,\n    },\n    'INDEX': {\n        method: 'index',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing trigonometric functions\n */\nexport class TrigonometryPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to ACOS(value)\n     *\n     * Returns the arc cosine (or inverse cosine) of a number.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    acos(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedArg) => {\n            if (-1 <= coercedArg && coercedArg <= 1) {\n                return Math.acos(coercedArg);\n            }\n            else {\n                return new CellError(ErrorType.NUM);\n            }\n        });\n    }\n    asin(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedArg) => {\n            if (-1 <= coercedArg && coercedArg <= 1) {\n                return Math.asin(coercedArg);\n            }\n            else {\n                return new CellError(ErrorType.NUM);\n            }\n        });\n    }\n    cos(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedArg) => {\n            return Math.cos(coercedArg);\n        });\n    }\n    sin(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedArg) => {\n            return Math.sin(coercedArg);\n        });\n    }\n    tan(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedArg) => {\n            return Math.tan(coercedArg);\n        });\n    }\n    atan(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedArg) => {\n            return Math.atan(coercedArg);\n        });\n    }\n    atan2(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg1 = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg1 instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const arg2 = this.evaluateAst(ast.args[1], formulaAddress);\n        if (arg2 instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const coercedArg1 = this.coerceScalarToNumberOrError(arg1);\n        if (coercedArg1 instanceof CellError) {\n            return coercedArg1;\n        }\n        const coercedArg2 = this.coerceScalarToNumberOrError(arg2);\n        if (coercedArg2 instanceof CellError) {\n            return coercedArg2;\n        }\n        return Math.atan2(coercedArg1, coercedArg2);\n    }\n    ctg(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedArg) => {\n            if (coercedArg === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            else {\n                return (1 / Math.tan(coercedArg));\n            }\n        });\n    }\n}\nTrigonometryPlugin.implementedFunctions = {\n    'ACOS': {\n        method: 'acos',\n    },\n    'ASIN': {\n        method: 'asin',\n    },\n    'COS': {\n        method: 'cos',\n    },\n    'SIN': {\n        method: 'sin',\n    },\n    'TAN': {\n        method: 'tan',\n    },\n    'ATAN': {\n        method: 'atan',\n    },\n    'ATAN2': {\n        method: 'atan2',\n    },\n    'COT': {\n        method: 'ctg',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing COUNTUNIQUE function\n */\nexport class CountUniquePlugin extends FunctionPlugin {\n    /**\n     * Corresponds to COUNTUNIQUE(Number1, Number2, ...).\n     *\n     * Returns number of unique numbers from arguments\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    countunique(ast, formulaAddress) {\n        if (ast.args.length === 0) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const valuesSet = new Set();\n        const errorsSet = new Set();\n        for (const scalarValue of this.iterateOverScalarValues(ast.args, formulaAddress)) {\n            if (scalarValue instanceof CellError) {\n                errorsSet.add(scalarValue.type);\n            }\n            else if (scalarValue !== '') {\n                valuesSet.add(scalarValue);\n            }\n        }\n        return valuesSet.size + errorsSet.size;\n    }\n}\nCountUniquePlugin.implementedFunctions = {\n    'COUNTUNIQUE': {\n        method: 'countunique',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { coerceToRange } from '../ArithmeticHelper';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class SumprodPlugin extends FunctionPlugin {\n    sumprod(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const [left, right] = ast.args;\n        const leftArgValue = coerceToRange(this.evaluateAst(left, formulaAddress));\n        const rightArgValue = coerceToRange(this.evaluateAst(right, formulaAddress));\n        if (leftArgValue.numberOfElements() !== rightArgValue.numberOfElements()) {\n            return new CellError(ErrorType.VALUE);\n        }\n        return this.reduceSumprod(leftArgValue, rightArgValue);\n    }\n    reduceSumprod(left, right) {\n        let result = 0;\n        const lit = left.valuesFromTopLeftCorner();\n        const rit = right.valuesFromTopLeftCorner();\n        let l, r;\n        while (l = lit.next(), r = rit.next(), !l.done && !r.done) {\n            if (l.value instanceof CellError) {\n                return l.value;\n            }\n            else if (r.value instanceof CellError) {\n                return r.value;\n            }\n            else {\n                const lval = this.coerceScalarToNumberOrError(l.value);\n                const rval = this.coerceScalarToNumberOrError(r.value);\n                if (typeof lval === 'number' && typeof rval === 'number') {\n                    result += lval * rval;\n                }\n            }\n        }\n        return result;\n    }\n}\nSumprodPlugin.implementedFunctions = {\n    'SUMPRODUCT': {\n        method: 'sumprod',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { matrixSizeForMultiplication, matrixSizeForPoolFunction, matrixSizeForTranspose } from '../../Matrix';\nimport { AstNodeType } from '../../parser';\nimport { coerceToRangeNumbersOrError } from '../ArithmeticHelper';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class MatrixPlugin extends FunctionPlugin {\n    mmult(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const [left, right] = ast.args;\n        const leftMatrix = coerceToRangeNumbersOrError(this.evaluateAst(left, formulaAddress));\n        const rightMatrix = coerceToRangeNumbersOrError(this.evaluateAst(right, formulaAddress));\n        if (leftMatrix instanceof CellError) {\n            return leftMatrix;\n        }\n        else if (rightMatrix instanceof CellError) {\n            return rightMatrix;\n        }\n        else if (leftMatrix === null || rightMatrix === null) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const outputSize = matrixSizeForMultiplication(leftMatrix.size, rightMatrix.size);\n        const gpu = this.interpreter.getGpuInstance();\n        const kernel = gpu.createKernel(function (a, b, width) {\n            let sum = 0;\n            for (let i = 0; i < width; ++i) {\n                sum += a[this.thread.y][i] * b[i][this.thread.x];\n            }\n            return sum;\n        }).setPrecision('unsigned')\n            .setOutput([outputSize.width, outputSize.height]);\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(kernel(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width()), outputSize);\n    }\n    maxpool(ast, formulaAddress) {\n        const [rangeArg, sizeArg] = ast.args;\n        const rangeMatrix = coerceToRangeNumbersOrError(this.evaluateAst(rangeArg, formulaAddress));\n        const windowSize = sizeArg.value;\n        let stride = windowSize;\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        if (ast.args.length === 3) {\n            const strideArg = ast.args[2];\n            if (strideArg.type === AstNodeType.NUMBER) {\n                stride = strideArg.value;\n            }\n            else {\n                return new CellError(ErrorType.VALUE);\n            }\n        }\n        if (rangeMatrix instanceof CellError) {\n            return rangeMatrix;\n        }\n        else if (rangeMatrix === null) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const outputSize = matrixSizeForPoolFunction(rangeMatrix.size, windowSize, stride);\n        /* istanbul ignore next: gpu.js */\n        const gpu = this.interpreter.getGpuInstance();\n        const kernel = gpu.createKernel(function (a, windowSize, stride) {\n            const leftCornerX = this.thread.x * stride;\n            const leftCornerY = this.thread.y * stride;\n            let currentMax = a[leftCornerY][leftCornerX];\n            for (let i = 0; i < windowSize; i++) {\n                for (let j = 0; j < windowSize; j++) {\n                    currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n                }\n            }\n            return currentMax;\n        }).setPrecision('unsigned')\n            .setOutput([outputSize.width, outputSize.height]);\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(kernel(rangeMatrix.rawNumbers(), windowSize, stride), outputSize);\n    }\n    medianpool(ast, formulaAddress) {\n        const [rangeArg, sizeArg] = ast.args;\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const rangeMatrix = coerceToRangeNumbersOrError(this.evaluateAst(rangeArg, formulaAddress));\n        const windowSize = sizeArg.value;\n        let stride = windowSize;\n        if (ast.args.length === 3) {\n            const strideArg = ast.args[2];\n            if (strideArg.type === AstNodeType.NUMBER) {\n                stride = strideArg.value;\n            }\n            else {\n                return new CellError(ErrorType.VALUE);\n            }\n        }\n        if (rangeMatrix instanceof CellError) {\n            return rangeMatrix;\n        }\n        else if (rangeMatrix === null) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const outputSize = matrixSizeForPoolFunction(rangeMatrix.size, windowSize, stride);\n        /* istanbul ignore next: gpu.js */\n        const gpu = this.interpreter.getGpuInstance();\n        const kernel = gpu.createKernel(function (a, windowSize, stride) {\n            const leftCornerX = this.thread.x * stride;\n            const leftCornerY = this.thread.y * stride;\n            let currentMax = a[leftCornerY][leftCornerX];\n            for (let i = 0; i < windowSize; i++) {\n                for (let j = 0; j < windowSize; j++) {\n                    currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n                }\n            }\n            let currentMin = a[leftCornerY][leftCornerX];\n            for (let i2 = 0; i2 < windowSize; i2++) {\n                for (let j2 = 0; j2 < windowSize; j2++) {\n                    currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\n                }\n            }\n            const numberOfElements = windowSize * windowSize;\n            let leftEnd = currentMin;\n            let rightEnd = currentMax;\n            let result = 42;\n            for (let iter = 0; iter < 32; iter++) {\n                const medianGuess = (leftEnd + rightEnd) / 2;\n                let medianGuessCount = 0;\n                for (let i3 = 0; i3 < windowSize; i3++) {\n                    for (let j3 = 0; j3 < windowSize; j3++) {\n                        if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\n                            medianGuessCount++;\n                        }\n                    }\n                }\n                if (windowSize % 2 === 0) {\n                    if (medianGuessCount === numberOfElements / 2) {\n                        result = medianGuess;\n                        break;\n                    }\n                    else if (medianGuessCount > numberOfElements / 2) {\n                        leftEnd = medianGuess;\n                    }\n                    else {\n                        rightEnd = medianGuess;\n                    }\n                }\n                else {\n                    if (medianGuessCount === (numberOfElements - 1) / 2) {\n                        result = medianGuess;\n                        break;\n                    }\n                    else if (medianGuessCount > (numberOfElements - 1) / 2) {\n                        leftEnd = medianGuess;\n                    }\n                    else {\n                        rightEnd = medianGuess;\n                    }\n                }\n            }\n            return result;\n        }).setPrecision('unsigned')\n            .setOutput([outputSize.width, outputSize.height]);\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(kernel(rangeMatrix.rawNumbers(), windowSize, stride), outputSize);\n    }\n    transpose(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = coerceToRangeNumbersOrError(this.evaluateAst(ast.args[0], formulaAddress));\n        if (value instanceof CellError) {\n            return value;\n        }\n        else if (value === null) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const input = value.rawNumbers();\n        const inputSize = value.size;\n        const result = [];\n        for (let i = 0; i < inputSize.width; ++i) {\n            result[i] = [];\n            for (let j = 0; j < inputSize.height; ++j) {\n                result[i][j] = input[j][i];\n            }\n        }\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, matrixSizeForTranspose(inputSize));\n    }\n}\nMatrixPlugin.implementedFunctions = {\n    'MMULT': {\n        method: 'mmult',\n    },\n    'TRANSPOSE': {\n        method: 'transpose',\n    },\n    'MAXPOOL': {\n        method: 'maxpool',\n    },\n    'MEDIANPOOL': {\n        method: 'medianpool',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class ExpPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to EXP(value)\n     *\n     * Calculates the exponent for basis e\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    exp(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (arg) => {\n            return Math.exp(arg);\n        });\n    }\n}\nExpPlugin.implementedFunctions = {\n    'EXP': {\n        method: 'exp',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class AbsPlugin extends FunctionPlugin {\n    abs(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (arg) => {\n            return Math.abs(arg);\n        });\n    }\n}\nAbsPlugin.implementedFunctions = {\n    'ABS': {\n        method: 'abs',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class DegreesPlugin extends FunctionPlugin {\n    degrees(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (arg) => {\n            return arg * (180 / Math.PI);\n        });\n    }\n}\nDegreesPlugin.implementedFunctions = {\n    'DEGREES': {\n        method: 'degrees',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class RadiansPlugin extends FunctionPlugin {\n    radians(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (arg) => {\n            return arg * (Math.PI / 180);\n        });\n    }\n}\nRadiansPlugin.implementedFunctions = {\n    'RADIANS': {\n        method: 'radians',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class RandomPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to RAND()\n     *\n     * Returns a pseudo-random floating-point random number\n     * in the range [0,1).\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    rand(ast, formulaAddress) {\n        if (ast.args.length !== 0) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        return Math.random();\n    }\n}\nRandomPlugin.implementedFunctions = {\n    'RAND': {\n        method: 'rand',\n        isVolatile: true,\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\nimport { CellError, ErrorType, simpleCellAddress } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { StatType } from '../../statistics';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class VlookupPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to VLOOKUP(key, range, index, [sorted])\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    vlookup(ast, formulaAddress) {\n        if (ast.args.length < 3 || ast.args.length > 4) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const key = this.evaluateAst(ast.args[0], formulaAddress);\n        if (typeof key !== 'string' && typeof key !== 'number' && typeof key !== 'boolean') {\n            return new CellError(ErrorType.VALUE);\n        }\n        const rangeArg = ast.args[1];\n        if (rangeArg.type !== AstNodeType.CELL_RANGE) {\n            /* gsheet returns REF */\n            return new CellError(ErrorType.VALUE);\n        }\n        const index = this.evaluateAst(ast.args[2], formulaAddress);\n        if (typeof index !== 'number') {\n            return new CellError(ErrorType.VALUE);\n        }\n        let sorted = true;\n        if (ast.args.length === 4) {\n            const computedSorted = this.evaluateAst(ast.args[3], formulaAddress);\n            if (typeof computedSorted === 'boolean') {\n                sorted = computedSorted;\n            }\n            else {\n                return new CellError(ErrorType.VALUE);\n            }\n        }\n        const range = AbsoluteCellRange.fromCellRange(rangeArg, formulaAddress);\n        if (index > range.width()) {\n            return new CellError(ErrorType.REF);\n        }\n        return this.doVlookup(key, range, index - 1, sorted);\n    }\n    match(ast, formulaAddress) {\n        if (ast.args.length < 2 || ast.args.length > 3) {\n            return new CellError(ErrorType.NA);\n        }\n        const key = this.evaluateAst(ast.args[0], formulaAddress);\n        if (typeof key !== 'string' && typeof key !== 'number' && typeof key !== 'boolean') {\n            return new CellError(ErrorType.VALUE);\n        }\n        const rangeArg = ast.args[1];\n        if (rangeArg.type !== AstNodeType.CELL_RANGE) {\n            return new CellError(ErrorType.VALUE);\n        }\n        let sorted = 1;\n        if (ast.args.length === 3) {\n            sorted = this.evaluateAst(ast.args[2], formulaAddress);\n            if (typeof sorted !== 'number') {\n                return new CellError(ErrorType.VALUE);\n            }\n        }\n        const searchedRange = AbsoluteCellRange.fromCellRange(rangeArg, formulaAddress);\n        if (searchedRange.width() === 1) {\n            const rowIndex = this.columnSearch.find(key, searchedRange, sorted !== 0);\n            if (rowIndex === -1) {\n                return new CellError(ErrorType.NA);\n            }\n            return rowIndex - searchedRange.start.row + 1;\n        }\n        else {\n            const columnIndex = this.searchInRange(key, searchedRange, false);\n            if (columnIndex === -1) {\n                return new CellError(ErrorType.NA);\n            }\n            return (columnIndex - searchedRange.start.row) + 1;\n        }\n    }\n    searchInRange(key, range, sorted) {\n        if (!sorted && typeof key === 'string' && this.interpreter.arithmeticHelper.requiresRegex(key)) {\n            return this.columnSearch.advancedFind(this.interpreter.arithmeticHelper.eqMatcherFunction(key), range);\n        }\n        else {\n            return this.columnSearch.find(key, range, sorted);\n        }\n    }\n    doVlookup(key, range, index, sorted) {\n        this.dependencyGraph.stats.start(StatType.VLOOKUP);\n        const searchedRange = AbsoluteCellRange.spanFrom(range.start, 1, range.height());\n        const rowIndex = this.searchInRange(key, searchedRange, sorted);\n        this.dependencyGraph.stats.end(StatType.VLOOKUP);\n        if (rowIndex === -1) {\n            return new CellError(ErrorType.NA);\n        }\n        const address = simpleCellAddress(range.sheet, range.start.col + index, rowIndex);\n        return this.dependencyGraph.getCellValue(address);\n    }\n}\nVlookupPlugin.implementedFunctions = {\n    'VLOOKUP': {\n        method: 'vlookup',\n    },\n    'MATCH': {\n        method: 'match',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class IsEvenPlugin extends FunctionPlugin {\n    iseven(ast, formulaAddress) {\n        if (ast.args.length != 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const coercedValue = this.coerceScalarToNumberOrError(arg);\n        if (coercedValue instanceof CellError) {\n            return coercedValue;\n        }\n        else {\n            return (coercedValue % 2 === 0);\n        }\n    }\n}\nIsEvenPlugin.implementedFunctions = {\n    'ISEVEN': {\n        method: 'iseven',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class IsOddPlugin extends FunctionPlugin {\n    isodd(ast, formulaAddress) {\n        if (ast.args.length != 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const coercedValue = this.coerceScalarToNumberOrError(arg);\n        if (coercedValue instanceof CellError) {\n            return coercedValue;\n        }\n        else {\n            return (coercedValue % 2 === 1);\n        }\n    }\n}\nIsOddPlugin.implementedFunctions = {\n    'ISODD': {\n        method: 'isodd',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport function findNextOddNumber(arg) {\n    const ceiled = Math.ceil(arg);\n    return (ceiled % 2 === 1) ? ceiled : ceiled + 1;\n}\nexport function findNextEvenNumber(arg) {\n    const ceiled = Math.ceil(arg);\n    return (ceiled % 2 === 0) ? ceiled : ceiled + 1;\n}\nexport class RoundingPlugin extends FunctionPlugin {\n    roundup(ast, formulaAddress) {\n        return this.commonArgumentsHandling2(ast, formulaAddress, (numberToRound, places) => {\n            const placesMultiplier = Math.pow(10, places);\n            if (numberToRound < 0) {\n                return -Math.ceil(-numberToRound * placesMultiplier) / placesMultiplier;\n            }\n            else {\n                return Math.ceil(numberToRound * placesMultiplier) / placesMultiplier;\n            }\n        });\n    }\n    rounddown(ast, formulaAddress) {\n        return this.commonArgumentsHandling2(ast, formulaAddress, (numberToRound, places) => {\n            const placesMultiplier = Math.pow(10, places);\n            if (numberToRound < 0) {\n                return -Math.floor(-numberToRound * placesMultiplier) / placesMultiplier;\n            }\n            else {\n                return Math.floor(numberToRound * placesMultiplier) / placesMultiplier;\n            }\n        });\n    }\n    round(ast, formulaAddress) {\n        return this.commonArgumentsHandling2(ast, formulaAddress, (numberToRound, places) => {\n            const placesMultiplier = Math.pow(10, places);\n            if (numberToRound < 0) {\n                return -Math.round(-numberToRound * placesMultiplier) / placesMultiplier;\n            }\n            else {\n                return Math.round(numberToRound * placesMultiplier) / placesMultiplier;\n            }\n        });\n    }\n    trunc(ast, formulaAddress) {\n        return this.rounddown(ast, formulaAddress);\n    }\n    intFunc(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedNumberToRound) => {\n            if (coercedNumberToRound < 0) {\n                return -Math.floor(-coercedNumberToRound);\n            }\n            else {\n                return Math.floor(coercedNumberToRound);\n            }\n        });\n    }\n    even(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedNumberToRound) => {\n            if (coercedNumberToRound < 0) {\n                return -findNextEvenNumber(-coercedNumberToRound);\n            }\n            else {\n                return findNextEvenNumber(coercedNumberToRound);\n            }\n        });\n    }\n    odd(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (coercedNumberToRound) => {\n            if (coercedNumberToRound < 0) {\n                return -findNextOddNumber(-coercedNumberToRound);\n            }\n            else {\n                return findNextOddNumber(coercedNumberToRound);\n            }\n        });\n    }\n    ceiling(ast, formulaAddress) {\n        if (ast.args.length < 1 || ast.args.length > 3) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = this.getNumericArgument(ast, formulaAddress, 0);\n        if (value instanceof CellError) {\n            return value;\n        }\n        let significance = 1;\n        if (ast.args.length >= 2) {\n            significance = this.getNumericArgument(ast, formulaAddress, 1);\n            if (significance instanceof CellError) {\n                return significance;\n            }\n        }\n        let mode = 0;\n        if (ast.args.length === 3) {\n            mode = this.getNumericArgument(ast, formulaAddress, 2);\n            if (mode instanceof CellError) {\n                return mode;\n            }\n        }\n        if (significance === 0 || value === 0) {\n            return 0;\n        }\n        if ((value > 0) != (significance > 0) && ast.args.length > 1) {\n            return new CellError(ErrorType.NUM);\n        }\n        if (mode === 0) {\n            significance = Math.abs(significance);\n        }\n        return Math.ceil(value / significance) * significance;\n    }\n    commonArgumentsHandling2(ast, formulaAddress, roundingFunction) {\n        if (ast.args.length < 1 || ast.args.length > 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const numberToRound = this.evaluateAst(ast.args[0], formulaAddress);\n        if (numberToRound instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        let coercedPlaces;\n        if (ast.args[1]) {\n            const places = this.evaluateAst(ast.args[1], formulaAddress);\n            if (places instanceof SimpleRangeValue) {\n                return new CellError(ErrorType.VALUE);\n            }\n            coercedPlaces = this.coerceScalarToNumberOrError(places);\n        }\n        else {\n            coercedPlaces = 0;\n        }\n        const coercedNumberToRound = this.coerceScalarToNumberOrError(numberToRound);\n        if (coercedNumberToRound instanceof CellError) {\n            return coercedNumberToRound;\n        }\n        else if (coercedPlaces instanceof CellError) {\n            return coercedPlaces;\n        }\n        else {\n            return roundingFunction(coercedNumberToRound, coercedPlaces);\n        }\n    }\n}\nRoundingPlugin.implementedFunctions = {\n    'ROUNDUP': {\n        method: 'roundup',\n    },\n    'ROUNDDOWN': {\n        method: 'rounddown',\n    },\n    'ROUND': {\n        method: 'round',\n    },\n    'TRUNC': {\n        method: 'trunc',\n    },\n    'INT': {\n        method: 'intFunc',\n    },\n    'EVEN': {\n        method: 'even',\n    },\n    'ODD': {\n        method: 'odd',\n    },\n    'CEILING': {\n        method: 'ceiling',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { padLeft } from '../../format/format';\nimport { AstNodeType } from '../../parser';\nimport { coerceScalarToString } from '../ArithmeticHelper';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\nconst NUMBER_OF_BITS = 10;\nconst DECIMAL_NUMBER_OF_BITS = 255;\nconst MIN_BASE = 2;\nconst MAX_BASE = 36;\nconst ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport class RadixConversionPlugin extends FunctionPlugin {\n    dec2bin(ast, formulaAddress) {\n        return this.dec2base(ast, formulaAddress, 2);\n    }\n    dec2oct(ast, formulaAddress) {\n        return this.dec2base(ast, formulaAddress, 8);\n    }\n    dec2hex(ast, formulaAddress) {\n        return this.dec2base(ast, formulaAddress, 16);\n    }\n    bin2dec(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA);\n        }\n        const binaryWithSign = this.getFirstArgumentAsNumberInBase(ast, formulaAddress, 2, NUMBER_OF_BITS);\n        if (binaryWithSign instanceof CellError) {\n            return binaryWithSign;\n        }\n        return twoComplementToDecimal(binaryWithSign);\n    }\n    bin2oct(ast, formulaAddress) {\n        return this.bin2base(ast, formulaAddress, 8);\n    }\n    bin2hex(ast, formulaAddress) {\n        return this.bin2base(ast, formulaAddress, 16);\n    }\n    base(ast, formulaAddress) {\n        if (ast.args.length < 2 || ast.args.length > 3) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = this.getNumericArgument(ast, formulaAddress, 0);\n        if (value instanceof CellError) {\n            return value;\n        }\n        const base = this.getNumericArgument(ast, formulaAddress, 1, MIN_BASE, MAX_BASE);\n        if (base instanceof CellError) {\n            return base;\n        }\n        let padding;\n        if (ast.args.length === 3) {\n            padding = this.getNumericArgument(ast, formulaAddress, 2, 0, DECIMAL_NUMBER_OF_BITS);\n            if (padding instanceof CellError) {\n                return padding;\n            }\n        }\n        if (value < 0) {\n            return new CellError(ErrorType.NUM);\n        }\n        return decimalToBaseWithMinimumPadding(value, base, padding);\n    }\n    decimal(ast, formulaAddress) {\n        if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const base = this.getNumericArgument(ast, formulaAddress, 1, MIN_BASE, MAX_BASE);\n        if (base instanceof CellError) {\n            return base;\n        }\n        const input = this.getFirstArgumentAsNumberInBase(ast, formulaAddress, base, DECIMAL_NUMBER_OF_BITS);\n        if (input instanceof CellError) {\n            return input;\n        }\n        return parseInt(input, base);\n    }\n    bin2base(ast, formulaAddress, base) {\n        if (ast.args.length < 1 || ast.args.length > 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const binaryWithSign = this.getFirstArgumentAsNumberInBase(ast, formulaAddress, 2, NUMBER_OF_BITS);\n        if (binaryWithSign instanceof CellError) {\n            return binaryWithSign;\n        }\n        let places;\n        if (ast.args.length === 2) {\n            places = this.getNumericArgument(ast, formulaAddress, 1, 1, 10);\n            if (places instanceof CellError) {\n                return places;\n            }\n        }\n        const decimal = twoComplementToDecimal(binaryWithSign);\n        return decimalToBaseWithExactPadding(decimal, base, places);\n    }\n    dec2base(ast, formulaAddress, base) {\n        if (ast.args.length < 1 || ast.args.length > 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        let places;\n        if (ast.args.length === 2) {\n            places = this.getNumericArgument(ast, formulaAddress, 1, 1, 10);\n            if (places instanceof CellError) {\n                return places;\n            }\n        }\n        const min = -Math.pow(base, NUMBER_OF_BITS) / 2;\n        const max = -min - 1;\n        const value = this.getNumericArgument(ast, formulaAddress, 0, min, max);\n        if (value instanceof CellError) {\n            return value;\n        }\n        return decimalToBaseWithExactPadding(value, base, places);\n    }\n    getFirstArgumentAsNumberInBase(ast, formulaAddress, base, maxLength) {\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        const value = coerceScalarToString(arg);\n        if (typeof value === 'string') {\n            const baseAlphabet = ALPHABET.substr(0, base);\n            const regex = new RegExp(`^[${baseAlphabet}]+$`);\n            if (value.length > maxLength || !regex.test(value)) {\n                return new CellError(ErrorType.NUM);\n            }\n        }\n        return value;\n    }\n}\nRadixConversionPlugin.implementedFunctions = {\n    'DEC2BIN': {\n        method: 'dec2bin',\n    },\n    'DEC2OCT': {\n        method: 'dec2oct',\n    },\n    'DEC2HEX': {\n        method: 'dec2hex',\n    },\n    'BIN2DEC': {\n        method: 'bin2dec',\n    },\n    'BIN2OCT': {\n        method: 'bin2oct',\n    },\n    'BIN2HEX': {\n        method: 'bin2hex',\n    },\n    'DECIMAL': {\n        method: 'decimal',\n    },\n    'BASE': {\n        method: 'base',\n    },\n};\nfunction decimalToBaseWithExactPadding(value, base, places) {\n    const result = decimalToRadixComplement(value, base);\n    if (places === undefined || value < 0) {\n        return result;\n    }\n    else if (result.length > places) {\n        return new CellError(ErrorType.NUM);\n    }\n    else {\n        return padLeft(result, places);\n    }\n}\nfunction decimalToBaseWithMinimumPadding(value, base, places) {\n    const result = decimalToRadixComplement(value, base);\n    if (places !== undefined && places > result.length) {\n        return padLeft(result, places);\n    }\n    else {\n        return result;\n    }\n}\nfunction decimalToRadixComplement(value, base) {\n    const offset = value < 0 ? Math.pow(base, NUMBER_OF_BITS) : 0;\n    return (value + offset).toString(base).toUpperCase();\n}\nfunction twoComplementToDecimal(value) {\n    const offset = (value.length == NUMBER_OF_BITS && value.startsWith('1')) ? Math.pow(2, NUMBER_OF_BITS) : 0;\n    return parseInt(value, 2) - offset;\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { SimpleRangeValue } from '../InterpreterValue';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class LogarithmPlugin extends FunctionPlugin {\n    log10(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (arg) => {\n            if (arg > 0) {\n                return Math.log10(arg);\n            }\n            else {\n                return new CellError(ErrorType.NUM);\n            }\n        });\n    }\n    log(ast, formulaAddress) {\n        if (ast.args.length < 1 || ast.args.length > 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const arg = this.evaluateAst(ast.args[0], formulaAddress);\n        if (arg instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE);\n        }\n        let coercedLogarithmicBase;\n        if (ast.args[1]) {\n            const logarithmicBase = this.evaluateAst(ast.args[1], formulaAddress);\n            if (logarithmicBase instanceof SimpleRangeValue) {\n                return new CellError(ErrorType.VALUE);\n            }\n            coercedLogarithmicBase = this.coerceScalarToNumberOrError(logarithmicBase);\n        }\n        else {\n            coercedLogarithmicBase = 10;\n        }\n        const coercedArg = this.coerceScalarToNumberOrError(arg);\n        if (coercedArg instanceof CellError) {\n            return coercedArg;\n        }\n        else if (coercedLogarithmicBase instanceof CellError) {\n            return coercedLogarithmicBase;\n        }\n        else {\n            if (coercedArg > 0 && coercedLogarithmicBase > 0) {\n                return (Math.log(coercedArg) / Math.log(coercedLogarithmicBase));\n            }\n            else {\n                return new CellError(ErrorType.NUM);\n            }\n        }\n    }\n    ln(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (arg) => {\n            if (arg > 0) {\n                return Math.log(arg);\n            }\n            else {\n                return new CellError(ErrorType.NUM);\n            }\n        });\n    }\n}\nLogarithmPlugin.implementedFunctions = {\n    'LOG10': {\n        method: 'log10',\n    },\n    'LOG': {\n        method: 'log',\n    },\n    'LN': {\n        method: 'ln',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class BitwiseLogicOperationsPlugin extends FunctionPlugin {\n    bitand(ast, formulaAddress) {\n        return this.templateWithTwoPositiveIntegerArguments(ast, formulaAddress, (left, right) => {\n            return left & right;\n        });\n    }\n    bitor(ast, formulaAddress) {\n        return this.templateWithTwoPositiveIntegerArguments(ast, formulaAddress, (left, right) => {\n            return left | right;\n        });\n    }\n    bitxor(ast, formulaAddress) {\n        return this.templateWithTwoPositiveIntegerArguments(ast, formulaAddress, (left, right) => {\n            return left ^ right;\n        });\n    }\n    templateWithTwoPositiveIntegerArguments(ast, formulaAddress, fn) {\n        const validationResult = this.validateTwoNumericArguments(ast, formulaAddress);\n        if (validationResult instanceof CellError) {\n            return validationResult;\n        }\n        const [coercedLeft, coercedRight] = validationResult;\n        if (coercedLeft < 0 || coercedRight < 0 || !Number.isInteger(coercedLeft) || !Number.isInteger(coercedRight)) {\n            return new CellError(ErrorType.NUM);\n        }\n        return fn(coercedLeft, coercedRight);\n    }\n}\nBitwiseLogicOperationsPlugin.implementedFunctions = {\n    'BITAND': {\n        method: 'bitand',\n    },\n    'BITOR': {\n        method: 'bitor',\n    },\n    'BITXOR': {\n        method: 'bitxor',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FunctionPlugin } from './FunctionPlugin';\nconst MAX_48BIT_INTEGER = 281474976710655;\nconst SHIFT_MIN_POSITIONS = -53;\nconst SHIFT_MAX_POSITIONS = 53;\nexport class BitShiftPlugin extends FunctionPlugin {\n    bitlshift(ast, formulaAddress) {\n        return this.bitshiftTemplate(ast, formulaAddress, shiftLeft);\n    }\n    bitrshift(ast, formulaAddress) {\n        return this.bitshiftTemplate(ast, formulaAddress, shiftRight);\n    }\n    bitshiftTemplate(ast, formulaAddress, fn) {\n        const validationResult = this.validateTwoNumericArguments(ast, formulaAddress);\n        if (validationResult instanceof CellError) {\n            return validationResult;\n        }\n        const [coercedValue, coercedPositions] = validationResult;\n        if (coercedValue < 0 || !Number.isInteger(coercedValue) || !Number.isInteger(coercedPositions)) {\n            return new CellError(ErrorType.NUM);\n        }\n        if (coercedPositions < SHIFT_MIN_POSITIONS || coercedPositions > SHIFT_MAX_POSITIONS) {\n            return new CellError(ErrorType.NUM);\n        }\n        const result = fn(coercedValue, coercedPositions);\n        if (result > MAX_48BIT_INTEGER) {\n            return new CellError(ErrorType.NUM);\n        }\n        else {\n            return result;\n        }\n    }\n}\nBitShiftPlugin.implementedFunctions = {\n    'BITLSHIFT': {\n        method: 'bitlshift',\n    },\n    'BITRSHIFT': {\n        method: 'bitrshift',\n    },\n};\nfunction shiftLeft(value, positions) {\n    if (positions < 0) {\n        return shiftRight(value, -positions);\n    }\n    else {\n        return value * Math.pow(2, positions);\n    }\n}\nfunction shiftRight(value, positions) {\n    if (positions < 0) {\n        return shiftLeft(value, -positions);\n    }\n    else {\n        return Math.floor(value / Math.pow(2, positions));\n    }\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class PowerPlugin extends FunctionPlugin {\n    power(ast, formulaAddress) {\n        const validationResult = this.validateTwoNumericArguments(ast, formulaAddress);\n        if (validationResult instanceof CellError) {\n            return validationResult;\n        }\n        const [coercedBase, coercedExponent] = validationResult;\n        if (coercedBase === 0 && coercedExponent < 0) {\n            return new CellError(ErrorType.NUM);\n        }\n        const value = Math.pow(coercedBase, coercedExponent);\n        if (!Number.isFinite(value)) {\n            return new CellError(ErrorType.NUM);\n        }\n        else {\n            return value;\n        }\n    }\n}\nPowerPlugin.implementedFunctions = {\n    'POWER': {\n        method: 'power',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { FunctionPlugin } from './FunctionPlugin';\nconst PI = parseFloat(Math.PI.toFixed(14));\nconst E = parseFloat(Math.E.toFixed(14));\nexport class MathConstantsPlugin extends FunctionPlugin {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    pi(ast, formulaAddress) {\n        if (ast.args.length > 0) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        return PI;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    e(ast, formulaAddress) {\n        if (ast.args.length > 0) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        return E;\n    }\n}\nMathConstantsPlugin.implementedFunctions = {\n    'PI': {\n        method: 'pi',\n    },\n    'E': {\n        method: 'e',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class SqrtPlugin extends FunctionPlugin {\n    sqrt(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (input) => {\n            if (input < 0) {\n                return new CellError(ErrorType.NUM);\n            }\n            else {\n                return Math.sqrt(input);\n            }\n        });\n    }\n}\nSqrtPlugin.implementedFunctions = {\n    'SQRT': {\n        method: 'sqrt',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class ModuloPlugin extends FunctionPlugin {\n    mod(ast, formulaAddress) {\n        const validationResult = this.validateTwoNumericArguments(ast, formulaAddress);\n        if (validationResult instanceof CellError) {\n            return validationResult;\n        }\n        const [dividend, divisor] = validationResult;\n        if (divisor === 0) {\n            return new CellError(ErrorType.DIV_BY_ZERO);\n        }\n        return dividend % divisor;\n    }\n}\nModuloPlugin.implementedFunctions = {\n    'MOD': {\n        method: 'mod',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class DeltaPlugin extends FunctionPlugin {\n    delta(ast, formulaAddress) {\n        if (ast.args.length < 1 || ast.args.length > 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const left = this.getNumericArgument(ast, formulaAddress, 0);\n        if (left instanceof CellError) {\n            return left;\n        }\n        let right = 0;\n        if (ast.args.length === 2) {\n            right = this.getNumericArgument(ast, formulaAddress, 1);\n            if (right instanceof CellError) {\n                return right;\n            }\n        }\n        return left === right ? 1 : 0;\n    }\n}\nDeltaPlugin.implementedFunctions = {\n    'DELTA': {\n        method: 'delta',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class CharPlugin extends FunctionPlugin {\n    char(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (value) => {\n            if (value < 1 || value > 255) {\n                return new CellError(ErrorType.NUM);\n            }\n            return String.fromCharCode(value);\n        });\n    }\n}\nCharPlugin.implementedFunctions = {\n    'CHAR': {\n        method: 'char',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class CodePlugin extends FunctionPlugin {\n    code(ast, formulaAddress) {\n        return this.templateWithOneCoercedToStringArgument(ast, formulaAddress, (value) => {\n            if (value.length === 0) {\n                return new CellError(ErrorType.VALUE);\n            }\n            return value.charCodeAt(0);\n        });\n    }\n}\nCodePlugin.implementedFunctions = {\n    'CODE': {\n        method: 'code',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class ErrorFunctionPlugin extends FunctionPlugin {\n    erf(ast, formulaAddress) {\n        if (ast.args.length < 1 || ast.args.length > 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const lowerBound = this.getNumericArgument(ast, formulaAddress, 0);\n        if (lowerBound instanceof CellError) {\n            return lowerBound;\n        }\n        if (ast.args.length === 2) {\n            const upperBound = this.getNumericArgument(ast, formulaAddress, 1);\n            if (upperBound instanceof CellError) {\n                return upperBound;\n            }\n            return erf2(lowerBound, upperBound);\n        }\n        return erf(lowerBound);\n    }\n    erfc(ast, formulaAddress) {\n        return this.templateWithOneCoercedToNumberArgument(ast, formulaAddress, (arg) => {\n            return erfc(arg);\n        });\n    }\n}\nErrorFunctionPlugin.implementedFunctions = {\n    'ERF': {\n        method: 'erf',\n    },\n    'ERFC': {\n        method: 'erfc',\n    },\n};\nfunction erf(x) {\n    if (x >= 0) {\n        return erfApprox(x);\n    }\n    else {\n        return -erfApprox(-x);\n    }\n}\nfunction erfApprox(x) {\n    const polyExponent = 16;\n    const coefficients = [\n        0.0705230784,\n        0.0422820123,\n        0.0092705272,\n        0.0001520143,\n        0.0002765672,\n        0.0000430638,\n    ];\n    const poly = coefficients.reduce((acc, coefficient, index) => {\n        return acc + coefficient * Math.pow(x, index + 1);\n    }, 1);\n    return 1 - (1 / Math.pow(poly, polyExponent));\n}\nfunction erf2(lowerBound, upperBound) {\n    return erf(upperBound) - erf(lowerBound);\n}\nfunction erfc(x) {\n    return 1 - erf(x);\n}\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { AstNodeType } from '../../parser';\nimport { coerceToRange } from '../ArithmeticHelper';\nimport { FunctionPlugin } from './FunctionPlugin';\nexport class CorrelPlugin extends FunctionPlugin {\n    correl(ast, formulaAddress) {\n        if (ast.args.length != 2) {\n            return new CellError(ErrorType.NA);\n        }\n        if (ast.args.some((ast) => ast.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM);\n        }\n        const dataX = coerceToRange(this.evaluateAst(ast.args[0], formulaAddress));\n        const dataY = coerceToRange(this.evaluateAst(ast.args[1], formulaAddress));\n        if (dataX.numberOfElements() !== dataY.numberOfElements()) {\n            return new CellError(ErrorType.NA);\n        }\n        if (dataX.numberOfElements() <= 1) {\n            return new CellError(ErrorType.DIV_BY_ZERO);\n        }\n        return this.computePearson(dataX, dataY);\n    }\n    computePearson(dataX, dataY) {\n        const xit = dataX.valuesFromTopLeftCorner();\n        const yit = dataY.valuesFromTopLeftCorner();\n        let x, y;\n        let count = 0;\n        let sumX = 0;\n        let sumY = 0;\n        let sumXsquares = 0;\n        let sumYsquares = 0;\n        let sumOfProducts = 0;\n        while (x = xit.next(), y = yit.next(), !x.done && !y.done) {\n            const xval = x.value;\n            const yval = y.value;\n            if (xval instanceof CellError) {\n                return xval;\n            }\n            else if (yval instanceof CellError) {\n                return yval;\n            }\n            else if (typeof xval === 'number' && typeof yval === 'number') {\n                count++;\n                sumX += xval;\n                sumY += yval;\n                sumXsquares += xval * xval;\n                sumYsquares += yval * yval;\n                sumOfProducts += xval * yval;\n            }\n        }\n        return ((count * sumOfProducts - sumX * sumY) /\n            (Math.sqrt(count * sumXsquares - sumX * sumX) * Math.sqrt(count * sumYsquares - sumY * sumY)));\n    }\n}\nCorrelPlugin.implementedFunctions = {\n    'CORREL': {\n        method: 'correl',\n    },\n};\n","/**\n * @license\n * Copyright (c) 2020 Handsoncode. All rights reserved.\n */\nimport { FunctionPlugin } from './plugin/FunctionPlugin';\nexport { FunctionPlugin };\n"],"sourceRoot":""}