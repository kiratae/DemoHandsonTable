/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/hyperformula@0.1.3/es/format/parser.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import"core-js/modules/es.array.every";import"core-js/modules/es.regexp.exec";import"core-js/modules/es.string.starts-with";var dateFormatRegex=/(\\.|dd|DD|d|D|mm|MM|m|M|YYYY|YY|yyyy|yy|HH|hh|H|h|ss(\.(0+|s+))?|s|AM\/PM|am\/pm|A\/P|a\/p|\[mm]|\[MM]|\[hh]|\[HH])/g,numberFormatRegex=/(\\.|[#0]+(\.[#0]*)?)/g;export var TokenType;!function(e){e.FORMAT="FORMAT",e.FREE_TEXT="FREE_TEXT"}(TokenType||(TokenType={}));export function formatToken(e,r){return{type:e,value:r}}export var FormatExpressionType;function matchDateFormat(e){dateFormatRegex.lastIndex=0;var r,t=[];do{null!==(r=dateFormatRegex.exec(e))&&t.push(r)}while(r);return t}function matchNumberFormat(e){numberFormatRegex.lastIndex=0;var r=numberFormatRegex.exec(e);return null!==r?[r]:[]}function createTokens(e,r){for(var t=[],o=0,n=0;n<e.length;++n){var a=e[n];if(a.index!==o){var s=r.substr(o,a.index-o);t.push(formatToken(TokenType.FREE_TEXT,s))}a[0].startsWith("\\")?t.push(formatToken(TokenType.FREE_TEXT,a[0])):t.push(formatToken(TokenType.FORMAT,a[0])),o=a.index+a[0].length}var T=e[e.length-1];if(T.index+T[0].length<r.length){var m=r.substr(T.index+T[0].length,r.length);t.push(formatToken(TokenType.FREE_TEXT,m))}return t}!function(e){e.DATE="DATE",e.NUMBER="NUMBER",e.STRING="STRING"}(FormatExpressionType||(FormatExpressionType={}));export function parseForDateTimeFormat(e){var r=matchDateFormat(e);return r.every(function(e){return isEscapeToken(e)})?void 0:{type:FormatExpressionType.DATE,tokens:createTokens(r,e)}}export function parseForNumberFormat(e){var r=matchNumberFormat(e);return r.every(function(e){return isEscapeToken(e)})?void 0:{type:FormatExpressionType.NUMBER,tokens:createTokens(r,e)}}export function parse(e){var r,t;return null!==(t=null!==(r=parseForDateTimeFormat(e))&&void 0!==r?r:parseForNumberFormat(e))&&void 0!==t?t:{type:FormatExpressionType.STRING,tokens:[{type:TokenType.FREE_TEXT,value:e}]}}export function isEscapeToken(e){return e[0].startsWith("\\")}
//# sourceMappingURL=/sm/ca2c7fbd633612151a49c9a861d6d61dc962a231fc77588c21bdbc207e8cbc32.map